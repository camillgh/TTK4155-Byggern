
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  00001348  000013dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001348  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  00800178  00800178  00001454  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001454  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  000014ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001908  00000000  00000000  00001674  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f8a  00000000  00000000  00002f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e99  00000000  00000000  00003f06  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000358  00000000  00000000  00004da0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000727  00000000  00000000  000050f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e7  00000000  00000000  0000581f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00006206  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x16>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e8 e4       	ldi	r30, 0x48	; 72
     37c:	f3 e1       	ldi	r31, 0x13	; 19
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 37       	cpi	r26, 0x78	; 120
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a8 e7       	ldi	r26, 0x78	; 120
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a7 3b       	cpi	r26, 0xB7	; 183
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <main>
     39e:	0c 94 a2 09 	jmp	0x1344	; 0x1344 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:

//volatile char *adc = (char *) 0x1400;


int adc_init(void){
	MCUCR |= (1 << SRE);
     3a6:	85 b7       	in	r24, 0x35	; 53
     3a8:	80 68       	ori	r24, 0x80	; 128
     3aa:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);
     3ac:	80 b7       	in	r24, 0x30	; 48
     3ae:	80 62       	ori	r24, 0x20	; 32
     3b0:	80 bf       	out	0x30, r24	; 48
	
	DDRE &= ~(1<<PINE0);
     3b2:	30 98       	cbi	0x06, 0	; 6
	//*adc = 2;
	//*adc = 3;
	//*adc = 4;
	
	return 0;
}
     3b4:	80 e0       	ldi	r24, 0x00	; 0
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	08 95       	ret

000003ba <adc_clock_signal>:



void adc_clock_signal(void){
	
	DDRB |= (1<< PB0);
     3ba:	b8 9a       	sbi	0x17, 0	; 23
	
	TCCR0 |= (1<< WGM01);
     3bc:	83 b7       	in	r24, 0x33	; 51
     3be:	88 60       	ori	r24, 0x08	; 8
     3c0:	83 bf       	out	0x33, r24	; 51
	//TCCR0 = 0X11;
	TCCR0 &= ~(1<< WGM00);
     3c2:	83 b7       	in	r24, 0x33	; 51
     3c4:	8f 7b       	andi	r24, 0xBF	; 191
     3c6:	83 bf       	out	0x33, r24	; 51
	
	TCCR0 |= (1<<COM00);
     3c8:	83 b7       	in	r24, 0x33	; 51
     3ca:	80 61       	ori	r24, 0x10	; 16
     3cc:	83 bf       	out	0x33, r24	; 51
	//TCCR0 |= (1<<COM01);
	
	TCCR0 |= (1<<CS00);
     3ce:	83 b7       	in	r24, 0x33	; 51
     3d0:	81 60       	ori	r24, 0x01	; 1
     3d2:	83 bf       	out	0x33, r24	; 51
	//TCCR0 |= (1<<CS01);
	//TCCR0 |= (1<<CS02);

	
	OCR0 = 10;
     3d4:	8a e0       	ldi	r24, 0x0A	; 10
     3d6:	81 bf       	out	0x31, r24	; 49
     3d8:	08 95       	ret

000003da <adc_read>:

uint8_t adc_read(uint8_t channel){
	volatile char *adc = (char *) 0x1400;
	uint8_t data;
	
	adc[0] = 0b10000000 | channel;
     3da:	80 68       	ori	r24, 0x80	; 128
     3dc:	e0 e0       	ldi	r30, 0x00	; 0
     3de:	f4 e1       	ldi	r31, 0x14	; 20
     3e0:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3e2:	84 ea       	ldi	r24, 0xA4	; 164
     3e4:	8a 95       	dec	r24
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <adc_read+0xa>

	_delay_us(100);
	
	data = adc[0];
     3e8:	80 81       	ld	r24, Z
	
	return data;
}
     3ea:	08 95       	ret

000003ec <joystick_pos>:
joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
	uint8_t x,y;
	
	x = adc_read(0);
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_read>
	y = adc_read(1);
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_read>
     3fc:	38 2f       	mov	r19, r24
	} 
		
	if (x == x_mid) {
		position.position_x = 0;
	}*/
	uint8_t y_diff = y-y_mid;
     3fe:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
	
	//Calculate position y percentage
	if(y > y_mid) {
     402:	28 17       	cp	r18, r24
     404:	a0 f4       	brcc	.+40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
     406:	e2 2f       	mov	r30, r18
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	48 2f       	mov	r20, r24
     40c:	50 e0       	ldi	r21, 0x00	; 0
     40e:	4e 1b       	sub	r20, r30
     410:	5f 0b       	sbc	r21, r31
     412:	64 e6       	ldi	r22, 0x64	; 100
     414:	64 9f       	mul	r22, r20
     416:	c0 01       	movw	r24, r0
     418:	65 9f       	mul	r22, r21
     41a:	90 0d       	add	r25, r0
     41c:	11 24       	eor	r1, r1
     41e:	6f ef       	ldi	r22, 0xFF	; 255
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	6e 1b       	sub	r22, r30
     424:	7f 0b       	sbc	r23, r31
     426:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__divmodhi4>
     42a:	96 2f       	mov	r25, r22
     42c:	01 c0       	rjmp	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
     42e:	90 e0       	ldi	r25, 0x00	; 0
	
	//Calculate position y percentage
	if(y > y_mid) {
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
	}
	if (y < y_mid) {
     430:	32 17       	cp	r19, r18
     432:	78 f4       	brcc	.+30     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
		position.position_y = 100*(y-y_mid)/y_mid;
     434:	62 2f       	mov	r22, r18
     436:	70 e0       	ldi	r23, 0x00	; 0
     438:	43 2f       	mov	r20, r19
     43a:	50 e0       	ldi	r21, 0x00	; 0
     43c:	46 1b       	sub	r20, r22
     43e:	57 0b       	sbc	r21, r23
     440:	e4 e6       	ldi	r30, 0x64	; 100
     442:	e4 9f       	mul	r30, r20
     444:	c0 01       	movw	r24, r0
     446:	e5 9f       	mul	r30, r21
     448:	90 0d       	add	r25, r0
     44a:	11 24       	eor	r1, r1
     44c:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__divmodhi4>
     450:	96 2f       	mov	r25, r22
	} if (y == y_mid) {
     452:	32 13       	cpse	r19, r18
     454:	01 c0       	rjmp	.+2      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
		position.position_y = 0;
     456:	90 e0       	ldi	r25, 0x00	; 0
	//position.position_y = ((y - y_mid)/(255-y_mid))*100;
	
	//printf("%d \n \r", position.position_x);

	return position;
}
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	08 95       	ret

0000045c <joystick_calibration>:
	printf("Dir: %d", position.position_y);
	return position;
	
};*/

void joystick_calibration(void){
     45c:	cf 93       	push	r28
	
	uint8_t x,y;
	
	x = adc_read(0);
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_read>
     466:	c8 2f       	mov	r28, r24
	y = adc_read(1);
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_read>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     470:	ec ec       	ldi	r30, 0xCC	; 204
     472:	f4 e0       	ldi	r31, 0x04	; 4
     474:	31 97       	sbiw	r30, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <joystick_calibration+0x18>
     478:	00 c0       	rjmp	.+0      	; 0x47a <joystick_calibration+0x1e>
     47a:	00 00       	nop
	_delay_ms(1);
	x_mid = x;
     47c:	c0 93 79 01 	sts	0x0179, r28	; 0x800179 <x_mid>
	y_mid = y;
     480:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
}
     484:	cf 91       	pop	r28
     486:	08 95       	ret

00000488 <joystick_init>:
	
	// Initialize external units
	//adc_init();
	
	// Set PINB1, PINB2 and PINB3 as inputs
	DDRB &= ~(1<<PINB1) & ~(1<<PINB2) & ~(1<<PINB3);
     488:	87 b3       	in	r24, 0x17	; 23
     48a:	81 7f       	andi	r24, 0xF1	; 241
     48c:	87 bb       	out	0x17, r24	; 23
	
	// Calibrate joystick
	joystick_calibration();
     48e:	0e 94 2e 02 	call	0x45c	; 0x45c <joystick_calibration>
     492:	08 95       	ret

00000494 <joystick_slider_position>:
}



slider_position joystick_slider_position(void)
{
     494:	cf 93       	push	r28
	slider_position position = {0,0};
	uint8_t left, right;
	
	left = adc_read(3);
     496:	83 e0       	ldi	r24, 0x03	; 3
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_read>
     49e:	c8 2f       	mov	r28, r24
	right = adc_read(2);
     4a0:	82 e0       	ldi	r24, 0x02	; 2
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_read>
     4a8:	48 2f       	mov	r20, r24
	//printf("%d \n",left);
	position.position_right = right*100/255;
	position.position_left = left*100/255;
		
	return position;
     4aa:	24 e6       	ldi	r18, 0x64	; 100
     4ac:	2c 9f       	mul	r18, r28
     4ae:	c0 01       	movw	r24, r0
     4b0:	11 24       	eor	r1, r1
     4b2:	ef ef       	ldi	r30, 0xFF	; 255
     4b4:	f0 e0       	ldi	r31, 0x00	; 0
     4b6:	bf 01       	movw	r22, r30
     4b8:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__divmodhi4>
     4bc:	36 2f       	mov	r19, r22
     4be:	24 9f       	mul	r18, r20
     4c0:	c0 01       	movw	r24, r0
     4c2:	11 24       	eor	r1, r1
     4c4:	bf 01       	movw	r22, r30
     4c6:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__divmodhi4>
     4ca:	96 2f       	mov	r25, r22
}
     4cc:	83 2f       	mov	r24, r19
     4ce:	cf 91       	pop	r28
     4d0:	08 95       	ret

000004d2 <main>:

void main(void){

	joystick_position j_position;
	slider_position s_position;
	adc_init();
     4d2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	USART_init(MYUBRR);
     4d6:	8f e1       	ldi	r24, 0x1F	; 31
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 00 05 	call	0xa00	; 0xa00 <USART_init>
	adc_clock_signal();
     4de:	0e 94 dd 01 	call	0x3ba	; 0x3ba <adc_clock_signal>
	joystick_init();
     4e2:	0e 94 44 02 	call	0x488	; 0x488 <joystick_init>
	SRAM_init();
     4e6:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <SRAM_init>

	oled_init();
     4ea:	0e 94 38 04 	call	0x870	; 0x870 <oled_init>
	oled_reset();
     4ee:	0e 94 2c 04 	call	0x858	; 0x858 <oled_reset>
	oled_pos(0,0);	
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	0e 94 d7 04 	call	0x9ae	; 0x9ae <oled_pos>

	menu_init();
     4fa:	0e 94 96 02 	call	0x52c	; 0x52c <menu_init>
		/* Assignment 4*/
			
		show_menu();
		navigate_menu(j_position);
		update_currentmenu();
		printf(current_menu.name);
     4fe:	ca e7       	ldi	r28, 0x7A	; 122
     500:	d1 e0       	ldi	r29, 0x01	; 1
		
		int button_l = 0;
		int button_r = 0;	*/
		int button_joy = 0;
		
		j_position = joystick_pos();
     502:	0e 94 f6 01 	call	0x3ec	; 0x3ec <joystick_pos>
     506:	8c 01       	movw	r16, r24
		//printf("Position 1: %d\n\r", j_position.position_x);
		//j_position = joystick_direction();
		s_position = joystick_slider_position();
     508:	0e 94 4a 02 	call	0x494	; 0x494 <joystick_slider_position>
		//printf("(%d,%d)", j_position.position_x, j_position.position_y);
		_delay_ms(1);*/
		
		/* Assignment 4*/
			
		show_menu();
     50c:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show_menu>
		navigate_menu(j_position);
     510:	c8 01       	movw	r24, r16
     512:	0e 94 25 03 	call	0x64a	; 0x64a <navigate_menu>
		update_currentmenu();
     516:	0e 94 4d 03 	call	0x69a	; 0x69a <update_currentmenu>
		printf(current_menu.name);
     51a:	89 81       	ldd	r24, Y+1	; 0x01
     51c:	8f 93       	push	r24
     51e:	88 81       	ld	r24, Y
     520:	8f 93       	push	r24
     522:	0e 94 80 05 	call	0xb00	; 0xb00 <printf>
     526:	0f 90       	pop	r0
     528:	0f 90       	pop	r0
     52a:	eb cf       	rjmp	.-42     	; 0x502 <__stack+0x3>

0000052c <menu_init>:
#include <util/delay.h>

menu main, start_game, options, high_score;
uint8_t cursor_page;

void menu_init(void){
     52c:	cf 93       	push	r28
     52e:	df 93       	push	r29
	main.name = "Main Menu";
     530:	e2 ed       	ldi	r30, 0xD2	; 210
     532:	f4 e0       	ldi	r31, 0x04	; 4
     534:	8a e0       	ldi	r24, 0x0A	; 10
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	91 83       	std	Z+1, r25	; 0x01
     53a:	80 83       	st	Z, r24
	main.parent = NULL;
     53c:	13 82       	std	Z+3, r1	; 0x03
     53e:	12 82       	std	Z+2, r1	; 0x02
	main.children[0] = &start_game;
     540:	82 e9       	ldi	r24, 0x92	; 146
     542:	91 e0       	ldi	r25, 0x01	; 1
     544:	95 83       	std	Z+5, r25	; 0x05
     546:	84 83       	std	Z+4, r24	; 0x04
	main.children[1] = &options;
     548:	ce e9       	ldi	r28, 0x9E	; 158
     54a:	d1 e0       	ldi	r29, 0x01	; 1
     54c:	d7 83       	std	Z+7, r29	; 0x07
     54e:	c6 83       	std	Z+6, r28	; 0x06
	main.children[2] = &high_score;
     550:	46 e8       	ldi	r20, 0x86	; 134
     552:	51 e0       	ldi	r21, 0x01	; 1
     554:	51 87       	std	Z+9, r21	; 0x09
     556:	40 87       	std	Z+8, r20	; 0x08
	main.children[3] = NULL;
     558:	13 86       	std	Z+11, r1	; 0x0b
     55a:	12 86       	std	Z+10, r1	; 0x0a

	start_game.name = "Start Game";
     55c:	24 e1       	ldi	r18, 0x14	; 20
     55e:	31 e0       	ldi	r19, 0x01	; 1
     560:	dc 01       	movw	r26, r24
     562:	11 96       	adiw	r26, 0x01	; 1
     564:	3c 93       	st	X, r19
     566:	2e 93       	st	-X, r18
	start_game.parent = &main;
     568:	13 96       	adiw	r26, 0x03	; 3
     56a:	fc 93       	st	X, r31
     56c:	ee 93       	st	-X, r30
     56e:	12 97       	sbiw	r26, 0x02	; 2
	start_game.children[0] = NULL;
     570:	15 96       	adiw	r26, 0x05	; 5
     572:	1c 92       	st	X, r1
     574:	1e 92       	st	-X, r1
     576:	14 97       	sbiw	r26, 0x04	; 4
	start_game.children[1] = NULL;
     578:	17 96       	adiw	r26, 0x07	; 7
     57a:	1c 92       	st	X, r1
     57c:	1e 92       	st	-X, r1
     57e:	16 97       	sbiw	r26, 0x06	; 6
	start_game.children[2] = NULL;
     580:	19 96       	adiw	r26, 0x09	; 9
     582:	1c 92       	st	X, r1
     584:	1e 92       	st	-X, r1
     586:	18 97       	sbiw	r26, 0x08	; 8

	options.name = "Options";
     588:	8f e1       	ldi	r24, 0x1F	; 31
     58a:	91 e0       	ldi	r25, 0x01	; 1
     58c:	99 83       	std	Y+1, r25	; 0x01
     58e:	88 83       	st	Y, r24
	options.parent = &main;
     590:	fb 83       	std	Y+3, r31	; 0x03
     592:	ea 83       	std	Y+2, r30	; 0x02
	options.children[0] = NULL;
     594:	1d 82       	std	Y+5, r1	; 0x05
     596:	1c 82       	std	Y+4, r1	; 0x04
	options.children[1] = NULL;
     598:	1f 82       	std	Y+7, r1	; 0x07
     59a:	1e 82       	std	Y+6, r1	; 0x06
	options.children[2] = NULL;
     59c:	19 86       	std	Y+9, r1	; 0x09
     59e:	18 86       	std	Y+8, r1	; 0x08

	high_score.name = "High Scores";
     5a0:	87 e2       	ldi	r24, 0x27	; 39
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	da 01       	movw	r26, r20
     5a6:	11 96       	adiw	r26, 0x01	; 1
     5a8:	9c 93       	st	X, r25
     5aa:	8e 93       	st	-X, r24
	high_score.parent = &main;
     5ac:	13 96       	adiw	r26, 0x03	; 3
     5ae:	fc 93       	st	X, r31
     5b0:	ee 93       	st	-X, r30
     5b2:	12 97       	sbiw	r26, 0x02	; 2
	high_score.children[0] = NULL;
     5b4:	15 96       	adiw	r26, 0x05	; 5
     5b6:	1c 92       	st	X, r1
     5b8:	1e 92       	st	-X, r1
     5ba:	14 97       	sbiw	r26, 0x04	; 4
	high_score.children[1] = NULL;
     5bc:	17 96       	adiw	r26, 0x07	; 7
     5be:	1c 92       	st	X, r1
     5c0:	1e 92       	st	-X, r1
     5c2:	16 97       	sbiw	r26, 0x06	; 6
	high_score.children[2] = NULL;
     5c4:	19 96       	adiw	r26, 0x09	; 9
     5c6:	1c 92       	st	X, r1
     5c8:	1e 92       	st	-X, r1
     5ca:	18 97       	sbiw	r26, 0x08	; 8
	
	current_menu = main;
     5cc:	8c e0       	ldi	r24, 0x0C	; 12
     5ce:	aa e7       	ldi	r26, 0x7A	; 122
     5d0:	b1 e0       	ldi	r27, 0x01	; 1
     5d2:	01 90       	ld	r0, Z+
     5d4:	0d 92       	st	X+, r0
     5d6:	8a 95       	dec	r24
     5d8:	e1 f7       	brne	.-8      	; 0x5d2 <menu_init+0xa6>
	cursor_page = 2;
     5da:	82 e0       	ldi	r24, 0x02	; 2
     5dc:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <cursor_page>
};
     5e0:	df 91       	pop	r29
     5e2:	cf 91       	pop	r28
     5e4:	08 95       	ret

000005e6 <show_menu>:


int show_menu(void){
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
	oled_reset();
     5ec:	0e 94 2c 04 	call	0x858	; 0x858 <oled_reset>
	oled_home();
     5f0:	0e 94 dd 03 	call	0x7ba	; 0x7ba <oled_home>
		oled_pos(4,0);
		oled_print("MEE");
	}
	
	*/
	oled_print(current_menu.name);
     5f4:	ca e7       	ldi	r28, 0x7A	; 122
     5f6:	d1 e0       	ldi	r29, 0x01	; 1
     5f8:	88 81       	ld	r24, Y
     5fa:	99 81       	ldd	r25, Y+1	; 0x01
     5fc:	0e 94 bb 03 	call	0x776	; 0x776 <oled_print>

	menu child;
	
	
	int i = 0;
	while (current_menu.children[i] != NULL){
     600:	8c 81       	ldd	r24, Y+4	; 0x04
     602:	9d 81       	ldd	r25, Y+5	; 0x05
     604:	89 2b       	or	r24, r25
     606:	91 f0       	breq	.+36     	; 0x62c <show_menu+0x46>
     608:	ce e7       	ldi	r28, 0x7E	; 126
     60a:	d1 e0       	ldi	r29, 0x01	; 1
     60c:	12 e0       	ldi	r17, 0x02	; 2
		oled_pos(i+2,0);
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	81 2f       	mov	r24, r17
     612:	0e 94 d7 04 	call	0x9ae	; 0x9ae <oled_pos>
		menu *child = current_menu.children[i];
     616:	e9 91       	ld	r30, Y+
     618:	f9 91       	ld	r31, Y+
		oled_print(child->name);
     61a:	80 81       	ld	r24, Z
     61c:	91 81       	ldd	r25, Z+1	; 0x01
     61e:	0e 94 bb 03 	call	0x776	; 0x776 <oled_print>
     622:	1f 5f       	subi	r17, 0xFF	; 255

	menu child;
	
	
	int i = 0;
	while (current_menu.children[i] != NULL){
     624:	88 81       	ld	r24, Y
     626:	99 81       	ldd	r25, Y+1	; 0x01
     628:	89 2b       	or	r24, r25
     62a:	89 f7       	brne	.-30     	; 0x60e <show_menu+0x28>
		//oled_print(current_menu.children[i]->name);
		i++;		
	}
	
	
	oled_pos(cursor_page, 10);
     62c:	6a e0       	ldi	r22, 0x0A	; 10
     62e:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <cursor_page>
     632:	0e 94 d7 04 	call	0x9ae	; 0x9ae <oled_pos>
	oled_print(" <--");
     636:	83 e3       	ldi	r24, 0x33	; 51
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	0e 94 bb 03 	call	0x776	; 0x776 <oled_print>
	
	return 0;
};
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	08 95       	ret

0000064a <navigate_menu>:
void navigate_menu(joystick_position position){
	//Move the cursor
	
	int deadzone = 63;
	
	if ((position.position_y > deadzone ) && (cursor_page != 2)){
     64a:	90 34       	cpi	r25, 0x40	; 64
     64c:	84 f0       	brlt	.+32     	; 0x66e <navigate_menu+0x24>
     64e:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <cursor_page>
     652:	82 30       	cpi	r24, 0x02	; 2
     654:	f9 f0       	breq	.+62     	; 0x694 <navigate_menu+0x4a>
		cursor_page--;
     656:	81 50       	subi	r24, 0x01	; 1
     658:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <cursor_page>
     65c:	2f e3       	ldi	r18, 0x3F	; 63
     65e:	3d e0       	ldi	r19, 0x0D	; 13
     660:	83 e0       	ldi	r24, 0x03	; 3
     662:	21 50       	subi	r18, 0x01	; 1
     664:	30 40       	sbci	r19, 0x00	; 0
     666:	80 40       	sbci	r24, 0x00	; 0
     668:	e1 f7       	brne	.-8      	; 0x662 <navigate_menu+0x18>
     66a:	00 c0       	rjmp	.+0      	; 0x66c <navigate_menu+0x22>
     66c:	00 00       	nop
		_delay_ms(1000);
		
	}
	if ((position.position_y < -deadzone) && (cursor_page != 4)){
     66e:	91 3c       	cpi	r25, 0xC1	; 193
     670:	9c f4       	brge	.+38     	; 0x698 <navigate_menu+0x4e>
     672:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <cursor_page>
     676:	84 30       	cpi	r24, 0x04	; 4
     678:	79 f0       	breq	.+30     	; 0x698 <navigate_menu+0x4e>
		cursor_page++;
     67a:	8f 5f       	subi	r24, 0xFF	; 255
     67c:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <cursor_page>
     680:	9f e3       	ldi	r25, 0x3F	; 63
     682:	2d e0       	ldi	r18, 0x0D	; 13
     684:	33 e0       	ldi	r19, 0x03	; 3
     686:	91 50       	subi	r25, 0x01	; 1
     688:	20 40       	sbci	r18, 0x00	; 0
     68a:	30 40       	sbci	r19, 0x00	; 0
     68c:	e1 f7       	brne	.-8      	; 0x686 <navigate_menu+0x3c>
     68e:	00 c0       	rjmp	.+0      	; 0x690 <navigate_menu+0x46>
     690:	00 00       	nop
		_delay_ms(1000);
	}

	//current_menu = *current_menu.children[cursor_page-2]; //The two first pages are the header and a whitespace
}
     692:	08 95       	ret
	if ((position.position_y > deadzone ) && (cursor_page != 2)){
		cursor_page--;
		_delay_ms(1000);
		
	}
	if ((position.position_y < -deadzone) && (cursor_page != 4)){
     694:	91 3c       	cpi	r25, 0xC1	; 193
     696:	8c f3       	brlt	.-30     	; 0x67a <navigate_menu+0x30>
     698:	08 95       	ret

0000069a <update_currentmenu>:
//joystick_position joystick_direction(void){



//Function that updates currentmenu from buttonpresses
void update_currentmenu(void){
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
	
	// Go into submenu
	if (!test_bit(PINB, PINB3) && current_menu.children[cursor_page-2] != NULL){
     69e:	b3 99       	sbic	0x16, 3	; 22
     6a0:	26 c0       	rjmp	.+76     	; 0x6ee <update_currentmenu+0x54>
     6a2:	e0 91 aa 01 	lds	r30, 0x01AA	; 0x8001aa <cursor_page>
     6a6:	f0 e0       	ldi	r31, 0x00	; 0
     6a8:	ee 0f       	add	r30, r30
     6aa:	ff 1f       	adc	r31, r31
     6ac:	e6 58       	subi	r30, 0x86	; 134
     6ae:	fe 4f       	sbci	r31, 0xFE	; 254
     6b0:	01 90       	ld	r0, Z+
     6b2:	f0 81       	ld	r31, Z
     6b4:	e0 2d       	mov	r30, r0
     6b6:	30 97       	sbiw	r30, 0x00	; 0
     6b8:	d1 f0       	breq	.+52     	; 0x6ee <update_currentmenu+0x54>
		current_menu = *current_menu.children[cursor_page-2]; //The two first pages are the header and a whitespace
     6ba:	8c e0       	ldi	r24, 0x0C	; 12
     6bc:	aa e7       	ldi	r26, 0x7A	; 122
     6be:	b1 e0       	ldi	r27, 0x01	; 1
     6c0:	01 90       	ld	r0, Z+
     6c2:	0d 92       	st	X+, r0
     6c4:	8a 95       	dec	r24
     6c6:	e1 f7       	brne	.-8      	; 0x6c0 <update_currentmenu+0x26>
		cursor_page = 2;
     6c8:	82 e0       	ldi	r24, 0x02	; 2
     6ca:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <cursor_page>
		printf("We are entering the submenu: %s \n\r", current_menu.name);
     6ce:	ea e7       	ldi	r30, 0x7A	; 122
     6d0:	f1 e0       	ldi	r31, 0x01	; 1
     6d2:	81 81       	ldd	r24, Z+1	; 0x01
     6d4:	8f 93       	push	r24
     6d6:	80 81       	ld	r24, Z
     6d8:	8f 93       	push	r24
     6da:	88 e3       	ldi	r24, 0x38	; 56
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	9f 93       	push	r25
     6e0:	8f 93       	push	r24
     6e2:	0e 94 80 05 	call	0xb00	; 0xb00 <printf>
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
	}
	
	// Go back from submenu
	if (test_bit(PINB, PINB2) && current_menu.parent != NULL){
     6ee:	b2 9b       	sbis	0x16, 2	; 22
     6f0:	1f c0       	rjmp	.+62     	; 0x730 <update_currentmenu+0x96>
     6f2:	c0 91 7c 01 	lds	r28, 0x017C	; 0x80017c <current_menu+0x2>
     6f6:	d0 91 7d 01 	lds	r29, 0x017D	; 0x80017d <current_menu+0x3>
     6fa:	20 97       	sbiw	r28, 0x00	; 0
     6fc:	c9 f0       	breq	.+50     	; 0x730 <update_currentmenu+0x96>
		menu *tempmenu = current_menu.parent;
		current_menu = *tempmenu;
     6fe:	8c e0       	ldi	r24, 0x0C	; 12
     700:	fe 01       	movw	r30, r28
     702:	aa e7       	ldi	r26, 0x7A	; 122
     704:	b1 e0       	ldi	r27, 0x01	; 1
     706:	01 90       	ld	r0, Z+
     708:	0d 92       	st	X+, r0
     70a:	8a 95       	dec	r24
     70c:	e1 f7       	brne	.-8      	; 0x706 <update_currentmenu+0x6c>
		cursor_page = 2;
     70e:	82 e0       	ldi	r24, 0x02	; 2
     710:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <cursor_page>
		printf("We are going back to: %s \n\r", tempmenu->name);
     714:	89 81       	ldd	r24, Y+1	; 0x01
     716:	8f 93       	push	r24
     718:	88 81       	ld	r24, Y
     71a:	8f 93       	push	r24
     71c:	8b e5       	ldi	r24, 0x5B	; 91
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	9f 93       	push	r25
     722:	8f 93       	push	r24
     724:	0e 94 80 05 	call	0xb00	; 0xb00 <printf>
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
     72c:	0f 90       	pop	r0
     72e:	0f 90       	pop	r0
	}

}
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	08 95       	ret

00000736 <oled_print_char>:
	
	
}

// Function to print a char
int oled_print_char(char c){
     736:	28 2f       	mov	r18, r24
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	f9 01       	movw	r30, r18
     73c:	ee 0f       	add	r30, r30
     73e:	ff 1f       	adc	r31, r31
     740:	ee 0f       	add	r30, r30
     742:	ff 1f       	adc	r31, r31
     744:	ee 0f       	add	r30, r30
     746:	ff 1f       	adc	r31, r31
     748:	e0 59       	subi	r30, 0x90	; 144
     74a:	f0 40       	sbci	r31, 0x00	; 0
     74c:	22 0f       	add	r18, r18
     74e:	33 1f       	adc	r19, r19
     750:	22 0f       	add	r18, r18
     752:	33 1f       	adc	r19, r19
     754:	22 0f       	add	r18, r18
     756:	33 1f       	adc	r19, r19
     758:	28 58       	subi	r18, 0x88	; 136
     75a:	30 40       	sbci	r19, 0x00	; 0
	int print_char = c-' ';
	for (int i = 0; i < FONTWIDTH; i++){
		*oled_data = pgm_read_byte(&font8[print_char][i]);
     75c:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_data>
     760:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_data+0x1>
     764:	94 91       	lpm	r25, Z
     766:	9c 93       	st	X, r25
     768:	31 96       	adiw	r30, 0x01	; 1
}

// Function to print a char
int oled_print_char(char c){
	int print_char = c-' ';
	for (int i = 0; i < FONTWIDTH; i++){
     76a:	e2 17       	cp	r30, r18
     76c:	f3 07       	cpc	r31, r19
     76e:	b1 f7       	brne	.-20     	; 0x75c <oled_print_char+0x26>
		*oled_data = pgm_read_byte(&font8[print_char][i]);
	}
	return 0;
}
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	08 95       	ret

00000776 <oled_print>:

// Function to print a string on oled
void oled_print(char *c){
     776:	ef 92       	push	r14
     778:	ff 92       	push	r15
     77a:	0f 93       	push	r16
     77c:	1f 93       	push	r17
     77e:	cf 93       	push	r28
     780:	df 93       	push	r29
     782:	8c 01       	movw	r16, r24
     784:	7c 01       	movw	r14, r24
 	int i = 0;
     786:	c0 e0       	ldi	r28, 0x00	; 0
     788:	d0 e0       	ldi	r29, 0x00	; 0
 	
 	while (i < strlen(c)){
     78a:	06 c0       	rjmp	.+12     	; 0x798 <oled_print+0x22>
 		oled_print_char(c[i]);
     78c:	f7 01       	movw	r30, r14
     78e:	81 91       	ld	r24, Z+
     790:	7f 01       	movw	r14, r30
     792:	0e 94 9b 03 	call	0x736	; 0x736 <oled_print_char>
 		i++;
     796:	21 96       	adiw	r28, 0x01	; 1

// Function to print a string on oled
void oled_print(char *c){
 	int i = 0;
 	
 	while (i < strlen(c)){
     798:	f8 01       	movw	r30, r16
     79a:	01 90       	ld	r0, Z+
     79c:	00 20       	and	r0, r0
     79e:	e9 f7       	brne	.-6      	; 0x79a <oled_print+0x24>
     7a0:	31 97       	sbiw	r30, 0x01	; 1
     7a2:	e0 1b       	sub	r30, r16
     7a4:	f1 0b       	sbc	r31, r17
     7a6:	ce 17       	cp	r28, r30
     7a8:	df 07       	cpc	r29, r31
     7aa:	80 f3       	brcs	.-32     	; 0x78c <oled_print+0x16>
 		oled_print_char(c[i]);
 		i++;

 	}	
}
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	08 95       	ret

000007ba <oled_home>:

int oled_home(void) {

	//Reset the global variables page and column
	page = 0;
     7ba:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <page>
	col = 0;
     7be:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <col>
	
	//Set the cursor to the start of the oled display:

	//Setup column start and end address
	*oled_command = 0x21;
     7c2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7c6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7ca:	81 e2       	ldi	r24, 0x21	; 33
     7cc:	80 83       	st	Z, r24
	*oled_command = 0x00;
     7ce:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7d2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7d6:	10 82       	st	Z, r1
	*oled_command = 0x7F;
     7d8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7dc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7e0:	8f e7       	ldi	r24, 0x7F	; 127
     7e2:	80 83       	st	Z, r24
	
	// Setup page start and end address
	*oled_command = 0x22;
     7e4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7e8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7ec:	82 e2       	ldi	r24, 0x22	; 34
     7ee:	80 83       	st	Z, r24
	*oled_command = 0x00;
     7f0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7f4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7f8:	10 82       	st	Z, r1
	*oled_command = 0x7;
     7fa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7fe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     802:	87 e0       	ldi	r24, 0x07	; 7
     804:	80 83       	st	Z, r24
	
	return 0;
	
}
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	08 95       	ret

0000080c <oled_goto_line>:


int oled_goto_line(uint8_t line) {
	
	//Set the global variable page 
	page = line;
     80c:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <page>

	//Set lower column address
	*oled_command = 0x00;
     810:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     814:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     818:	10 82       	st	Z, r1
	
	//Set higher column address
	*oled_command = 0x10;
     81a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     81e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     822:	90 e1       	ldi	r25, 0x10	; 16
     824:	90 83       	st	Z, r25
	
	//Set page address
	*oled_command = 0xB0 + line;
     826:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     82a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     82e:	80 55       	subi	r24, 0x50	; 80
     830:	80 83       	st	Z, r24

	return 0;
}
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	08 95       	ret

00000838 <oled_clear_line>:
}

// Function to clear a line on oled
int oled_clear_line(uint8_t line) {

	oled_goto_line(line);
     838:	0e 94 06 04 	call	0x80c	; 0x80c <oled_goto_line>
     83c:	80 e8       	ldi	r24, 0x80	; 128
     83e:	90 e0       	ldi	r25, 0x00	; 0
	
	//Clear the line
	for (int i = 0; i < 128; i++) {
		*oled_data=0x00;
     840:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_data>
     844:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_data+0x1>
     848:	10 82       	st	Z, r1
     84a:	01 97       	sbiw	r24, 0x01	; 1
int oled_clear_line(uint8_t line) {

	oled_goto_line(line);
	
	//Clear the line
	for (int i = 0; i < 128; i++) {
     84c:	c9 f7       	brne	.-14     	; 0x840 <oled_clear_line+0x8>
		*oled_data=0x00;
	}
	
	// Set cursor to the start of the screen
	oled_home();
     84e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <oled_home>

	return 0;

}
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	08 95       	ret

00000858 <oled_reset>:
	return 0;
	
}

// Function to reset every line
int oled_reset(void) {
     858:	cf 93       	push	r28
     85a:	c0 e0       	ldi	r28, 0x00	; 0

	int line = 8;
	
	for (uint8_t i = 0; i < line; i++) {
		oled_clear_line(i);
     85c:	8c 2f       	mov	r24, r28
     85e:	0e 94 1c 04 	call	0x838	; 0x838 <oled_clear_line>
// Function to reset every line
int oled_reset(void) {

	int line = 8;
	
	for (uint8_t i = 0; i < line; i++) {
     862:	cf 5f       	subi	r28, 0xFF	; 255
     864:	c8 30       	cpi	r28, 0x08	; 8
     866:	d1 f7       	brne	.-12     	; 0x85c <oled_reset+0x4>
		oled_clear_line(i);
	}
	return 0;
}
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	cf 91       	pop	r28
     86e:	08 95       	ret

00000870 <oled_init>:
uint8_t col, page;


void oled_init(void){
	// Enable external memory
	MCUCR |= (1 << SRE);
     870:	85 b7       	in	r24, 0x35	; 53
     872:	80 68       	ori	r24, 0x80	; 128
     874:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);
     876:	80 b7       	in	r24, 0x30	; 48
     878:	80 62       	ori	r24, 0x20	; 32
     87a:	80 bf       	out	0x30, r24	; 48
	
	// Display off
	*oled_command = 0xAE;
     87c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     880:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     884:	8e ea       	ldi	r24, 0xAE	; 174
     886:	80 83       	st	Z, r24
	
	//Segment remap
	*oled_command = 0xA1;
     888:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     88c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     890:	81 ea       	ldi	r24, 0xA1	; 161
     892:	80 83       	st	Z, r24
	
	//Common pads hardware: alternative
	*oled_command = 0xDA;
     894:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     898:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     89c:	8a ed       	ldi	r24, 0xDA	; 218
     89e:	80 83       	st	Z, r24
	*oled_command = 0x12;
     8a0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8a4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8a8:	82 e1       	ldi	r24, 0x12	; 18
     8aa:	80 83       	st	Z, r24
	
	// Common output scan direction: com63~com0
	*oled_command = 0xC8;
     8ac:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8b0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8b4:	88 ec       	ldi	r24, 0xC8	; 200
     8b6:	80 83       	st	Z, r24
	
	// Mulitplex ration mode: 63
	*oled_command = 0xA8;
     8b8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8bc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8c0:	88 ea       	ldi	r24, 0xA8	; 168
     8c2:	80 83       	st	Z, r24
	*oled_command = 0x3F;
     8c4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8c8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8cc:	8f e3       	ldi	r24, 0x3F	; 63
     8ce:	80 83       	st	Z, r24
	
	// Display divide ratio/osc. freq. mode
	*oled_command = 0xD5;
     8d0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8d4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8d8:	85 ed       	ldi	r24, 0xD5	; 213
     8da:	80 83       	st	Z, r24
	*oled_command = 0x80;
     8dc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8e0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8e4:	80 e8       	ldi	r24, 0x80	; 128
     8e6:	80 83       	st	Z, r24
	
	// Contrast control
	*oled_command = 0x81;
     8e8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8ec:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8f0:	81 e8       	ldi	r24, 0x81	; 129
     8f2:	80 83       	st	Z, r24
	*oled_command = 0x50;
     8f4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     8f8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     8fc:	80 e5       	ldi	r24, 0x50	; 80
     8fe:	80 83       	st	Z, r24
	
	// Set pre-charged period
	*oled_command = 0xD9;
     900:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     904:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     908:	89 ed       	ldi	r24, 0xD9	; 217
     90a:	80 83       	st	Z, r24
	*oled_command = 0x21;
     90c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     910:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     914:	81 e2       	ldi	r24, 0x21	; 33
     916:	80 83       	st	Z, r24
	
	// Set Memory Adressing mode
	*oled_command = 0x20;
     918:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     91c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     920:	80 e2       	ldi	r24, 0x20	; 32
     922:	80 83       	st	Z, r24
	*oled_command = 0x02;
     924:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     928:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     92c:	82 e0       	ldi	r24, 0x02	; 2
     92e:	80 83       	st	Z, r24
	
	// VCOM deselect level mode
	*oled_command = 0xDB;
     930:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     934:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     938:	8b ed       	ldi	r24, 0xDB	; 219
     93a:	80 83       	st	Z, r24
	*oled_command = 0x30;
     93c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     940:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     944:	80 e3       	ldi	r24, 0x30	; 48
     946:	80 83       	st	Z, r24
	
	// Master configuration 
	*oled_command = 0xAD;
     948:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     94c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     950:	8d ea       	ldi	r24, 0xAD	; 173
     952:	80 83       	st	Z, r24
	*oled_command = 0x00;
     954:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     958:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     95c:	10 82       	st	Z, r1
	
	// Out follows RAM content
	*oled_command = 0xA4;
     95e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     962:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     966:	84 ea       	ldi	r24, 0xA4	; 164
     968:	80 83       	st	Z, r24
	
	// Set normal display 
	*oled_command = 0xA6;
     96a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     96e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     972:	86 ea       	ldi	r24, 0xA6	; 166
     974:	80 83       	st	Z, r24
	
	// Display On
	*oled_command = 0xAF;
     976:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     97a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     97e:	8f ea       	ldi	r24, 0xAF	; 175
     980:	80 83       	st	Z, r24
	
	//Set page start address
	*oled_command = 0xB0;
     982:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     986:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     98a:	80 eb       	ldi	r24, 0xB0	; 176
     98c:	80 83       	st	Z, r24
	//Set lower column start address
	*oled_command = 0x00;
     98e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     992:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     996:	10 82       	st	Z, r1
	//Set higher column start address
	*oled_command = 0x10;
     998:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     99c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     9a0:	80 e1       	ldi	r24, 0x10	; 16
     9a2:	80 83       	st	Z, r24
	
	// Clear screen
	oled_reset();
     9a4:	0e 94 2c 04 	call	0x858	; 0x858 <oled_reset>

	// Set cursor to the start of the screen
	oled_home();
     9a8:	0e 94 dd 03 	call	0x7ba	; 0x7ba <oled_home>
     9ac:	08 95       	ret

000009ae <oled_pos>:
	*oled_command = 0xB0 + line;

	return 0;
}

int oled_pos(uint8_t line, uint8_t column) {
     9ae:	cf 93       	push	r28
     9b0:	c6 2f       	mov	r28, r22
	
	oled_goto_line(line);
     9b2:	0e 94 06 04 	call	0x80c	; 0x80c <oled_goto_line>
	
	//Set the global variable col
	col = column;
     9b6:	c0 93 ab 01 	sts	0x01AB, r28	; 0x8001ab <col>

	//Set lower column start address
	*oled_command = 0x00 + ((column*FONTWIDTH)>>4);
     9ba:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     9be:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     9c2:	6c 2f       	mov	r22, r28
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	76 95       	lsr	r23
     9c8:	67 95       	ror	r22
     9ca:	60 83       	st	Z, r22
		
	//Set higher column start address
	*oled_command = 0x10 + ((column*FONTWIDTH)>>4);
     9cc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     9d0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     9d4:	60 5f       	subi	r22, 0xF0	; 240
     9d6:	60 83       	st	Z, r22
	
	return 0;
}
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	cf 91       	pop	r28
     9de:	08 95       	ret

000009e0 <SRAM_init>:
#include <avr/io.h>
#include <stdlib.h>
#include <stdint.h>

void SRAM_init(void){
	MCUCR |= (1 << SRE);
     9e0:	85 b7       	in	r24, 0x35	; 53
     9e2:	80 68       	ori	r24, 0x80	; 128
     9e4:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);
     9e6:	80 b7       	in	r24, 0x30	; 48
     9e8:	80 62       	ori	r24, 0x20	; 32
     9ea:	80 bf       	out	0x30, r24	; 48
     9ec:	08 95       	ret

000009ee <USART_transmit>:

	fdevopen(USART_transmit, USART_receive);
}

void USART_transmit(unsigned char data){
	while(!(UCSR0A & (1<<UDRE0)));
     9ee:	5d 9b       	sbis	0x0b, 5	; 11
     9f0:	fe cf       	rjmp	.-4      	; 0x9ee <USART_transmit>
	UDR0 = data;
     9f2:	8c b9       	out	0x0c, r24	; 12
     9f4:	08 95       	ret

000009f6 <USART_receive>:
}

int USART_receive(void){
	while(!(UCSR0A & (1<<RXC0)));
     9f6:	5f 9b       	sbis	0x0b, 7	; 11
     9f8:	fe cf       	rjmp	.-4      	; 0x9f6 <USART_receive>

	return UDR0;
     9fa:	8c b1       	in	r24, 0x0c	; 12
}
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	08 95       	ret

00000a00 <USART_init>:
#define set_bit(reg, bit) (reg |= (1<< bit))

void USART_init(unsigned int ubrr){
	
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     a00:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;			
     a02:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     a04:	88 e1       	ldi	r24, 0x18	; 24
     a06:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     a08:	8e e8       	ldi	r24, 0x8E	; 142
     a0a:	80 bd       	out	0x20, r24	; 32

	fdevopen(USART_transmit, USART_receive);
     a0c:	6b ef       	ldi	r22, 0xFB	; 251
     a0e:	74 e0       	ldi	r23, 0x04	; 4
     a10:	87 ef       	ldi	r24, 0xF7	; 247
     a12:	94 e0       	ldi	r25, 0x04	; 4
     a14:	0e 94 35 05 	call	0xa6a	; 0xa6a <fdevopen>
     a18:	08 95       	ret

00000a1a <__divmodhi4>:
     a1a:	97 fb       	bst	r25, 7
     a1c:	07 2e       	mov	r0, r23
     a1e:	16 f4       	brtc	.+4      	; 0xa24 <__divmodhi4+0xa>
     a20:	00 94       	com	r0
     a22:	07 d0       	rcall	.+14     	; 0xa32 <__divmodhi4_neg1>
     a24:	77 fd       	sbrc	r23, 7
     a26:	09 d0       	rcall	.+18     	; 0xa3a <__divmodhi4_neg2>
     a28:	0e 94 21 05 	call	0xa42	; 0xa42 <__udivmodhi4>
     a2c:	07 fc       	sbrc	r0, 7
     a2e:	05 d0       	rcall	.+10     	; 0xa3a <__divmodhi4_neg2>
     a30:	3e f4       	brtc	.+14     	; 0xa40 <__divmodhi4_exit>

00000a32 <__divmodhi4_neg1>:
     a32:	90 95       	com	r25
     a34:	81 95       	neg	r24
     a36:	9f 4f       	sbci	r25, 0xFF	; 255
     a38:	08 95       	ret

00000a3a <__divmodhi4_neg2>:
     a3a:	70 95       	com	r23
     a3c:	61 95       	neg	r22
     a3e:	7f 4f       	sbci	r23, 0xFF	; 255

00000a40 <__divmodhi4_exit>:
     a40:	08 95       	ret

00000a42 <__udivmodhi4>:
     a42:	aa 1b       	sub	r26, r26
     a44:	bb 1b       	sub	r27, r27
     a46:	51 e1       	ldi	r21, 0x11	; 17
     a48:	07 c0       	rjmp	.+14     	; 0xa58 <__udivmodhi4_ep>

00000a4a <__udivmodhi4_loop>:
     a4a:	aa 1f       	adc	r26, r26
     a4c:	bb 1f       	adc	r27, r27
     a4e:	a6 17       	cp	r26, r22
     a50:	b7 07       	cpc	r27, r23
     a52:	10 f0       	brcs	.+4      	; 0xa58 <__udivmodhi4_ep>
     a54:	a6 1b       	sub	r26, r22
     a56:	b7 0b       	sbc	r27, r23

00000a58 <__udivmodhi4_ep>:
     a58:	88 1f       	adc	r24, r24
     a5a:	99 1f       	adc	r25, r25
     a5c:	5a 95       	dec	r21
     a5e:	a9 f7       	brne	.-22     	; 0xa4a <__udivmodhi4_loop>
     a60:	80 95       	com	r24
     a62:	90 95       	com	r25
     a64:	bc 01       	movw	r22, r24
     a66:	cd 01       	movw	r24, r26
     a68:	08 95       	ret

00000a6a <fdevopen>:
     a6a:	0f 93       	push	r16
     a6c:	1f 93       	push	r17
     a6e:	cf 93       	push	r28
     a70:	df 93       	push	r29
     a72:	00 97       	sbiw	r24, 0x00	; 0
     a74:	31 f4       	brne	.+12     	; 0xa82 <fdevopen+0x18>
     a76:	61 15       	cp	r22, r1
     a78:	71 05       	cpc	r23, r1
     a7a:	19 f4       	brne	.+6      	; 0xa82 <fdevopen+0x18>
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	3a c0       	rjmp	.+116    	; 0xaf6 <fdevopen+0x8c>
     a82:	8b 01       	movw	r16, r22
     a84:	ec 01       	movw	r28, r24
     a86:	6e e0       	ldi	r22, 0x0E	; 14
     a88:	70 e0       	ldi	r23, 0x00	; 0
     a8a:	81 e0       	ldi	r24, 0x01	; 1
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	0e 94 77 07 	call	0xeee	; 0xeee <calloc>
     a92:	fc 01       	movw	r30, r24
     a94:	89 2b       	or	r24, r25
     a96:	91 f3       	breq	.-28     	; 0xa7c <fdevopen+0x12>
     a98:	80 e8       	ldi	r24, 0x80	; 128
     a9a:	83 83       	std	Z+3, r24	; 0x03
     a9c:	01 15       	cp	r16, r1
     a9e:	11 05       	cpc	r17, r1
     aa0:	71 f0       	breq	.+28     	; 0xabe <fdevopen+0x54>
     aa2:	13 87       	std	Z+11, r17	; 0x0b
     aa4:	02 87       	std	Z+10, r16	; 0x0a
     aa6:	81 e8       	ldi	r24, 0x81	; 129
     aa8:	83 83       	std	Z+3, r24	; 0x03
     aaa:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <__iob>
     aae:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <__iob+0x1>
     ab2:	89 2b       	or	r24, r25
     ab4:	21 f4       	brne	.+8      	; 0xabe <fdevopen+0x54>
     ab6:	f0 93 ae 01 	sts	0x01AE, r31	; 0x8001ae <__iob+0x1>
     aba:	e0 93 ad 01 	sts	0x01AD, r30	; 0x8001ad <__iob>
     abe:	20 97       	sbiw	r28, 0x00	; 0
     ac0:	c9 f0       	breq	.+50     	; 0xaf4 <fdevopen+0x8a>
     ac2:	d1 87       	std	Z+9, r29	; 0x09
     ac4:	c0 87       	std	Z+8, r28	; 0x08
     ac6:	83 81       	ldd	r24, Z+3	; 0x03
     ac8:	82 60       	ori	r24, 0x02	; 2
     aca:	83 83       	std	Z+3, r24	; 0x03
     acc:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <__iob+0x2>
     ad0:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <__iob+0x3>
     ad4:	89 2b       	or	r24, r25
     ad6:	71 f4       	brne	.+28     	; 0xaf4 <fdevopen+0x8a>
     ad8:	f0 93 b0 01 	sts	0x01B0, r31	; 0x8001b0 <__iob+0x3>
     adc:	e0 93 af 01 	sts	0x01AF, r30	; 0x8001af <__iob+0x2>
     ae0:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <__iob+0x4>
     ae4:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <__iob+0x5>
     ae8:	89 2b       	or	r24, r25
     aea:	21 f4       	brne	.+8      	; 0xaf4 <fdevopen+0x8a>
     aec:	f0 93 b2 01 	sts	0x01B2, r31	; 0x8001b2 <__iob+0x5>
     af0:	e0 93 b1 01 	sts	0x01B1, r30	; 0x8001b1 <__iob+0x4>
     af4:	cf 01       	movw	r24, r30
     af6:	df 91       	pop	r29
     af8:	cf 91       	pop	r28
     afa:	1f 91       	pop	r17
     afc:	0f 91       	pop	r16
     afe:	08 95       	ret

00000b00 <printf>:
     b00:	a0 e0       	ldi	r26, 0x00	; 0
     b02:	b0 e0       	ldi	r27, 0x00	; 0
     b04:	e6 e8       	ldi	r30, 0x86	; 134
     b06:	f5 e0       	ldi	r31, 0x05	; 5
     b08:	0c 94 7b 09 	jmp	0x12f6	; 0x12f6 <__prologue_saves__+0x20>
     b0c:	ae 01       	movw	r20, r28
     b0e:	4b 5f       	subi	r20, 0xFB	; 251
     b10:	5f 4f       	sbci	r21, 0xFF	; 255
     b12:	fa 01       	movw	r30, r20
     b14:	61 91       	ld	r22, Z+
     b16:	71 91       	ld	r23, Z+
     b18:	af 01       	movw	r20, r30
     b1a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <__iob+0x2>
     b1e:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <__iob+0x3>
     b22:	0e 94 96 05 	call	0xb2c	; 0xb2c <vfprintf>
     b26:	e2 e0       	ldi	r30, 0x02	; 2
     b28:	0c 94 97 09 	jmp	0x132e	; 0x132e <__epilogue_restores__+0x20>

00000b2c <vfprintf>:
     b2c:	ab e0       	ldi	r26, 0x0B	; 11
     b2e:	b0 e0       	ldi	r27, 0x00	; 0
     b30:	ec e9       	ldi	r30, 0x9C	; 156
     b32:	f5 e0       	ldi	r31, 0x05	; 5
     b34:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__prologue_saves__>
     b38:	6c 01       	movw	r12, r24
     b3a:	7b 01       	movw	r14, r22
     b3c:	8a 01       	movw	r16, r20
     b3e:	fc 01       	movw	r30, r24
     b40:	17 82       	std	Z+7, r1	; 0x07
     b42:	16 82       	std	Z+6, r1	; 0x06
     b44:	83 81       	ldd	r24, Z+3	; 0x03
     b46:	81 ff       	sbrs	r24, 1
     b48:	cc c1       	rjmp	.+920    	; 0xee2 <vfprintf+0x3b6>
     b4a:	ce 01       	movw	r24, r28
     b4c:	01 96       	adiw	r24, 0x01	; 1
     b4e:	3c 01       	movw	r6, r24
     b50:	f6 01       	movw	r30, r12
     b52:	93 81       	ldd	r25, Z+3	; 0x03
     b54:	f7 01       	movw	r30, r14
     b56:	93 fd       	sbrc	r25, 3
     b58:	85 91       	lpm	r24, Z+
     b5a:	93 ff       	sbrs	r25, 3
     b5c:	81 91       	ld	r24, Z+
     b5e:	7f 01       	movw	r14, r30
     b60:	88 23       	and	r24, r24
     b62:	09 f4       	brne	.+2      	; 0xb66 <vfprintf+0x3a>
     b64:	ba c1       	rjmp	.+884    	; 0xeda <vfprintf+0x3ae>
     b66:	85 32       	cpi	r24, 0x25	; 37
     b68:	39 f4       	brne	.+14     	; 0xb78 <vfprintf+0x4c>
     b6a:	93 fd       	sbrc	r25, 3
     b6c:	85 91       	lpm	r24, Z+
     b6e:	93 ff       	sbrs	r25, 3
     b70:	81 91       	ld	r24, Z+
     b72:	7f 01       	movw	r14, r30
     b74:	85 32       	cpi	r24, 0x25	; 37
     b76:	29 f4       	brne	.+10     	; 0xb82 <vfprintf+0x56>
     b78:	b6 01       	movw	r22, r12
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     b80:	e7 cf       	rjmp	.-50     	; 0xb50 <vfprintf+0x24>
     b82:	91 2c       	mov	r9, r1
     b84:	21 2c       	mov	r2, r1
     b86:	31 2c       	mov	r3, r1
     b88:	ff e1       	ldi	r31, 0x1F	; 31
     b8a:	f3 15       	cp	r31, r3
     b8c:	d8 f0       	brcs	.+54     	; 0xbc4 <vfprintf+0x98>
     b8e:	8b 32       	cpi	r24, 0x2B	; 43
     b90:	79 f0       	breq	.+30     	; 0xbb0 <vfprintf+0x84>
     b92:	38 f4       	brcc	.+14     	; 0xba2 <vfprintf+0x76>
     b94:	80 32       	cpi	r24, 0x20	; 32
     b96:	79 f0       	breq	.+30     	; 0xbb6 <vfprintf+0x8a>
     b98:	83 32       	cpi	r24, 0x23	; 35
     b9a:	a1 f4       	brne	.+40     	; 0xbc4 <vfprintf+0x98>
     b9c:	23 2d       	mov	r18, r3
     b9e:	20 61       	ori	r18, 0x10	; 16
     ba0:	1d c0       	rjmp	.+58     	; 0xbdc <vfprintf+0xb0>
     ba2:	8d 32       	cpi	r24, 0x2D	; 45
     ba4:	61 f0       	breq	.+24     	; 0xbbe <vfprintf+0x92>
     ba6:	80 33       	cpi	r24, 0x30	; 48
     ba8:	69 f4       	brne	.+26     	; 0xbc4 <vfprintf+0x98>
     baa:	23 2d       	mov	r18, r3
     bac:	21 60       	ori	r18, 0x01	; 1
     bae:	16 c0       	rjmp	.+44     	; 0xbdc <vfprintf+0xb0>
     bb0:	83 2d       	mov	r24, r3
     bb2:	82 60       	ori	r24, 0x02	; 2
     bb4:	38 2e       	mov	r3, r24
     bb6:	e3 2d       	mov	r30, r3
     bb8:	e4 60       	ori	r30, 0x04	; 4
     bba:	3e 2e       	mov	r3, r30
     bbc:	2a c0       	rjmp	.+84     	; 0xc12 <vfprintf+0xe6>
     bbe:	f3 2d       	mov	r31, r3
     bc0:	f8 60       	ori	r31, 0x08	; 8
     bc2:	1d c0       	rjmp	.+58     	; 0xbfe <vfprintf+0xd2>
     bc4:	37 fc       	sbrc	r3, 7
     bc6:	2d c0       	rjmp	.+90     	; 0xc22 <vfprintf+0xf6>
     bc8:	20 ed       	ldi	r18, 0xD0	; 208
     bca:	28 0f       	add	r18, r24
     bcc:	2a 30       	cpi	r18, 0x0A	; 10
     bce:	40 f0       	brcs	.+16     	; 0xbe0 <vfprintf+0xb4>
     bd0:	8e 32       	cpi	r24, 0x2E	; 46
     bd2:	b9 f4       	brne	.+46     	; 0xc02 <vfprintf+0xd6>
     bd4:	36 fc       	sbrc	r3, 6
     bd6:	81 c1       	rjmp	.+770    	; 0xeda <vfprintf+0x3ae>
     bd8:	23 2d       	mov	r18, r3
     bda:	20 64       	ori	r18, 0x40	; 64
     bdc:	32 2e       	mov	r3, r18
     bde:	19 c0       	rjmp	.+50     	; 0xc12 <vfprintf+0xe6>
     be0:	36 fe       	sbrs	r3, 6
     be2:	06 c0       	rjmp	.+12     	; 0xbf0 <vfprintf+0xc4>
     be4:	8a e0       	ldi	r24, 0x0A	; 10
     be6:	98 9e       	mul	r9, r24
     be8:	20 0d       	add	r18, r0
     bea:	11 24       	eor	r1, r1
     bec:	92 2e       	mov	r9, r18
     bee:	11 c0       	rjmp	.+34     	; 0xc12 <vfprintf+0xe6>
     bf0:	ea e0       	ldi	r30, 0x0A	; 10
     bf2:	2e 9e       	mul	r2, r30
     bf4:	20 0d       	add	r18, r0
     bf6:	11 24       	eor	r1, r1
     bf8:	22 2e       	mov	r2, r18
     bfa:	f3 2d       	mov	r31, r3
     bfc:	f0 62       	ori	r31, 0x20	; 32
     bfe:	3f 2e       	mov	r3, r31
     c00:	08 c0       	rjmp	.+16     	; 0xc12 <vfprintf+0xe6>
     c02:	8c 36       	cpi	r24, 0x6C	; 108
     c04:	21 f4       	brne	.+8      	; 0xc0e <vfprintf+0xe2>
     c06:	83 2d       	mov	r24, r3
     c08:	80 68       	ori	r24, 0x80	; 128
     c0a:	38 2e       	mov	r3, r24
     c0c:	02 c0       	rjmp	.+4      	; 0xc12 <vfprintf+0xe6>
     c0e:	88 36       	cpi	r24, 0x68	; 104
     c10:	41 f4       	brne	.+16     	; 0xc22 <vfprintf+0xf6>
     c12:	f7 01       	movw	r30, r14
     c14:	93 fd       	sbrc	r25, 3
     c16:	85 91       	lpm	r24, Z+
     c18:	93 ff       	sbrs	r25, 3
     c1a:	81 91       	ld	r24, Z+
     c1c:	7f 01       	movw	r14, r30
     c1e:	81 11       	cpse	r24, r1
     c20:	b3 cf       	rjmp	.-154    	; 0xb88 <vfprintf+0x5c>
     c22:	98 2f       	mov	r25, r24
     c24:	9f 7d       	andi	r25, 0xDF	; 223
     c26:	95 54       	subi	r25, 0x45	; 69
     c28:	93 30       	cpi	r25, 0x03	; 3
     c2a:	28 f4       	brcc	.+10     	; 0xc36 <vfprintf+0x10a>
     c2c:	0c 5f       	subi	r16, 0xFC	; 252
     c2e:	1f 4f       	sbci	r17, 0xFF	; 255
     c30:	9f e3       	ldi	r25, 0x3F	; 63
     c32:	99 83       	std	Y+1, r25	; 0x01
     c34:	0d c0       	rjmp	.+26     	; 0xc50 <vfprintf+0x124>
     c36:	83 36       	cpi	r24, 0x63	; 99
     c38:	31 f0       	breq	.+12     	; 0xc46 <vfprintf+0x11a>
     c3a:	83 37       	cpi	r24, 0x73	; 115
     c3c:	71 f0       	breq	.+28     	; 0xc5a <vfprintf+0x12e>
     c3e:	83 35       	cpi	r24, 0x53	; 83
     c40:	09 f0       	breq	.+2      	; 0xc44 <vfprintf+0x118>
     c42:	59 c0       	rjmp	.+178    	; 0xcf6 <vfprintf+0x1ca>
     c44:	21 c0       	rjmp	.+66     	; 0xc88 <vfprintf+0x15c>
     c46:	f8 01       	movw	r30, r16
     c48:	80 81       	ld	r24, Z
     c4a:	89 83       	std	Y+1, r24	; 0x01
     c4c:	0e 5f       	subi	r16, 0xFE	; 254
     c4e:	1f 4f       	sbci	r17, 0xFF	; 255
     c50:	88 24       	eor	r8, r8
     c52:	83 94       	inc	r8
     c54:	91 2c       	mov	r9, r1
     c56:	53 01       	movw	r10, r6
     c58:	13 c0       	rjmp	.+38     	; 0xc80 <vfprintf+0x154>
     c5a:	28 01       	movw	r4, r16
     c5c:	f2 e0       	ldi	r31, 0x02	; 2
     c5e:	4f 0e       	add	r4, r31
     c60:	51 1c       	adc	r5, r1
     c62:	f8 01       	movw	r30, r16
     c64:	a0 80       	ld	r10, Z
     c66:	b1 80       	ldd	r11, Z+1	; 0x01
     c68:	36 fe       	sbrs	r3, 6
     c6a:	03 c0       	rjmp	.+6      	; 0xc72 <vfprintf+0x146>
     c6c:	69 2d       	mov	r22, r9
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	02 c0       	rjmp	.+4      	; 0xc76 <vfprintf+0x14a>
     c72:	6f ef       	ldi	r22, 0xFF	; 255
     c74:	7f ef       	ldi	r23, 0xFF	; 255
     c76:	c5 01       	movw	r24, r10
     c78:	0e 94 c6 08 	call	0x118c	; 0x118c <strnlen>
     c7c:	4c 01       	movw	r8, r24
     c7e:	82 01       	movw	r16, r4
     c80:	f3 2d       	mov	r31, r3
     c82:	ff 77       	andi	r31, 0x7F	; 127
     c84:	3f 2e       	mov	r3, r31
     c86:	16 c0       	rjmp	.+44     	; 0xcb4 <vfprintf+0x188>
     c88:	28 01       	movw	r4, r16
     c8a:	22 e0       	ldi	r18, 0x02	; 2
     c8c:	42 0e       	add	r4, r18
     c8e:	51 1c       	adc	r5, r1
     c90:	f8 01       	movw	r30, r16
     c92:	a0 80       	ld	r10, Z
     c94:	b1 80       	ldd	r11, Z+1	; 0x01
     c96:	36 fe       	sbrs	r3, 6
     c98:	03 c0       	rjmp	.+6      	; 0xca0 <vfprintf+0x174>
     c9a:	69 2d       	mov	r22, r9
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <vfprintf+0x178>
     ca0:	6f ef       	ldi	r22, 0xFF	; 255
     ca2:	7f ef       	ldi	r23, 0xFF	; 255
     ca4:	c5 01       	movw	r24, r10
     ca6:	0e 94 b4 08 	call	0x1168	; 0x1168 <strnlen_P>
     caa:	4c 01       	movw	r8, r24
     cac:	f3 2d       	mov	r31, r3
     cae:	f0 68       	ori	r31, 0x80	; 128
     cb0:	3f 2e       	mov	r3, r31
     cb2:	82 01       	movw	r16, r4
     cb4:	33 fc       	sbrc	r3, 3
     cb6:	1b c0       	rjmp	.+54     	; 0xcee <vfprintf+0x1c2>
     cb8:	82 2d       	mov	r24, r2
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	88 16       	cp	r8, r24
     cbe:	99 06       	cpc	r9, r25
     cc0:	b0 f4       	brcc	.+44     	; 0xcee <vfprintf+0x1c2>
     cc2:	b6 01       	movw	r22, r12
     cc4:	80 e2       	ldi	r24, 0x20	; 32
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     ccc:	2a 94       	dec	r2
     cce:	f4 cf       	rjmp	.-24     	; 0xcb8 <vfprintf+0x18c>
     cd0:	f5 01       	movw	r30, r10
     cd2:	37 fc       	sbrc	r3, 7
     cd4:	85 91       	lpm	r24, Z+
     cd6:	37 fe       	sbrs	r3, 7
     cd8:	81 91       	ld	r24, Z+
     cda:	5f 01       	movw	r10, r30
     cdc:	b6 01       	movw	r22, r12
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     ce4:	21 10       	cpse	r2, r1
     ce6:	2a 94       	dec	r2
     ce8:	21 e0       	ldi	r18, 0x01	; 1
     cea:	82 1a       	sub	r8, r18
     cec:	91 08       	sbc	r9, r1
     cee:	81 14       	cp	r8, r1
     cf0:	91 04       	cpc	r9, r1
     cf2:	71 f7       	brne	.-36     	; 0xcd0 <vfprintf+0x1a4>
     cf4:	e8 c0       	rjmp	.+464    	; 0xec6 <vfprintf+0x39a>
     cf6:	84 36       	cpi	r24, 0x64	; 100
     cf8:	11 f0       	breq	.+4      	; 0xcfe <vfprintf+0x1d2>
     cfa:	89 36       	cpi	r24, 0x69	; 105
     cfc:	41 f5       	brne	.+80     	; 0xd4e <vfprintf+0x222>
     cfe:	f8 01       	movw	r30, r16
     d00:	37 fe       	sbrs	r3, 7
     d02:	07 c0       	rjmp	.+14     	; 0xd12 <vfprintf+0x1e6>
     d04:	60 81       	ld	r22, Z
     d06:	71 81       	ldd	r23, Z+1	; 0x01
     d08:	82 81       	ldd	r24, Z+2	; 0x02
     d0a:	93 81       	ldd	r25, Z+3	; 0x03
     d0c:	0c 5f       	subi	r16, 0xFC	; 252
     d0e:	1f 4f       	sbci	r17, 0xFF	; 255
     d10:	08 c0       	rjmp	.+16     	; 0xd22 <vfprintf+0x1f6>
     d12:	60 81       	ld	r22, Z
     d14:	71 81       	ldd	r23, Z+1	; 0x01
     d16:	07 2e       	mov	r0, r23
     d18:	00 0c       	add	r0, r0
     d1a:	88 0b       	sbc	r24, r24
     d1c:	99 0b       	sbc	r25, r25
     d1e:	0e 5f       	subi	r16, 0xFE	; 254
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	f3 2d       	mov	r31, r3
     d24:	ff 76       	andi	r31, 0x6F	; 111
     d26:	3f 2e       	mov	r3, r31
     d28:	97 ff       	sbrs	r25, 7
     d2a:	09 c0       	rjmp	.+18     	; 0xd3e <vfprintf+0x212>
     d2c:	90 95       	com	r25
     d2e:	80 95       	com	r24
     d30:	70 95       	com	r23
     d32:	61 95       	neg	r22
     d34:	7f 4f       	sbci	r23, 0xFF	; 255
     d36:	8f 4f       	sbci	r24, 0xFF	; 255
     d38:	9f 4f       	sbci	r25, 0xFF	; 255
     d3a:	f0 68       	ori	r31, 0x80	; 128
     d3c:	3f 2e       	mov	r3, r31
     d3e:	2a e0       	ldi	r18, 0x0A	; 10
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	a3 01       	movw	r20, r6
     d44:	0e 94 0d 09 	call	0x121a	; 0x121a <__ultoa_invert>
     d48:	88 2e       	mov	r8, r24
     d4a:	86 18       	sub	r8, r6
     d4c:	45 c0       	rjmp	.+138    	; 0xdd8 <vfprintf+0x2ac>
     d4e:	85 37       	cpi	r24, 0x75	; 117
     d50:	31 f4       	brne	.+12     	; 0xd5e <vfprintf+0x232>
     d52:	23 2d       	mov	r18, r3
     d54:	2f 7e       	andi	r18, 0xEF	; 239
     d56:	b2 2e       	mov	r11, r18
     d58:	2a e0       	ldi	r18, 0x0A	; 10
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	25 c0       	rjmp	.+74     	; 0xda8 <vfprintf+0x27c>
     d5e:	93 2d       	mov	r25, r3
     d60:	99 7f       	andi	r25, 0xF9	; 249
     d62:	b9 2e       	mov	r11, r25
     d64:	8f 36       	cpi	r24, 0x6F	; 111
     d66:	c1 f0       	breq	.+48     	; 0xd98 <vfprintf+0x26c>
     d68:	18 f4       	brcc	.+6      	; 0xd70 <vfprintf+0x244>
     d6a:	88 35       	cpi	r24, 0x58	; 88
     d6c:	79 f0       	breq	.+30     	; 0xd8c <vfprintf+0x260>
     d6e:	b5 c0       	rjmp	.+362    	; 0xeda <vfprintf+0x3ae>
     d70:	80 37       	cpi	r24, 0x70	; 112
     d72:	19 f0       	breq	.+6      	; 0xd7a <vfprintf+0x24e>
     d74:	88 37       	cpi	r24, 0x78	; 120
     d76:	21 f0       	breq	.+8      	; 0xd80 <vfprintf+0x254>
     d78:	b0 c0       	rjmp	.+352    	; 0xeda <vfprintf+0x3ae>
     d7a:	e9 2f       	mov	r30, r25
     d7c:	e0 61       	ori	r30, 0x10	; 16
     d7e:	be 2e       	mov	r11, r30
     d80:	b4 fe       	sbrs	r11, 4
     d82:	0d c0       	rjmp	.+26     	; 0xd9e <vfprintf+0x272>
     d84:	fb 2d       	mov	r31, r11
     d86:	f4 60       	ori	r31, 0x04	; 4
     d88:	bf 2e       	mov	r11, r31
     d8a:	09 c0       	rjmp	.+18     	; 0xd9e <vfprintf+0x272>
     d8c:	34 fe       	sbrs	r3, 4
     d8e:	0a c0       	rjmp	.+20     	; 0xda4 <vfprintf+0x278>
     d90:	29 2f       	mov	r18, r25
     d92:	26 60       	ori	r18, 0x06	; 6
     d94:	b2 2e       	mov	r11, r18
     d96:	06 c0       	rjmp	.+12     	; 0xda4 <vfprintf+0x278>
     d98:	28 e0       	ldi	r18, 0x08	; 8
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	05 c0       	rjmp	.+10     	; 0xda8 <vfprintf+0x27c>
     d9e:	20 e1       	ldi	r18, 0x10	; 16
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <vfprintf+0x27c>
     da4:	20 e1       	ldi	r18, 0x10	; 16
     da6:	32 e0       	ldi	r19, 0x02	; 2
     da8:	f8 01       	movw	r30, r16
     daa:	b7 fe       	sbrs	r11, 7
     dac:	07 c0       	rjmp	.+14     	; 0xdbc <vfprintf+0x290>
     dae:	60 81       	ld	r22, Z
     db0:	71 81       	ldd	r23, Z+1	; 0x01
     db2:	82 81       	ldd	r24, Z+2	; 0x02
     db4:	93 81       	ldd	r25, Z+3	; 0x03
     db6:	0c 5f       	subi	r16, 0xFC	; 252
     db8:	1f 4f       	sbci	r17, 0xFF	; 255
     dba:	06 c0       	rjmp	.+12     	; 0xdc8 <vfprintf+0x29c>
     dbc:	60 81       	ld	r22, Z
     dbe:	71 81       	ldd	r23, Z+1	; 0x01
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 5f       	subi	r16, 0xFE	; 254
     dc6:	1f 4f       	sbci	r17, 0xFF	; 255
     dc8:	a3 01       	movw	r20, r6
     dca:	0e 94 0d 09 	call	0x121a	; 0x121a <__ultoa_invert>
     dce:	88 2e       	mov	r8, r24
     dd0:	86 18       	sub	r8, r6
     dd2:	fb 2d       	mov	r31, r11
     dd4:	ff 77       	andi	r31, 0x7F	; 127
     dd6:	3f 2e       	mov	r3, r31
     dd8:	36 fe       	sbrs	r3, 6
     dda:	0d c0       	rjmp	.+26     	; 0xdf6 <vfprintf+0x2ca>
     ddc:	23 2d       	mov	r18, r3
     dde:	2e 7f       	andi	r18, 0xFE	; 254
     de0:	a2 2e       	mov	r10, r18
     de2:	89 14       	cp	r8, r9
     de4:	58 f4       	brcc	.+22     	; 0xdfc <vfprintf+0x2d0>
     de6:	34 fe       	sbrs	r3, 4
     de8:	0b c0       	rjmp	.+22     	; 0xe00 <vfprintf+0x2d4>
     dea:	32 fc       	sbrc	r3, 2
     dec:	09 c0       	rjmp	.+18     	; 0xe00 <vfprintf+0x2d4>
     dee:	83 2d       	mov	r24, r3
     df0:	8e 7e       	andi	r24, 0xEE	; 238
     df2:	a8 2e       	mov	r10, r24
     df4:	05 c0       	rjmp	.+10     	; 0xe00 <vfprintf+0x2d4>
     df6:	b8 2c       	mov	r11, r8
     df8:	a3 2c       	mov	r10, r3
     dfa:	03 c0       	rjmp	.+6      	; 0xe02 <vfprintf+0x2d6>
     dfc:	b8 2c       	mov	r11, r8
     dfe:	01 c0       	rjmp	.+2      	; 0xe02 <vfprintf+0x2d6>
     e00:	b9 2c       	mov	r11, r9
     e02:	a4 fe       	sbrs	r10, 4
     e04:	0f c0       	rjmp	.+30     	; 0xe24 <vfprintf+0x2f8>
     e06:	fe 01       	movw	r30, r28
     e08:	e8 0d       	add	r30, r8
     e0a:	f1 1d       	adc	r31, r1
     e0c:	80 81       	ld	r24, Z
     e0e:	80 33       	cpi	r24, 0x30	; 48
     e10:	21 f4       	brne	.+8      	; 0xe1a <vfprintf+0x2ee>
     e12:	9a 2d       	mov	r25, r10
     e14:	99 7e       	andi	r25, 0xE9	; 233
     e16:	a9 2e       	mov	r10, r25
     e18:	09 c0       	rjmp	.+18     	; 0xe2c <vfprintf+0x300>
     e1a:	a2 fe       	sbrs	r10, 2
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0x2fe>
     e1e:	b3 94       	inc	r11
     e20:	b3 94       	inc	r11
     e22:	04 c0       	rjmp	.+8      	; 0xe2c <vfprintf+0x300>
     e24:	8a 2d       	mov	r24, r10
     e26:	86 78       	andi	r24, 0x86	; 134
     e28:	09 f0       	breq	.+2      	; 0xe2c <vfprintf+0x300>
     e2a:	b3 94       	inc	r11
     e2c:	a3 fc       	sbrc	r10, 3
     e2e:	11 c0       	rjmp	.+34     	; 0xe52 <vfprintf+0x326>
     e30:	a0 fe       	sbrs	r10, 0
     e32:	06 c0       	rjmp	.+12     	; 0xe40 <vfprintf+0x314>
     e34:	b2 14       	cp	r11, r2
     e36:	88 f4       	brcc	.+34     	; 0xe5a <vfprintf+0x32e>
     e38:	28 0c       	add	r2, r8
     e3a:	92 2c       	mov	r9, r2
     e3c:	9b 18       	sub	r9, r11
     e3e:	0e c0       	rjmp	.+28     	; 0xe5c <vfprintf+0x330>
     e40:	b2 14       	cp	r11, r2
     e42:	60 f4       	brcc	.+24     	; 0xe5c <vfprintf+0x330>
     e44:	b6 01       	movw	r22, r12
     e46:	80 e2       	ldi	r24, 0x20	; 32
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     e4e:	b3 94       	inc	r11
     e50:	f7 cf       	rjmp	.-18     	; 0xe40 <vfprintf+0x314>
     e52:	b2 14       	cp	r11, r2
     e54:	18 f4       	brcc	.+6      	; 0xe5c <vfprintf+0x330>
     e56:	2b 18       	sub	r2, r11
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <vfprintf+0x332>
     e5a:	98 2c       	mov	r9, r8
     e5c:	21 2c       	mov	r2, r1
     e5e:	a4 fe       	sbrs	r10, 4
     e60:	10 c0       	rjmp	.+32     	; 0xe82 <vfprintf+0x356>
     e62:	b6 01       	movw	r22, r12
     e64:	80 e3       	ldi	r24, 0x30	; 48
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     e6c:	a2 fe       	sbrs	r10, 2
     e6e:	17 c0       	rjmp	.+46     	; 0xe9e <vfprintf+0x372>
     e70:	a1 fc       	sbrc	r10, 1
     e72:	03 c0       	rjmp	.+6      	; 0xe7a <vfprintf+0x34e>
     e74:	88 e7       	ldi	r24, 0x78	; 120
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0x352>
     e7a:	88 e5       	ldi	r24, 0x58	; 88
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	b6 01       	movw	r22, r12
     e80:	0c c0       	rjmp	.+24     	; 0xe9a <vfprintf+0x36e>
     e82:	8a 2d       	mov	r24, r10
     e84:	86 78       	andi	r24, 0x86	; 134
     e86:	59 f0       	breq	.+22     	; 0xe9e <vfprintf+0x372>
     e88:	a1 fe       	sbrs	r10, 1
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <vfprintf+0x364>
     e8c:	8b e2       	ldi	r24, 0x2B	; 43
     e8e:	01 c0       	rjmp	.+2      	; 0xe92 <vfprintf+0x366>
     e90:	80 e2       	ldi	r24, 0x20	; 32
     e92:	a7 fc       	sbrc	r10, 7
     e94:	8d e2       	ldi	r24, 0x2D	; 45
     e96:	b6 01       	movw	r22, r12
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     e9e:	89 14       	cp	r8, r9
     ea0:	38 f4       	brcc	.+14     	; 0xeb0 <vfprintf+0x384>
     ea2:	b6 01       	movw	r22, r12
     ea4:	80 e3       	ldi	r24, 0x30	; 48
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     eac:	9a 94       	dec	r9
     eae:	f7 cf       	rjmp	.-18     	; 0xe9e <vfprintf+0x372>
     eb0:	8a 94       	dec	r8
     eb2:	f3 01       	movw	r30, r6
     eb4:	e8 0d       	add	r30, r8
     eb6:	f1 1d       	adc	r31, r1
     eb8:	80 81       	ld	r24, Z
     eba:	b6 01       	movw	r22, r12
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     ec2:	81 10       	cpse	r8, r1
     ec4:	f5 cf       	rjmp	.-22     	; 0xeb0 <vfprintf+0x384>
     ec6:	22 20       	and	r2, r2
     ec8:	09 f4       	brne	.+2      	; 0xecc <vfprintf+0x3a0>
     eca:	42 ce       	rjmp	.-892    	; 0xb50 <vfprintf+0x24>
     ecc:	b6 01       	movw	r22, r12
     ece:	80 e2       	ldi	r24, 0x20	; 32
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <fputc>
     ed6:	2a 94       	dec	r2
     ed8:	f6 cf       	rjmp	.-20     	; 0xec6 <vfprintf+0x39a>
     eda:	f6 01       	movw	r30, r12
     edc:	86 81       	ldd	r24, Z+6	; 0x06
     ede:	97 81       	ldd	r25, Z+7	; 0x07
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <vfprintf+0x3ba>
     ee2:	8f ef       	ldi	r24, 0xFF	; 255
     ee4:	9f ef       	ldi	r25, 0xFF	; 255
     ee6:	2b 96       	adiw	r28, 0x0b	; 11
     ee8:	e2 e1       	ldi	r30, 0x12	; 18
     eea:	0c 94 87 09 	jmp	0x130e	; 0x130e <__epilogue_restores__>

00000eee <calloc>:
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	86 9f       	mul	r24, r22
     ef8:	80 01       	movw	r16, r0
     efa:	87 9f       	mul	r24, r23
     efc:	10 0d       	add	r17, r0
     efe:	96 9f       	mul	r25, r22
     f00:	10 0d       	add	r17, r0
     f02:	11 24       	eor	r1, r1
     f04:	c8 01       	movw	r24, r16
     f06:	0e 94 93 07 	call	0xf26	; 0xf26 <malloc>
     f0a:	ec 01       	movw	r28, r24
     f0c:	00 97       	sbiw	r24, 0x00	; 0
     f0e:	29 f0       	breq	.+10     	; 0xf1a <calloc+0x2c>
     f10:	a8 01       	movw	r20, r16
     f12:	60 e0       	ldi	r22, 0x00	; 0
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	0e 94 bf 08 	call	0x117e	; 0x117e <memset>
     f1a:	ce 01       	movw	r24, r28
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	08 95       	ret

00000f26 <malloc>:
     f26:	0f 93       	push	r16
     f28:	1f 93       	push	r17
     f2a:	cf 93       	push	r28
     f2c:	df 93       	push	r29
     f2e:	82 30       	cpi	r24, 0x02	; 2
     f30:	91 05       	cpc	r25, r1
     f32:	10 f4       	brcc	.+4      	; 0xf38 <malloc+0x12>
     f34:	82 e0       	ldi	r24, 0x02	; 2
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	e0 91 b5 01 	lds	r30, 0x01B5	; 0x8001b5 <__flp>
     f3c:	f0 91 b6 01 	lds	r31, 0x01B6	; 0x8001b6 <__flp+0x1>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	a0 e0       	ldi	r26, 0x00	; 0
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	30 97       	sbiw	r30, 0x00	; 0
     f4a:	19 f1       	breq	.+70     	; 0xf92 <malloc+0x6c>
     f4c:	40 81       	ld	r20, Z
     f4e:	51 81       	ldd	r21, Z+1	; 0x01
     f50:	02 81       	ldd	r16, Z+2	; 0x02
     f52:	13 81       	ldd	r17, Z+3	; 0x03
     f54:	48 17       	cp	r20, r24
     f56:	59 07       	cpc	r21, r25
     f58:	c8 f0       	brcs	.+50     	; 0xf8c <malloc+0x66>
     f5a:	84 17       	cp	r24, r20
     f5c:	95 07       	cpc	r25, r21
     f5e:	69 f4       	brne	.+26     	; 0xf7a <malloc+0x54>
     f60:	10 97       	sbiw	r26, 0x00	; 0
     f62:	31 f0       	breq	.+12     	; 0xf70 <malloc+0x4a>
     f64:	12 96       	adiw	r26, 0x02	; 2
     f66:	0c 93       	st	X, r16
     f68:	12 97       	sbiw	r26, 0x02	; 2
     f6a:	13 96       	adiw	r26, 0x03	; 3
     f6c:	1c 93       	st	X, r17
     f6e:	27 c0       	rjmp	.+78     	; 0xfbe <malloc+0x98>
     f70:	00 93 b5 01 	sts	0x01B5, r16	; 0x8001b5 <__flp>
     f74:	10 93 b6 01 	sts	0x01B6, r17	; 0x8001b6 <__flp+0x1>
     f78:	22 c0       	rjmp	.+68     	; 0xfbe <malloc+0x98>
     f7a:	21 15       	cp	r18, r1
     f7c:	31 05       	cpc	r19, r1
     f7e:	19 f0       	breq	.+6      	; 0xf86 <malloc+0x60>
     f80:	42 17       	cp	r20, r18
     f82:	53 07       	cpc	r21, r19
     f84:	18 f4       	brcc	.+6      	; 0xf8c <malloc+0x66>
     f86:	9a 01       	movw	r18, r20
     f88:	bd 01       	movw	r22, r26
     f8a:	ef 01       	movw	r28, r30
     f8c:	df 01       	movw	r26, r30
     f8e:	f8 01       	movw	r30, r16
     f90:	db cf       	rjmp	.-74     	; 0xf48 <malloc+0x22>
     f92:	21 15       	cp	r18, r1
     f94:	31 05       	cpc	r19, r1
     f96:	f9 f0       	breq	.+62     	; 0xfd6 <malloc+0xb0>
     f98:	28 1b       	sub	r18, r24
     f9a:	39 0b       	sbc	r19, r25
     f9c:	24 30       	cpi	r18, 0x04	; 4
     f9e:	31 05       	cpc	r19, r1
     fa0:	80 f4       	brcc	.+32     	; 0xfc2 <malloc+0x9c>
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	9b 81       	ldd	r25, Y+3	; 0x03
     fa6:	61 15       	cp	r22, r1
     fa8:	71 05       	cpc	r23, r1
     faa:	21 f0       	breq	.+8      	; 0xfb4 <malloc+0x8e>
     fac:	fb 01       	movw	r30, r22
     fae:	93 83       	std	Z+3, r25	; 0x03
     fb0:	82 83       	std	Z+2, r24	; 0x02
     fb2:	04 c0       	rjmp	.+8      	; 0xfbc <malloc+0x96>
     fb4:	90 93 b6 01 	sts	0x01B6, r25	; 0x8001b6 <__flp+0x1>
     fb8:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <__flp>
     fbc:	fe 01       	movw	r30, r28
     fbe:	32 96       	adiw	r30, 0x02	; 2
     fc0:	44 c0       	rjmp	.+136    	; 0x104a <malloc+0x124>
     fc2:	fe 01       	movw	r30, r28
     fc4:	e2 0f       	add	r30, r18
     fc6:	f3 1f       	adc	r31, r19
     fc8:	81 93       	st	Z+, r24
     fca:	91 93       	st	Z+, r25
     fcc:	22 50       	subi	r18, 0x02	; 2
     fce:	31 09       	sbc	r19, r1
     fd0:	39 83       	std	Y+1, r19	; 0x01
     fd2:	28 83       	st	Y, r18
     fd4:	3a c0       	rjmp	.+116    	; 0x104a <malloc+0x124>
     fd6:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <__brkval>
     fda:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <__brkval+0x1>
     fde:	23 2b       	or	r18, r19
     fe0:	41 f4       	brne	.+16     	; 0xff2 <malloc+0xcc>
     fe2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     fe6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     fea:	30 93 b4 01 	sts	0x01B4, r19	; 0x8001b4 <__brkval+0x1>
     fee:	20 93 b3 01 	sts	0x01B3, r18	; 0x8001b3 <__brkval>
     ff2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     ff6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     ffa:	21 15       	cp	r18, r1
     ffc:	31 05       	cpc	r19, r1
     ffe:	41 f4       	brne	.+16     	; 0x1010 <malloc+0xea>
    1000:	2d b7       	in	r18, 0x3d	; 61
    1002:	3e b7       	in	r19, 0x3e	; 62
    1004:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1008:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    100c:	24 1b       	sub	r18, r20
    100e:	35 0b       	sbc	r19, r21
    1010:	e0 91 b3 01 	lds	r30, 0x01B3	; 0x8001b3 <__brkval>
    1014:	f0 91 b4 01 	lds	r31, 0x01B4	; 0x8001b4 <__brkval+0x1>
    1018:	e2 17       	cp	r30, r18
    101a:	f3 07       	cpc	r31, r19
    101c:	a0 f4       	brcc	.+40     	; 0x1046 <malloc+0x120>
    101e:	2e 1b       	sub	r18, r30
    1020:	3f 0b       	sbc	r19, r31
    1022:	28 17       	cp	r18, r24
    1024:	39 07       	cpc	r19, r25
    1026:	78 f0       	brcs	.+30     	; 0x1046 <malloc+0x120>
    1028:	ac 01       	movw	r20, r24
    102a:	4e 5f       	subi	r20, 0xFE	; 254
    102c:	5f 4f       	sbci	r21, 0xFF	; 255
    102e:	24 17       	cp	r18, r20
    1030:	35 07       	cpc	r19, r21
    1032:	48 f0       	brcs	.+18     	; 0x1046 <malloc+0x120>
    1034:	4e 0f       	add	r20, r30
    1036:	5f 1f       	adc	r21, r31
    1038:	50 93 b4 01 	sts	0x01B4, r21	; 0x8001b4 <__brkval+0x1>
    103c:	40 93 b3 01 	sts	0x01B3, r20	; 0x8001b3 <__brkval>
    1040:	81 93       	st	Z+, r24
    1042:	91 93       	st	Z+, r25
    1044:	02 c0       	rjmp	.+4      	; 0x104a <malloc+0x124>
    1046:	e0 e0       	ldi	r30, 0x00	; 0
    1048:	f0 e0       	ldi	r31, 0x00	; 0
    104a:	cf 01       	movw	r24, r30
    104c:	df 91       	pop	r29
    104e:	cf 91       	pop	r28
    1050:	1f 91       	pop	r17
    1052:	0f 91       	pop	r16
    1054:	08 95       	ret

00001056 <free>:
    1056:	cf 93       	push	r28
    1058:	df 93       	push	r29
    105a:	00 97       	sbiw	r24, 0x00	; 0
    105c:	09 f4       	brne	.+2      	; 0x1060 <free+0xa>
    105e:	81 c0       	rjmp	.+258    	; 0x1162 <free+0x10c>
    1060:	fc 01       	movw	r30, r24
    1062:	32 97       	sbiw	r30, 0x02	; 2
    1064:	13 82       	std	Z+3, r1	; 0x03
    1066:	12 82       	std	Z+2, r1	; 0x02
    1068:	a0 91 b5 01 	lds	r26, 0x01B5	; 0x8001b5 <__flp>
    106c:	b0 91 b6 01 	lds	r27, 0x01B6	; 0x8001b6 <__flp+0x1>
    1070:	10 97       	sbiw	r26, 0x00	; 0
    1072:	81 f4       	brne	.+32     	; 0x1094 <free+0x3e>
    1074:	20 81       	ld	r18, Z
    1076:	31 81       	ldd	r19, Z+1	; 0x01
    1078:	82 0f       	add	r24, r18
    107a:	93 1f       	adc	r25, r19
    107c:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <__brkval>
    1080:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <__brkval+0x1>
    1084:	28 17       	cp	r18, r24
    1086:	39 07       	cpc	r19, r25
    1088:	51 f5       	brne	.+84     	; 0x10de <free+0x88>
    108a:	f0 93 b4 01 	sts	0x01B4, r31	; 0x8001b4 <__brkval+0x1>
    108e:	e0 93 b3 01 	sts	0x01B3, r30	; 0x8001b3 <__brkval>
    1092:	67 c0       	rjmp	.+206    	; 0x1162 <free+0x10c>
    1094:	ed 01       	movw	r28, r26
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	ce 17       	cp	r28, r30
    109c:	df 07       	cpc	r29, r31
    109e:	40 f4       	brcc	.+16     	; 0x10b0 <free+0x5a>
    10a0:	4a 81       	ldd	r20, Y+2	; 0x02
    10a2:	5b 81       	ldd	r21, Y+3	; 0x03
    10a4:	9e 01       	movw	r18, r28
    10a6:	41 15       	cp	r20, r1
    10a8:	51 05       	cpc	r21, r1
    10aa:	f1 f0       	breq	.+60     	; 0x10e8 <free+0x92>
    10ac:	ea 01       	movw	r28, r20
    10ae:	f5 cf       	rjmp	.-22     	; 0x109a <free+0x44>
    10b0:	d3 83       	std	Z+3, r29	; 0x03
    10b2:	c2 83       	std	Z+2, r28	; 0x02
    10b4:	40 81       	ld	r20, Z
    10b6:	51 81       	ldd	r21, Z+1	; 0x01
    10b8:	84 0f       	add	r24, r20
    10ba:	95 1f       	adc	r25, r21
    10bc:	c8 17       	cp	r28, r24
    10be:	d9 07       	cpc	r29, r25
    10c0:	59 f4       	brne	.+22     	; 0x10d8 <free+0x82>
    10c2:	88 81       	ld	r24, Y
    10c4:	99 81       	ldd	r25, Y+1	; 0x01
    10c6:	84 0f       	add	r24, r20
    10c8:	95 1f       	adc	r25, r21
    10ca:	02 96       	adiw	r24, 0x02	; 2
    10cc:	91 83       	std	Z+1, r25	; 0x01
    10ce:	80 83       	st	Z, r24
    10d0:	8a 81       	ldd	r24, Y+2	; 0x02
    10d2:	9b 81       	ldd	r25, Y+3	; 0x03
    10d4:	93 83       	std	Z+3, r25	; 0x03
    10d6:	82 83       	std	Z+2, r24	; 0x02
    10d8:	21 15       	cp	r18, r1
    10da:	31 05       	cpc	r19, r1
    10dc:	29 f4       	brne	.+10     	; 0x10e8 <free+0x92>
    10de:	f0 93 b6 01 	sts	0x01B6, r31	; 0x8001b6 <__flp+0x1>
    10e2:	e0 93 b5 01 	sts	0x01B5, r30	; 0x8001b5 <__flp>
    10e6:	3d c0       	rjmp	.+122    	; 0x1162 <free+0x10c>
    10e8:	e9 01       	movw	r28, r18
    10ea:	fb 83       	std	Y+3, r31	; 0x03
    10ec:	ea 83       	std	Y+2, r30	; 0x02
    10ee:	49 91       	ld	r20, Y+
    10f0:	59 91       	ld	r21, Y+
    10f2:	c4 0f       	add	r28, r20
    10f4:	d5 1f       	adc	r29, r21
    10f6:	ec 17       	cp	r30, r28
    10f8:	fd 07       	cpc	r31, r29
    10fa:	61 f4       	brne	.+24     	; 0x1114 <free+0xbe>
    10fc:	80 81       	ld	r24, Z
    10fe:	91 81       	ldd	r25, Z+1	; 0x01
    1100:	84 0f       	add	r24, r20
    1102:	95 1f       	adc	r25, r21
    1104:	02 96       	adiw	r24, 0x02	; 2
    1106:	e9 01       	movw	r28, r18
    1108:	99 83       	std	Y+1, r25	; 0x01
    110a:	88 83       	st	Y, r24
    110c:	82 81       	ldd	r24, Z+2	; 0x02
    110e:	93 81       	ldd	r25, Z+3	; 0x03
    1110:	9b 83       	std	Y+3, r25	; 0x03
    1112:	8a 83       	std	Y+2, r24	; 0x02
    1114:	e0 e0       	ldi	r30, 0x00	; 0
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	12 96       	adiw	r26, 0x02	; 2
    111a:	8d 91       	ld	r24, X+
    111c:	9c 91       	ld	r25, X
    111e:	13 97       	sbiw	r26, 0x03	; 3
    1120:	00 97       	sbiw	r24, 0x00	; 0
    1122:	19 f0       	breq	.+6      	; 0x112a <free+0xd4>
    1124:	fd 01       	movw	r30, r26
    1126:	dc 01       	movw	r26, r24
    1128:	f7 cf       	rjmp	.-18     	; 0x1118 <free+0xc2>
    112a:	8d 91       	ld	r24, X+
    112c:	9c 91       	ld	r25, X
    112e:	11 97       	sbiw	r26, 0x01	; 1
    1130:	9d 01       	movw	r18, r26
    1132:	2e 5f       	subi	r18, 0xFE	; 254
    1134:	3f 4f       	sbci	r19, 0xFF	; 255
    1136:	82 0f       	add	r24, r18
    1138:	93 1f       	adc	r25, r19
    113a:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <__brkval>
    113e:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <__brkval+0x1>
    1142:	28 17       	cp	r18, r24
    1144:	39 07       	cpc	r19, r25
    1146:	69 f4       	brne	.+26     	; 0x1162 <free+0x10c>
    1148:	30 97       	sbiw	r30, 0x00	; 0
    114a:	29 f4       	brne	.+10     	; 0x1156 <free+0x100>
    114c:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <__flp+0x1>
    1150:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <__flp>
    1154:	02 c0       	rjmp	.+4      	; 0x115a <free+0x104>
    1156:	13 82       	std	Z+3, r1	; 0x03
    1158:	12 82       	std	Z+2, r1	; 0x02
    115a:	b0 93 b4 01 	sts	0x01B4, r27	; 0x8001b4 <__brkval+0x1>
    115e:	a0 93 b3 01 	sts	0x01B3, r26	; 0x8001b3 <__brkval>
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	08 95       	ret

00001168 <strnlen_P>:
    1168:	fc 01       	movw	r30, r24
    116a:	05 90       	lpm	r0, Z+
    116c:	61 50       	subi	r22, 0x01	; 1
    116e:	70 40       	sbci	r23, 0x00	; 0
    1170:	01 10       	cpse	r0, r1
    1172:	d8 f7       	brcc	.-10     	; 0x116a <strnlen_P+0x2>
    1174:	80 95       	com	r24
    1176:	90 95       	com	r25
    1178:	8e 0f       	add	r24, r30
    117a:	9f 1f       	adc	r25, r31
    117c:	08 95       	ret

0000117e <memset>:
    117e:	dc 01       	movw	r26, r24
    1180:	01 c0       	rjmp	.+2      	; 0x1184 <memset+0x6>
    1182:	6d 93       	st	X+, r22
    1184:	41 50       	subi	r20, 0x01	; 1
    1186:	50 40       	sbci	r21, 0x00	; 0
    1188:	e0 f7       	brcc	.-8      	; 0x1182 <memset+0x4>
    118a:	08 95       	ret

0000118c <strnlen>:
    118c:	fc 01       	movw	r30, r24
    118e:	61 50       	subi	r22, 0x01	; 1
    1190:	70 40       	sbci	r23, 0x00	; 0
    1192:	01 90       	ld	r0, Z+
    1194:	01 10       	cpse	r0, r1
    1196:	d8 f7       	brcc	.-10     	; 0x118e <strnlen+0x2>
    1198:	80 95       	com	r24
    119a:	90 95       	com	r25
    119c:	8e 0f       	add	r24, r30
    119e:	9f 1f       	adc	r25, r31
    11a0:	08 95       	ret

000011a2 <fputc>:
    11a2:	0f 93       	push	r16
    11a4:	1f 93       	push	r17
    11a6:	cf 93       	push	r28
    11a8:	df 93       	push	r29
    11aa:	fb 01       	movw	r30, r22
    11ac:	23 81       	ldd	r18, Z+3	; 0x03
    11ae:	21 fd       	sbrc	r18, 1
    11b0:	03 c0       	rjmp	.+6      	; 0x11b8 <fputc+0x16>
    11b2:	8f ef       	ldi	r24, 0xFF	; 255
    11b4:	9f ef       	ldi	r25, 0xFF	; 255
    11b6:	2c c0       	rjmp	.+88     	; 0x1210 <fputc+0x6e>
    11b8:	22 ff       	sbrs	r18, 2
    11ba:	16 c0       	rjmp	.+44     	; 0x11e8 <fputc+0x46>
    11bc:	46 81       	ldd	r20, Z+6	; 0x06
    11be:	57 81       	ldd	r21, Z+7	; 0x07
    11c0:	24 81       	ldd	r18, Z+4	; 0x04
    11c2:	35 81       	ldd	r19, Z+5	; 0x05
    11c4:	42 17       	cp	r20, r18
    11c6:	53 07       	cpc	r21, r19
    11c8:	44 f4       	brge	.+16     	; 0x11da <fputc+0x38>
    11ca:	a0 81       	ld	r26, Z
    11cc:	b1 81       	ldd	r27, Z+1	; 0x01
    11ce:	9d 01       	movw	r18, r26
    11d0:	2f 5f       	subi	r18, 0xFF	; 255
    11d2:	3f 4f       	sbci	r19, 0xFF	; 255
    11d4:	31 83       	std	Z+1, r19	; 0x01
    11d6:	20 83       	st	Z, r18
    11d8:	8c 93       	st	X, r24
    11da:	26 81       	ldd	r18, Z+6	; 0x06
    11dc:	37 81       	ldd	r19, Z+7	; 0x07
    11de:	2f 5f       	subi	r18, 0xFF	; 255
    11e0:	3f 4f       	sbci	r19, 0xFF	; 255
    11e2:	37 83       	std	Z+7, r19	; 0x07
    11e4:	26 83       	std	Z+6, r18	; 0x06
    11e6:	14 c0       	rjmp	.+40     	; 0x1210 <fputc+0x6e>
    11e8:	8b 01       	movw	r16, r22
    11ea:	ec 01       	movw	r28, r24
    11ec:	fb 01       	movw	r30, r22
    11ee:	00 84       	ldd	r0, Z+8	; 0x08
    11f0:	f1 85       	ldd	r31, Z+9	; 0x09
    11f2:	e0 2d       	mov	r30, r0
    11f4:	09 95       	icall
    11f6:	89 2b       	or	r24, r25
    11f8:	e1 f6       	brne	.-72     	; 0x11b2 <fputc+0x10>
    11fa:	d8 01       	movw	r26, r16
    11fc:	16 96       	adiw	r26, 0x06	; 6
    11fe:	8d 91       	ld	r24, X+
    1200:	9c 91       	ld	r25, X
    1202:	17 97       	sbiw	r26, 0x07	; 7
    1204:	01 96       	adiw	r24, 0x01	; 1
    1206:	17 96       	adiw	r26, 0x07	; 7
    1208:	9c 93       	st	X, r25
    120a:	8e 93       	st	-X, r24
    120c:	16 97       	sbiw	r26, 0x06	; 6
    120e:	ce 01       	movw	r24, r28
    1210:	df 91       	pop	r29
    1212:	cf 91       	pop	r28
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	08 95       	ret

0000121a <__ultoa_invert>:
    121a:	fa 01       	movw	r30, r20
    121c:	aa 27       	eor	r26, r26
    121e:	28 30       	cpi	r18, 0x08	; 8
    1220:	51 f1       	breq	.+84     	; 0x1276 <__ultoa_invert+0x5c>
    1222:	20 31       	cpi	r18, 0x10	; 16
    1224:	81 f1       	breq	.+96     	; 0x1286 <__ultoa_invert+0x6c>
    1226:	e8 94       	clt
    1228:	6f 93       	push	r22
    122a:	6e 7f       	andi	r22, 0xFE	; 254
    122c:	6e 5f       	subi	r22, 0xFE	; 254
    122e:	7f 4f       	sbci	r23, 0xFF	; 255
    1230:	8f 4f       	sbci	r24, 0xFF	; 255
    1232:	9f 4f       	sbci	r25, 0xFF	; 255
    1234:	af 4f       	sbci	r26, 0xFF	; 255
    1236:	b1 e0       	ldi	r27, 0x01	; 1
    1238:	3e d0       	rcall	.+124    	; 0x12b6 <__ultoa_invert+0x9c>
    123a:	b4 e0       	ldi	r27, 0x04	; 4
    123c:	3c d0       	rcall	.+120    	; 0x12b6 <__ultoa_invert+0x9c>
    123e:	67 0f       	add	r22, r23
    1240:	78 1f       	adc	r23, r24
    1242:	89 1f       	adc	r24, r25
    1244:	9a 1f       	adc	r25, r26
    1246:	a1 1d       	adc	r26, r1
    1248:	68 0f       	add	r22, r24
    124a:	79 1f       	adc	r23, r25
    124c:	8a 1f       	adc	r24, r26
    124e:	91 1d       	adc	r25, r1
    1250:	a1 1d       	adc	r26, r1
    1252:	6a 0f       	add	r22, r26
    1254:	71 1d       	adc	r23, r1
    1256:	81 1d       	adc	r24, r1
    1258:	91 1d       	adc	r25, r1
    125a:	a1 1d       	adc	r26, r1
    125c:	20 d0       	rcall	.+64     	; 0x129e <__ultoa_invert+0x84>
    125e:	09 f4       	brne	.+2      	; 0x1262 <__ultoa_invert+0x48>
    1260:	68 94       	set
    1262:	3f 91       	pop	r19
    1264:	2a e0       	ldi	r18, 0x0A	; 10
    1266:	26 9f       	mul	r18, r22
    1268:	11 24       	eor	r1, r1
    126a:	30 19       	sub	r19, r0
    126c:	30 5d       	subi	r19, 0xD0	; 208
    126e:	31 93       	st	Z+, r19
    1270:	de f6       	brtc	.-74     	; 0x1228 <__ultoa_invert+0xe>
    1272:	cf 01       	movw	r24, r30
    1274:	08 95       	ret
    1276:	46 2f       	mov	r20, r22
    1278:	47 70       	andi	r20, 0x07	; 7
    127a:	40 5d       	subi	r20, 0xD0	; 208
    127c:	41 93       	st	Z+, r20
    127e:	b3 e0       	ldi	r27, 0x03	; 3
    1280:	0f d0       	rcall	.+30     	; 0x12a0 <__ultoa_invert+0x86>
    1282:	c9 f7       	brne	.-14     	; 0x1276 <__ultoa_invert+0x5c>
    1284:	f6 cf       	rjmp	.-20     	; 0x1272 <__ultoa_invert+0x58>
    1286:	46 2f       	mov	r20, r22
    1288:	4f 70       	andi	r20, 0x0F	; 15
    128a:	40 5d       	subi	r20, 0xD0	; 208
    128c:	4a 33       	cpi	r20, 0x3A	; 58
    128e:	18 f0       	brcs	.+6      	; 0x1296 <__ultoa_invert+0x7c>
    1290:	49 5d       	subi	r20, 0xD9	; 217
    1292:	31 fd       	sbrc	r19, 1
    1294:	40 52       	subi	r20, 0x20	; 32
    1296:	41 93       	st	Z+, r20
    1298:	02 d0       	rcall	.+4      	; 0x129e <__ultoa_invert+0x84>
    129a:	a9 f7       	brne	.-22     	; 0x1286 <__ultoa_invert+0x6c>
    129c:	ea cf       	rjmp	.-44     	; 0x1272 <__ultoa_invert+0x58>
    129e:	b4 e0       	ldi	r27, 0x04	; 4
    12a0:	a6 95       	lsr	r26
    12a2:	97 95       	ror	r25
    12a4:	87 95       	ror	r24
    12a6:	77 95       	ror	r23
    12a8:	67 95       	ror	r22
    12aa:	ba 95       	dec	r27
    12ac:	c9 f7       	brne	.-14     	; 0x12a0 <__ultoa_invert+0x86>
    12ae:	00 97       	sbiw	r24, 0x00	; 0
    12b0:	61 05       	cpc	r22, r1
    12b2:	71 05       	cpc	r23, r1
    12b4:	08 95       	ret
    12b6:	9b 01       	movw	r18, r22
    12b8:	ac 01       	movw	r20, r24
    12ba:	0a 2e       	mov	r0, r26
    12bc:	06 94       	lsr	r0
    12be:	57 95       	ror	r21
    12c0:	47 95       	ror	r20
    12c2:	37 95       	ror	r19
    12c4:	27 95       	ror	r18
    12c6:	ba 95       	dec	r27
    12c8:	c9 f7       	brne	.-14     	; 0x12bc <__ultoa_invert+0xa2>
    12ca:	62 0f       	add	r22, r18
    12cc:	73 1f       	adc	r23, r19
    12ce:	84 1f       	adc	r24, r20
    12d0:	95 1f       	adc	r25, r21
    12d2:	a0 1d       	adc	r26, r0
    12d4:	08 95       	ret

000012d6 <__prologue_saves__>:
    12d6:	2f 92       	push	r2
    12d8:	3f 92       	push	r3
    12da:	4f 92       	push	r4
    12dc:	5f 92       	push	r5
    12de:	6f 92       	push	r6
    12e0:	7f 92       	push	r7
    12e2:	8f 92       	push	r8
    12e4:	9f 92       	push	r9
    12e6:	af 92       	push	r10
    12e8:	bf 92       	push	r11
    12ea:	cf 92       	push	r12
    12ec:	df 92       	push	r13
    12ee:	ef 92       	push	r14
    12f0:	ff 92       	push	r15
    12f2:	0f 93       	push	r16
    12f4:	1f 93       	push	r17
    12f6:	cf 93       	push	r28
    12f8:	df 93       	push	r29
    12fa:	cd b7       	in	r28, 0x3d	; 61
    12fc:	de b7       	in	r29, 0x3e	; 62
    12fe:	ca 1b       	sub	r28, r26
    1300:	db 0b       	sbc	r29, r27
    1302:	0f b6       	in	r0, 0x3f	; 63
    1304:	f8 94       	cli
    1306:	de bf       	out	0x3e, r29	; 62
    1308:	0f be       	out	0x3f, r0	; 63
    130a:	cd bf       	out	0x3d, r28	; 61
    130c:	09 94       	ijmp

0000130e <__epilogue_restores__>:
    130e:	2a 88       	ldd	r2, Y+18	; 0x12
    1310:	39 88       	ldd	r3, Y+17	; 0x11
    1312:	48 88       	ldd	r4, Y+16	; 0x10
    1314:	5f 84       	ldd	r5, Y+15	; 0x0f
    1316:	6e 84       	ldd	r6, Y+14	; 0x0e
    1318:	7d 84       	ldd	r7, Y+13	; 0x0d
    131a:	8c 84       	ldd	r8, Y+12	; 0x0c
    131c:	9b 84       	ldd	r9, Y+11	; 0x0b
    131e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1320:	b9 84       	ldd	r11, Y+9	; 0x09
    1322:	c8 84       	ldd	r12, Y+8	; 0x08
    1324:	df 80       	ldd	r13, Y+7	; 0x07
    1326:	ee 80       	ldd	r14, Y+6	; 0x06
    1328:	fd 80       	ldd	r15, Y+5	; 0x05
    132a:	0c 81       	ldd	r16, Y+4	; 0x04
    132c:	1b 81       	ldd	r17, Y+3	; 0x03
    132e:	aa 81       	ldd	r26, Y+2	; 0x02
    1330:	b9 81       	ldd	r27, Y+1	; 0x01
    1332:	ce 0f       	add	r28, r30
    1334:	d1 1d       	adc	r29, r1
    1336:	0f b6       	in	r0, 0x3f	; 63
    1338:	f8 94       	cli
    133a:	de bf       	out	0x3e, r29	; 62
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	cd bf       	out	0x3d, r28	; 61
    1340:	ed 01       	movw	r28, r26
    1342:	08 95       	ret

00001344 <_exit>:
    1344:	f8 94       	cli

00001346 <__stop_program>:
    1346:	ff cf       	rjmp	.-2      	; 0x1346 <__stop_program>
