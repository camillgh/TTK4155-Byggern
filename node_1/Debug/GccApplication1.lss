
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800100  00000f52  00000fe6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f52  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800192  00800192  00001078  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000010d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00001110  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d85  00000000  00000000  000012f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001067  00000000  00000000  00003075  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001069  00000000  00000000  000040dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000484  00000000  00000000  00005148  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000808  00000000  00000000  000055cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d11  00000000  00000000  00005dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00006ae5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 e5       	ldi	r30, 0x52	; 82
  84:	ff e0       	ldi	r31, 0x0F	; 15
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 39       	cpi	r26, 0x92	; 146
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e9       	ldi	r26, 0x92	; 146
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	af 39       	cpi	r26, 0x9F	; 159
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 dd 01 	call	0x3ba	; 0x3ba <main>
  a6:	0c 94 a7 07 	jmp	0xf4e	; 0xf4e <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
  ba:	30 98       	cbi	0x06, 0	; 6
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <adc_clock_signal>:
  c2:	b8 9a       	sbi	0x17, 0	; 23
  c4:	83 b7       	in	r24, 0x33	; 51
  c6:	88 60       	ori	r24, 0x08	; 8
  c8:	83 bf       	out	0x33, r24	; 51
  ca:	83 b7       	in	r24, 0x33	; 51
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	83 bf       	out	0x33, r24	; 51
  d0:	83 b7       	in	r24, 0x33	; 51
  d2:	80 61       	ori	r24, 0x10	; 16
  d4:	83 bf       	out	0x33, r24	; 51
  d6:	83 b7       	in	r24, 0x33	; 51
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	83 bf       	out	0x33, r24	; 51
  dc:	8a e0       	ldi	r24, 0x0A	; 10
  de:	81 bf       	out	0x31, r24	; 49
  e0:	08 95       	ret

000000e2 <adc_read>:
  e2:	80 68       	ori	r24, 0x80	; 128
  e4:	e0 e0       	ldi	r30, 0x00	; 0
  e6:	f4 e1       	ldi	r31, 0x14	; 20
  e8:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ea:	84 ea       	ldi	r24, 0xA4	; 164
  ec:	8a 95       	dec	r24
  ee:	f1 f7       	brne	.-4      	; 0xec <adc_read+0xa>
  f0:	80 81       	ld	r24, Z
  f2:	08 95       	ret

000000f4 <can_init>:
  f4:	0e 94 8b 02 	call	0x516	; 0x516 <mcp2515_driver_init>
  f8:	f8 94       	cli
  fa:	38 9a       	sbi	0x07, 0	; 7
  fc:	86 b7       	in	r24, 0x36	; 54
  fe:	81 60       	ori	r24, 0x01	; 1
 100:	86 bf       	out	0x36, r24	; 54
 102:	8b b7       	in	r24, 0x3b	; 59
 104:	80 62       	ori	r24, 0x20	; 32
 106:	8b bf       	out	0x3b, r24	; 59
 108:	43 e0       	ldi	r20, 0x03	; 3
 10a:	6f ef       	ldi	r22, 0xFF	; 255
 10c:	8b e2       	ldi	r24, 0x2B	; 43
 10e:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_bit_modify>
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	6f ef       	ldi	r22, 0xFF	; 255
 116:	8c e2       	ldi	r24, 0x2C	; 44
 118:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_bit_modify>
 11c:	30 98       	cbi	0x06, 0	; 6
 11e:	78 94       	sei
 120:	8e e0       	ldi	r24, 0x0E	; 14
 122:	0e 94 38 02 	call	0x470	; 0x470 <mcp2515_read>
 126:	80 7e       	andi	r24, 0xE0	; 224
 128:	80 34       	cpi	r24, 0x40	; 64
 12a:	41 f0       	breq	.+16     	; 0x13c <can_init+0x48>
 12c:	86 e0       	ldi	r24, 0x06	; 6
 12e:	91 e0       	ldi	r25, 0x01	; 1
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	0e 94 85 03 	call	0x70a	; 0x70a <printf>
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	08 95       	ret

0000013e <can_transmission_completed>:
 13e:	80 e3       	ldi	r24, 0x30	; 48
 140:	0e 94 38 02 	call	0x470	; 0x470 <mcp2515_read>
 144:	83 fb       	bst	r24, 3
 146:	88 27       	eor	r24, r24
 148:	80 f9       	bld	r24, 0
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	89 27       	eor	r24, r25
 14e:	08 95       	ret

00000150 <can_send>:
 150:	cf 92       	push	r12
 152:	df 92       	push	r13
 154:	ef 92       	push	r14
 156:	ff 92       	push	r15
 158:	1f 93       	push	r17
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	6c 01       	movw	r12, r24
 160:	0e 94 9f 00 	call	0x13e	; 0x13e <can_transmission_completed>
 164:	88 23       	and	r24, r24
 166:	91 f1       	breq	.+100    	; 0x1cc <can_send+0x7c>
 168:	f6 01       	movw	r30, r12
 16a:	80 81       	ld	r24, Z
 16c:	91 81       	ldd	r25, Z+1	; 0x01
 16e:	96 95       	lsr	r25
 170:	87 95       	ror	r24
 172:	96 95       	lsr	r25
 174:	87 95       	ror	r24
 176:	96 95       	lsr	r25
 178:	87 95       	ror	r24
 17a:	61 e4       	ldi	r22, 0x41	; 65
 17c:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 180:	f6 01       	movw	r30, r12
 182:	80 81       	ld	r24, Z
 184:	62 e4       	ldi	r22, 0x42	; 66
 186:	82 95       	swap	r24
 188:	88 0f       	add	r24, r24
 18a:	80 7e       	andi	r24, 0xE0	; 224
 18c:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 190:	65 e4       	ldi	r22, 0x45	; 69
 192:	f6 01       	movw	r30, r12
 194:	82 81       	ldd	r24, Z+2	; 0x02
 196:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 19a:	f6 01       	movw	r30, r12
 19c:	82 81       	ldd	r24, Z+2	; 0x02
 19e:	88 23       	and	r24, r24
 1a0:	a9 f0       	breq	.+42     	; 0x1cc <can_send+0x7c>
 1a2:	76 01       	movw	r14, r12
 1a4:	f3 e0       	ldi	r31, 0x03	; 3
 1a6:	ef 0e       	add	r14, r31
 1a8:	f1 1c       	adc	r15, r1
 1aa:	16 e4       	ldi	r17, 0x46	; 70
 1ac:	c0 e0       	ldi	r28, 0x00	; 0
 1ae:	d0 e0       	ldi	r29, 0x00	; 0
 1b0:	61 2f       	mov	r22, r17
 1b2:	f7 01       	movw	r30, r14
 1b4:	81 91       	ld	r24, Z+
 1b6:	7f 01       	movw	r14, r30
 1b8:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	1f 5f       	subi	r17, 0xFF	; 255
 1c0:	f6 01       	movw	r30, r12
 1c2:	82 81       	ldd	r24, Z+2	; 0x02
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	c8 17       	cp	r28, r24
 1c8:	d9 07       	cpc	r29, r25
 1ca:	94 f3       	brlt	.-28     	; 0x1b0 <can_send+0x60>
 1cc:	82 e8       	ldi	r24, 0x82	; 130
 1ce:	0e 94 5e 02 	call	0x4bc	; 0x4bc <mcp2515_request_to_send>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	ff 90       	pop	r15
 1da:	ef 90       	pop	r14
 1dc:	df 90       	pop	r13
 1de:	cf 90       	pop	r12
 1e0:	08 95       	ret

000001e2 <can_interrupt>:
 1e2:	40 e0       	ldi	r20, 0x00	; 0
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c e2       	ldi	r24, 0x2C	; 44
 1e8:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_bit_modify>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__data_end>
 1f2:	08 95       	ret

000001f4 <__vector_3>:
 1f4:	1f 92       	push	r1
 1f6:	0f 92       	push	r0
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	0f 92       	push	r0
 1fc:	11 24       	eor	r1, r1
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 216:	8f ef       	ldi	r24, 0xFF	; 255
 218:	9f e2       	ldi	r25, 0x2F	; 47
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <__vector_3+0x26>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <__vector_3+0x2c>
 220:	00 00       	nop
 222:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <can_interrupt>
 226:	ff 91       	pop	r31
 228:	ef 91       	pop	r30
 22a:	bf 91       	pop	r27
 22c:	af 91       	pop	r26
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	7f 91       	pop	r23
 234:	6f 91       	pop	r22
 236:	5f 91       	pop	r21
 238:	4f 91       	pop	r20
 23a:	3f 91       	pop	r19
 23c:	2f 91       	pop	r18
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <joystick_button>:
	joystick_calibration();

}

int joystick_button(int button){
	switch (button){
 248:	89 2b       	or	r24, r25
 24a:	29 f4       	brne	.+10     	; 0x256 <joystick_button+0xe>
		// Left touch button
		case 0: 
			if (test_bit(PINB, PINB1)){
 24c:	86 b3       	in	r24, 0x16	; 22
				return 1;
 24e:	86 95       	lsr	r24
 250:	81 70       	andi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	08 95       	ret
				break;
			}
		default:
			break;*/
	}
	return 0;
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	90 e0       	ldi	r25, 0x00	; 0
}
 25a:	08 95       	ret

0000025c <joystick_pos>:



joystick_position joystick_pos(void)
{	
 25c:	cf 93       	push	r28
	joystick_position position = {0,0};
	uint8_t x,y;
	
	x = adc_read(0);
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 266:	c8 2f       	mov	r28, r24
	y = adc_read(1);
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 270:	38 2f       	mov	r19, r24
	
	//position.position_x = (x-x_mid)*200/255;
	//position.position_y = (y-y_mid)*200/255;
	
	//printf("(%d, %d) \n \r", position.position_x, position.position_y);
	int8_t diff_x = x - x_mid;
 272:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <x_mid>
	
	
	if(x > x_mid) {
 276:	2c 17       	cp	r18, r28
 278:	a0 f4       	brcc	.+40     	; 0x2a2 <joystick_pos+0x46>
		position.position_x = 100*(x-x_mid)/(0xFF - x_mid);
 27a:	e2 2f       	mov	r30, r18
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	4c 2f       	mov	r20, r28
 280:	50 e0       	ldi	r21, 0x00	; 0
 282:	4e 1b       	sub	r20, r30
 284:	5f 0b       	sbc	r21, r31
 286:	64 e6       	ldi	r22, 0x64	; 100
 288:	64 9f       	mul	r22, r20
 28a:	c0 01       	movw	r24, r0
 28c:	65 9f       	mul	r22, r21
 28e:	90 0d       	add	r25, r0
 290:	11 24       	eor	r1, r1
 292:	6f ef       	ldi	r22, 0xFF	; 255
 294:	70 e0       	ldi	r23, 0x00	; 0
 296:	6e 1b       	sub	r22, r30
 298:	7f 0b       	sbc	r23, r31
 29a:	0e 94 12 03 	call	0x624	; 0x624 <__divmodhi4>
 29e:	46 2f       	mov	r20, r22
 2a0:	01 c0       	rjmp	.+2      	; 0x2a4 <joystick_pos+0x48>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
 2a2:	40 e0       	ldi	r20, 0x00	; 0
	
	if(x > x_mid) {
		position.position_x = 100*(x-x_mid)/(0xFF - x_mid);
	} 
	
	if (x < x_mid) {
 2a4:	c2 17       	cp	r28, r18
 2a6:	78 f4       	brcc	.+30     	; 0x2c6 <joystick_pos+0x6a>
		position.position_x = 100*(x-x_mid)/(x_mid-0);
 2a8:	62 2f       	mov	r22, r18
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	4c 2f       	mov	r20, r28
 2ae:	50 e0       	ldi	r21, 0x00	; 0
 2b0:	46 1b       	sub	r20, r22
 2b2:	57 0b       	sbc	r21, r23
 2b4:	e4 e6       	ldi	r30, 0x64	; 100
 2b6:	e4 9f       	mul	r30, r20
 2b8:	c0 01       	movw	r24, r0
 2ba:	e5 9f       	mul	r30, r21
 2bc:	90 0d       	add	r25, r0
 2be:	11 24       	eor	r1, r1
 2c0:	0e 94 12 03 	call	0x624	; 0x624 <__divmodhi4>
 2c4:	46 2f       	mov	r20, r22
	} 
		
	if (x == x_mid) {
 2c6:	c2 13       	cpse	r28, r18
 2c8:	01 c0       	rjmp	.+2      	; 0x2cc <joystick_pos+0x70>
		position.position_x = 0;
 2ca:	40 e0       	ldi	r20, 0x00	; 0
	}
	
	//int8_t y_diff = y-y_mid;
	
	//Calculate position y percentage
	if(y > y_mid) {
 2cc:	20 91 93 01 	lds	r18, 0x0193	; 0x800193 <y_mid>
 2d0:	23 17       	cp	r18, r19
 2d2:	a0 f4       	brcc	.+40     	; 0x2fc <joystick_pos+0xa0>
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
 2d4:	e2 2f       	mov	r30, r18
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	63 2f       	mov	r22, r19
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	6e 1b       	sub	r22, r30
 2de:	7f 0b       	sbc	r23, r31
 2e0:	54 e6       	ldi	r21, 0x64	; 100
 2e2:	56 9f       	mul	r21, r22
 2e4:	c0 01       	movw	r24, r0
 2e6:	57 9f       	mul	r21, r23
 2e8:	90 0d       	add	r25, r0
 2ea:	11 24       	eor	r1, r1
 2ec:	6f ef       	ldi	r22, 0xFF	; 255
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	6e 1b       	sub	r22, r30
 2f2:	7f 0b       	sbc	r23, r31
 2f4:	0e 94 12 03 	call	0x624	; 0x624 <__divmodhi4>
 2f8:	76 2f       	mov	r23, r22
 2fa:	01 c0       	rjmp	.+2      	; 0x2fe <joystick_pos+0xa2>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
 2fc:	70 e0       	ldi	r23, 0x00	; 0
	
	//Calculate position y percentage
	if(y > y_mid) {
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
	}
	if (y < y_mid) {
 2fe:	32 17       	cp	r19, r18
 300:	78 f4       	brcc	.+30     	; 0x320 <joystick_pos+0xc4>
		position.position_y = 100*(y-y_mid)/y_mid;
 302:	62 2f       	mov	r22, r18
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	e3 2f       	mov	r30, r19
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	e6 1b       	sub	r30, r22
 30c:	f7 0b       	sbc	r31, r23
 30e:	54 e6       	ldi	r21, 0x64	; 100
 310:	5e 9f       	mul	r21, r30
 312:	c0 01       	movw	r24, r0
 314:	5f 9f       	mul	r21, r31
 316:	90 0d       	add	r25, r0
 318:	11 24       	eor	r1, r1
 31a:	0e 94 12 03 	call	0x624	; 0x624 <__divmodhi4>
 31e:	76 2f       	mov	r23, r22
	} if (y == y_mid) {
 320:	32 13       	cpse	r19, r18
 322:	01 c0       	rjmp	.+2      	; 0x326 <joystick_pos+0xca>
		position.position_y = 0;
 324:	70 e0       	ldi	r23, 0x00	; 0
	
	
	//printf("%d \n \r", position.position_x);

	return position;
}
 326:	64 2f       	mov	r22, r20
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	cf 91       	pop	r28
 32c:	08 95       	ret

0000032e <joystick_direction>:
	
	int deadzone = 3;
	
	joystick_position position;
	
	position = joystick_pos();
 32e:	0e 94 2e 01 	call	0x25c	; 0x25c <joystick_pos>
 332:	26 2f       	mov	r18, r22
 334:	97 2f       	mov	r25, r23
	
	if (position.position_x > deadzone){
 336:	64 30       	cpi	r22, 0x04	; 4
 338:	0c f0       	brlt	.+2      	; 0x33c <joystick_direction+0xe>
		position.dir = 'R';
 33a:	82 e5       	ldi	r24, 0x52	; 82
	}
	
	if (position.position_x < -deadzone){
 33c:	2d 3f       	cpi	r18, 0xFD	; 253
 33e:	0c f4       	brge	.+2      	; 0x342 <joystick_direction+0x14>
		position.dir = 'L';
 340:	8c e4       	ldi	r24, 0x4C	; 76
	}
	
	if (position.position_y > deadzone){
 342:	94 30       	cpi	r25, 0x04	; 4
 344:	0c f0       	brlt	.+2      	; 0x348 <joystick_direction+0x1a>
		position.dir = 'U';
 346:	85 e5       	ldi	r24, 0x55	; 85
	}
	if (position.position_y <  -deadzone){
 348:	9d 3f       	cpi	r25, 0xFD	; 253
 34a:	0c f4       	brge	.+2      	; 0x34e <joystick_direction+0x20>
		position.dir = 'D';
 34c:	84 e4       	ldi	r24, 0x44	; 68
	}
	if (abs(position.position_x) <= deadzone && abs(position.position_y) <= deadzone){
 34e:	26 2f       	mov	r18, r22
 350:	06 2e       	mov	r0, r22
 352:	00 0c       	add	r0, r0
 354:	33 0b       	sbc	r19, r19
 356:	33 23       	and	r19, r19
 358:	1c f4       	brge	.+6      	; 0x360 <joystick_direction+0x32>
 35a:	31 95       	neg	r19
 35c:	21 95       	neg	r18
 35e:	31 09       	sbc	r19, r1
 360:	24 30       	cpi	r18, 0x04	; 4
 362:	31 05       	cpc	r19, r1
 364:	6c f4       	brge	.+26     	; 0x380 <joystick_direction+0x52>
 366:	27 2f       	mov	r18, r23
 368:	07 2e       	mov	r0, r23
 36a:	00 0c       	add	r0, r0
 36c:	33 0b       	sbc	r19, r19
 36e:	33 23       	and	r19, r19
 370:	1c f4       	brge	.+6      	; 0x378 <joystick_direction+0x4a>
 372:	31 95       	neg	r19
 374:	21 95       	neg	r18
 376:	31 09       	sbc	r19, r1
 378:	24 30       	cpi	r18, 0x04	; 4
 37a:	31 05       	cpc	r19, r1
 37c:	0c f4       	brge	.+2      	; 0x380 <joystick_direction+0x52>
		position.dir = 'N';
 37e:	8e e4       	ldi	r24, 0x4E	; 78
	}
	return position;
	
};
 380:	08 95       	ret

00000382 <joystick_calibration>:

void joystick_calibration(void){
 382:	cf 93       	push	r28
	
	uint8_t x,y;
	
	x = adc_read(0);
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 38c:	c8 2f       	mov	r28, r24
	y = adc_read(1);
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 396:	ec ec       	ldi	r30, 0xCC	; 204
 398:	f4 e0       	ldi	r31, 0x04	; 4
 39a:	31 97       	sbiw	r30, 0x01	; 1
 39c:	f1 f7       	brne	.-4      	; 0x39a <joystick_calibration+0x18>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <joystick_calibration+0x1e>
 3a0:	00 00       	nop
	_delay_ms(1);
	x_mid = x;
 3a2:	c0 93 94 01 	sts	0x0194, r28	; 0x800194 <x_mid>
	y_mid = y;
 3a6:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <y_mid>
}
 3aa:	cf 91       	pop	r28
 3ac:	08 95       	ret

000003ae <joystick_init>:
	
	// Initialize external units
	//adc_init();
	
	// Set PINB1, PINB2 and PINB3 as inputs
	DDRB &= ~(1<<PINB1) & ~(1<<PINB2) & ~(1<<PINB3);
 3ae:	87 b3       	in	r24, 0x17	; 23
 3b0:	81 7f       	andi	r24, 0xF1	; 241
 3b2:	87 bb       	out	0x17, r24	; 23
	
	// Calibrate joystick
	joystick_calibration();
 3b4:	0e 94 c1 01 	call	0x382	; 0x382 <joystick_calibration>
 3b8:	08 95       	ret

000003ba <main>:
#include "mcp2515.h"
#include "can.h"
#include "mcp2515_driver.h"


void main(void){
 3ba:	cf 93       	push	r28
 3bc:	df 93       	push	r29
 3be:	cd b7       	in	r28, 0x3d	; 61
 3c0:	de b7       	in	r29, 0x3e	; 62
 3c2:	2b 97       	sbiw	r28, 0x0b	; 11
 3c4:	0f b6       	in	r0, 0x3f	; 63
 3c6:	f8 94       	cli
 3c8:	de bf       	out	0x3e, r29	; 62
 3ca:	0f be       	out	0x3f, r0	; 63
 3cc:	cd bf       	out	0x3d, r28	; 61

	joystick_position j_position;
	slider_position s_position;
	can_message message, message2;
	adc_init();
 3ce:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	USART_init(MYUBRR);
 3d2:	8f e1       	ldi	r24, 0x1F	; 31
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 05 03 	call	0x60a	; 0x60a <USART_init>
	
	adc_clock_signal();
 3da:	0e 94 61 00 	call	0xc2	; 0xc2 <adc_clock_signal>
	joystick_init();
 3de:	0e 94 d7 01 	call	0x3ae	; 0x3ae <joystick_init>
	SRAM_init();
 3e2:	0e 94 f5 02 	call	0x5ea	; 0x5ea <SRAM_init>
	can_init();
 3e6:	0e 94 7a 00 	call	0xf4	; 0xf4 <can_init>

	//oled_init();
	//oled_reset();
	//oled_pos(0,0);
	
	message.id = 0;
 3ea:	1a 82       	std	Y+2, r1	; 0x02
 3ec:	19 82       	std	Y+1, r1	; 0x01
	message.length = 4;	
 3ee:	84 e0       	ldi	r24, 0x04	; 4
 3f0:	8b 83       	std	Y+3, r24	; 0x03
		
		int button_l = 0;
		int button_r = 0;	
		int button_joy = 0;
		
		j_position = joystick_pos();
 3f2:	0e 94 2e 01 	call	0x25c	; 0x25c <joystick_pos>
		//printf("Position 1: %d\n\r", j_position.position_x);
		j_position = joystick_direction();
 3f6:	0e 94 97 01 	call	0x32e	; 0x32e <joystick_direction>
		
		// Slider position
		//printf("(Left slider: %d, Right slider: %d) \n \r", s_position.position_left, s_position.position_right);
		
		//Buttons
		if (joystick_button(0)){
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_l = 1;
		}
		if (joystick_button(0)==0){
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_l = 0;
		}
		if (joystick_button(1)){
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_r = 1;
		}
		if (joystick_button(1)==0){
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_r = 0;
		}
		if (joystick_button(2)){
 41a:	82 e0       	ldi	r24, 0x02	; 2
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_joy = 0;
		}
		if (joystick_button(2)==0){
 422:	82 e0       	ldi	r24, 0x02	; 2
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
 42a:	87 ea       	ldi	r24, 0xA7	; 167
 42c:	91 e6       	ldi	r25, 0x61	; 97
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
		*/
		
		// Assignment 6
		

		message.data[0] = adc_read(0);
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 43e:	8c 83       	std	Y+4, r24	; 0x04
		message.data[1] = adc_read(1);
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 448:	8d 83       	std	Y+5, r24	; 0x05
		message.data[2] = adc_read(3);
 44a:	83 e0       	ldi	r24, 0x03	; 3
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 452:	8e 83       	std	Y+6, r24	; 0x06
		message.data[3] = adc_read(2);
 454:	82 e0       	ldi	r24, 0x02	; 2
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 45c:	8f 83       	std	Y+7, r24	; 0x07
		
		
		can_send(&message);
 45e:	ce 01       	movw	r24, r28
 460:	01 96       	adiw	r24, 0x01	; 1
 462:	0e 94 a8 00 	call	0x150	; 0x150 <can_send>
 466:	c5 cf       	rjmp	.-118    	; 0x3f2 <main+0x38>

00000468 <slave_select>:
 468:	c4 98       	cbi	0x18, 4	; 24
 46a:	08 95       	ret

0000046c <slave_deselect>:
 46c:	c4 9a       	sbi	0x18, 4	; 24
 46e:	08 95       	ret

00000470 <mcp2515_read>:
 470:	cf 93       	push	r28
 472:	c8 2f       	mov	r28, r24
 474:	0e 94 34 02 	call	0x468	; 0x468 <slave_select>
 478:	83 e0       	ldi	r24, 0x03	; 3
 47a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 47e:	8c 2f       	mov	r24, r28
 480:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 484:	0e 94 ee 02 	call	0x5dc	; 0x5dc <spi_receive>
 488:	c8 2f       	mov	r28, r24
 48a:	0e 94 36 02 	call	0x46c	; 0x46c <slave_deselect>
 48e:	8c 2f       	mov	r24, r28
 490:	cf 91       	pop	r28
 492:	08 95       	ret

00000494 <mcp2515_write>:
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	c8 2f       	mov	r28, r24
 49a:	d6 2f       	mov	r29, r22
 49c:	0e 94 34 02 	call	0x468	; 0x468 <slave_select>
 4a0:	82 e0       	ldi	r24, 0x02	; 2
 4a2:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4a6:	8d 2f       	mov	r24, r29
 4a8:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4ac:	8c 2f       	mov	r24, r28
 4ae:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4b2:	0e 94 36 02 	call	0x46c	; 0x46c <slave_deselect>
 4b6:	df 91       	pop	r29
 4b8:	cf 91       	pop	r28
 4ba:	08 95       	ret

000004bc <mcp2515_request_to_send>:
 4bc:	cf 93       	push	r28
 4be:	c8 2f       	mov	r28, r24
 4c0:	0e 94 34 02 	call	0x468	; 0x468 <slave_select>
 4c4:	8c 2f       	mov	r24, r28
 4c6:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4ca:	0e 94 36 02 	call	0x46c	; 0x46c <slave_deselect>
 4ce:	cf 91       	pop	r28
 4d0:	08 95       	ret

000004d2 <mcp2515_bit_modify>:
 4d2:	1f 93       	push	r17
 4d4:	cf 93       	push	r28
 4d6:	df 93       	push	r29
 4d8:	18 2f       	mov	r17, r24
 4da:	d6 2f       	mov	r29, r22
 4dc:	c4 2f       	mov	r28, r20
 4de:	0e 94 34 02 	call	0x468	; 0x468 <slave_select>
 4e2:	85 e0       	ldi	r24, 0x05	; 5
 4e4:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4e8:	81 2f       	mov	r24, r17
 4ea:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4ee:	8d 2f       	mov	r24, r29
 4f0:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4f4:	8c 2f       	mov	r24, r28
 4f6:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 4fa:	0e 94 36 02 	call	0x46c	; 0x46c <slave_deselect>
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	1f 91       	pop	r17
 504:	08 95       	ret

00000506 <mcp2515_reset>:
 506:	0e 94 34 02 	call	0x468	; 0x468 <slave_select>
 50a:	80 ec       	ldi	r24, 0xC0	; 192
 50c:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 510:	0e 94 36 02 	call	0x46c	; 0x46c <slave_deselect>
 514:	08 95       	ret

00000516 <mcp2515_driver_init>:
 516:	cf 93       	push	r28
 518:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <spi_init>
 51c:	0e 94 83 02 	call	0x506	; 0x506 <mcp2515_reset>
 520:	60 e6       	ldi	r22, 0x60	; 96
 522:	80 e6       	ldi	r24, 0x60	; 96
 524:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 528:	60 e7       	ldi	r22, 0x70	; 112
 52a:	80 e6       	ldi	r24, 0x60	; 96
 52c:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 530:	8e e0       	ldi	r24, 0x0E	; 14
 532:	0e 94 38 02 	call	0x470	; 0x470 <mcp2515_read>
 536:	c8 2f       	mov	r28, r24
 538:	68 e2       	ldi	r22, 0x28	; 40
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 540:	69 e2       	ldi	r22, 0x29	; 41
 542:	85 eb       	ldi	r24, 0xB5	; 181
 544:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 548:	6a e2       	ldi	r22, 0x2A	; 42
 54a:	83 e4       	ldi	r24, 0x43	; 67
 54c:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 550:	c0 7e       	andi	r28, 0xE0	; 224
 552:	c0 38       	cpi	r28, 0x80	; 128
 554:	51 f0       	breq	.+20     	; 0x56a <mcp2515_driver_init+0x54>
 556:	88 e5       	ldi	r24, 0x58	; 88
 558:	91 e0       	ldi	r25, 0x01	; 1
 55a:	9f 93       	push	r25
 55c:	8f 93       	push	r24
 55e:	0e 94 85 03 	call	0x70a	; 0x70a <printf>
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	2b c0       	rjmp	.+86     	; 0x5c0 <mcp2515_driver_init+0xaa>
 56a:	2f e3       	ldi	r18, 0x3F	; 63
 56c:	8d e0       	ldi	r24, 0x0D	; 13
 56e:	93 e0       	ldi	r25, 0x03	; 3
 570:	21 50       	subi	r18, 0x01	; 1
 572:	80 40       	sbci	r24, 0x00	; 0
 574:	90 40       	sbci	r25, 0x00	; 0
 576:	e1 f7       	brne	.-8      	; 0x570 <mcp2515_driver_init+0x5a>
 578:	00 c0       	rjmp	.+0      	; 0x57a <mcp2515_driver_init+0x64>
 57a:	00 00       	nop
 57c:	6f e0       	ldi	r22, 0x0F	; 15
 57e:	80 e0       	ldi	r24, 0x00	; 0
 580:	0e 94 4a 02 	call	0x494	; 0x494 <mcp2515_write>
 584:	8e e0       	ldi	r24, 0x0E	; 14
 586:	0e 94 38 02 	call	0x470	; 0x470 <mcp2515_read>
 58a:	c8 2f       	mov	r28, r24
 58c:	1f 92       	push	r1
 58e:	8f 93       	push	r24
 590:	8c e8       	ldi	r24, 0x8C	; 140
 592:	91 e0       	ldi	r25, 0x01	; 1
 594:	9f 93       	push	r25
 596:	8f 93       	push	r24
 598:	0e 94 85 03 	call	0x70a	; 0x70a <printf>
 59c:	c0 7e       	andi	r28, 0xE0	; 224
 59e:	0f 90       	pop	r0
 5a0:	0f 90       	pop	r0
 5a2:	0f 90       	pop	r0
 5a4:	0f 90       	pop	r0
 5a6:	c0 34       	cpi	r28, 0x40	; 64
 5a8:	51 f0       	breq	.+20     	; 0x5be <mcp2515_driver_init+0xa8>
 5aa:	86 e0       	ldi	r24, 0x06	; 6
 5ac:	91 e0       	ldi	r25, 0x01	; 1
 5ae:	9f 93       	push	r25
 5b0:	8f 93       	push	r24
 5b2:	0e 94 85 03 	call	0x70a	; 0x70a <printf>
 5b6:	0f 90       	pop	r0
 5b8:	0f 90       	pop	r0
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	01 c0       	rjmp	.+2      	; 0x5c0 <mcp2515_driver_init+0xaa>
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	cf 91       	pop	r28
 5c2:	08 95       	ret

000005c4 <spi_init>:
 5c4:	87 b3       	in	r24, 0x17	; 23
 5c6:	80 6b       	ori	r24, 0xB0	; 176
 5c8:	87 bb       	out	0x17, r24	; 23
 5ca:	be 98       	cbi	0x17, 6	; 23
 5cc:	8d b1       	in	r24, 0x0d	; 13
 5ce:	81 65       	ori	r24, 0x51	; 81
 5d0:	8d b9       	out	0x0d, r24	; 13
 5d2:	08 95       	ret

000005d4 <spi_send>:
 5d4:	8f b9       	out	0x0f, r24	; 15
 5d6:	77 9b       	sbis	0x0e, 7	; 14
 5d8:	fe cf       	rjmp	.-4      	; 0x5d6 <spi_send+0x2>
 5da:	08 95       	ret

000005dc <spi_receive>:
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <spi_send>
 5e2:	77 9b       	sbis	0x0e, 7	; 14
 5e4:	fe cf       	rjmp	.-4      	; 0x5e2 <spi_receive+0x6>
 5e6:	8f b1       	in	r24, 0x0f	; 15
 5e8:	08 95       	ret

000005ea <SRAM_init>:
 5ea:	85 b7       	in	r24, 0x35	; 53
 5ec:	80 68       	ori	r24, 0x80	; 128
 5ee:	85 bf       	out	0x35, r24	; 53
 5f0:	80 b7       	in	r24, 0x30	; 48
 5f2:	80 62       	ori	r24, 0x20	; 32
 5f4:	80 bf       	out	0x30, r24	; 48
 5f6:	08 95       	ret

000005f8 <USART_transmit>:
 5f8:	5d 9b       	sbis	0x0b, 5	; 11
 5fa:	fe cf       	rjmp	.-4      	; 0x5f8 <USART_transmit>
 5fc:	8c b9       	out	0x0c, r24	; 12
 5fe:	08 95       	ret

00000600 <USART_receive>:
 600:	5f 9b       	sbis	0x0b, 7	; 11
 602:	fe cf       	rjmp	.-4      	; 0x600 <USART_receive>
 604:	8c b1       	in	r24, 0x0c	; 12
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	08 95       	ret

0000060a <USART_init>:
 60a:	90 bd       	out	0x20, r25	; 32
 60c:	89 b9       	out	0x09, r24	; 9
 60e:	88 e1       	ldi	r24, 0x18	; 24
 610:	8a b9       	out	0x0a, r24	; 10
 612:	8e e8       	ldi	r24, 0x8E	; 142
 614:	80 bd       	out	0x20, r24	; 32
 616:	60 e0       	ldi	r22, 0x00	; 0
 618:	73 e0       	ldi	r23, 0x03	; 3
 61a:	8c ef       	ldi	r24, 0xFC	; 252
 61c:	92 e0       	ldi	r25, 0x02	; 2
 61e:	0e 94 3a 03 	call	0x674	; 0x674 <fdevopen>
 622:	08 95       	ret

00000624 <__divmodhi4>:
 624:	97 fb       	bst	r25, 7
 626:	07 2e       	mov	r0, r23
 628:	16 f4       	brtc	.+4      	; 0x62e <__divmodhi4+0xa>
 62a:	00 94       	com	r0
 62c:	07 d0       	rcall	.+14     	; 0x63c <__divmodhi4_neg1>
 62e:	77 fd       	sbrc	r23, 7
 630:	09 d0       	rcall	.+18     	; 0x644 <__divmodhi4_neg2>
 632:	0e 94 26 03 	call	0x64c	; 0x64c <__udivmodhi4>
 636:	07 fc       	sbrc	r0, 7
 638:	05 d0       	rcall	.+10     	; 0x644 <__divmodhi4_neg2>
 63a:	3e f4       	brtc	.+14     	; 0x64a <__divmodhi4_exit>

0000063c <__divmodhi4_neg1>:
 63c:	90 95       	com	r25
 63e:	81 95       	neg	r24
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	08 95       	ret

00000644 <__divmodhi4_neg2>:
 644:	70 95       	com	r23
 646:	61 95       	neg	r22
 648:	7f 4f       	sbci	r23, 0xFF	; 255

0000064a <__divmodhi4_exit>:
 64a:	08 95       	ret

0000064c <__udivmodhi4>:
 64c:	aa 1b       	sub	r26, r26
 64e:	bb 1b       	sub	r27, r27
 650:	51 e1       	ldi	r21, 0x11	; 17
 652:	07 c0       	rjmp	.+14     	; 0x662 <__udivmodhi4_ep>

00000654 <__udivmodhi4_loop>:
 654:	aa 1f       	adc	r26, r26
 656:	bb 1f       	adc	r27, r27
 658:	a6 17       	cp	r26, r22
 65a:	b7 07       	cpc	r27, r23
 65c:	10 f0       	brcs	.+4      	; 0x662 <__udivmodhi4_ep>
 65e:	a6 1b       	sub	r26, r22
 660:	b7 0b       	sbc	r27, r23

00000662 <__udivmodhi4_ep>:
 662:	88 1f       	adc	r24, r24
 664:	99 1f       	adc	r25, r25
 666:	5a 95       	dec	r21
 668:	a9 f7       	brne	.-22     	; 0x654 <__udivmodhi4_loop>
 66a:	80 95       	com	r24
 66c:	90 95       	com	r25
 66e:	bc 01       	movw	r22, r24
 670:	cd 01       	movw	r24, r26
 672:	08 95       	ret

00000674 <fdevopen>:
 674:	0f 93       	push	r16
 676:	1f 93       	push	r17
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	00 97       	sbiw	r24, 0x00	; 0
 67e:	31 f4       	brne	.+12     	; 0x68c <fdevopen+0x18>
 680:	61 15       	cp	r22, r1
 682:	71 05       	cpc	r23, r1
 684:	19 f4       	brne	.+6      	; 0x68c <fdevopen+0x18>
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	3a c0       	rjmp	.+116    	; 0x700 <fdevopen+0x8c>
 68c:	8b 01       	movw	r16, r22
 68e:	ec 01       	movw	r28, r24
 690:	6e e0       	ldi	r22, 0x0E	; 14
 692:	70 e0       	ldi	r23, 0x00	; 0
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <calloc>
 69c:	fc 01       	movw	r30, r24
 69e:	89 2b       	or	r24, r25
 6a0:	91 f3       	breq	.-28     	; 0x686 <fdevopen+0x12>
 6a2:	80 e8       	ldi	r24, 0x80	; 128
 6a4:	83 83       	std	Z+3, r24	; 0x03
 6a6:	01 15       	cp	r16, r1
 6a8:	11 05       	cpc	r17, r1
 6aa:	71 f0       	breq	.+28     	; 0x6c8 <fdevopen+0x54>
 6ac:	13 87       	std	Z+11, r17	; 0x0b
 6ae:	02 87       	std	Z+10, r16	; 0x0a
 6b0:	81 e8       	ldi	r24, 0x81	; 129
 6b2:	83 83       	std	Z+3, r24	; 0x03
 6b4:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <__iob>
 6b8:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <__iob+0x1>
 6bc:	89 2b       	or	r24, r25
 6be:	21 f4       	brne	.+8      	; 0x6c8 <fdevopen+0x54>
 6c0:	f0 93 96 01 	sts	0x0196, r31	; 0x800196 <__iob+0x1>
 6c4:	e0 93 95 01 	sts	0x0195, r30	; 0x800195 <__iob>
 6c8:	20 97       	sbiw	r28, 0x00	; 0
 6ca:	c9 f0       	breq	.+50     	; 0x6fe <fdevopen+0x8a>
 6cc:	d1 87       	std	Z+9, r29	; 0x09
 6ce:	c0 87       	std	Z+8, r28	; 0x08
 6d0:	83 81       	ldd	r24, Z+3	; 0x03
 6d2:	82 60       	ori	r24, 0x02	; 2
 6d4:	83 83       	std	Z+3, r24	; 0x03
 6d6:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <__iob+0x2>
 6da:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <__iob+0x3>
 6de:	89 2b       	or	r24, r25
 6e0:	71 f4       	brne	.+28     	; 0x6fe <fdevopen+0x8a>
 6e2:	f0 93 98 01 	sts	0x0198, r31	; 0x800198 <__iob+0x3>
 6e6:	e0 93 97 01 	sts	0x0197, r30	; 0x800197 <__iob+0x2>
 6ea:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <__iob+0x4>
 6ee:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <__iob+0x5>
 6f2:	89 2b       	or	r24, r25
 6f4:	21 f4       	brne	.+8      	; 0x6fe <fdevopen+0x8a>
 6f6:	f0 93 9a 01 	sts	0x019A, r31	; 0x80019a <__iob+0x5>
 6fa:	e0 93 99 01 	sts	0x0199, r30	; 0x800199 <__iob+0x4>
 6fe:	cf 01       	movw	r24, r30
 700:	df 91       	pop	r29
 702:	cf 91       	pop	r28
 704:	1f 91       	pop	r17
 706:	0f 91       	pop	r16
 708:	08 95       	ret

0000070a <printf>:
 70a:	a0 e0       	ldi	r26, 0x00	; 0
 70c:	b0 e0       	ldi	r27, 0x00	; 0
 70e:	eb e8       	ldi	r30, 0x8B	; 139
 710:	f3 e0       	ldi	r31, 0x03	; 3
 712:	0c 94 80 07 	jmp	0xf00	; 0xf00 <__prologue_saves__+0x20>
 716:	ae 01       	movw	r20, r28
 718:	4b 5f       	subi	r20, 0xFB	; 251
 71a:	5f 4f       	sbci	r21, 0xFF	; 255
 71c:	fa 01       	movw	r30, r20
 71e:	61 91       	ld	r22, Z+
 720:	71 91       	ld	r23, Z+
 722:	af 01       	movw	r20, r30
 724:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <__iob+0x2>
 728:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <__iob+0x3>
 72c:	0e 94 9b 03 	call	0x736	; 0x736 <vfprintf>
 730:	e2 e0       	ldi	r30, 0x02	; 2
 732:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__epilogue_restores__+0x20>

00000736 <vfprintf>:
 736:	ab e0       	ldi	r26, 0x0B	; 11
 738:	b0 e0       	ldi	r27, 0x00	; 0
 73a:	e1 ea       	ldi	r30, 0xA1	; 161
 73c:	f3 e0       	ldi	r31, 0x03	; 3
 73e:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__prologue_saves__>
 742:	6c 01       	movw	r12, r24
 744:	7b 01       	movw	r14, r22
 746:	8a 01       	movw	r16, r20
 748:	fc 01       	movw	r30, r24
 74a:	17 82       	std	Z+7, r1	; 0x07
 74c:	16 82       	std	Z+6, r1	; 0x06
 74e:	83 81       	ldd	r24, Z+3	; 0x03
 750:	81 ff       	sbrs	r24, 1
 752:	cc c1       	rjmp	.+920    	; 0xaec <vfprintf+0x3b6>
 754:	ce 01       	movw	r24, r28
 756:	01 96       	adiw	r24, 0x01	; 1
 758:	3c 01       	movw	r6, r24
 75a:	f6 01       	movw	r30, r12
 75c:	93 81       	ldd	r25, Z+3	; 0x03
 75e:	f7 01       	movw	r30, r14
 760:	93 fd       	sbrc	r25, 3
 762:	85 91       	lpm	r24, Z+
 764:	93 ff       	sbrs	r25, 3
 766:	81 91       	ld	r24, Z+
 768:	7f 01       	movw	r14, r30
 76a:	88 23       	and	r24, r24
 76c:	09 f4       	brne	.+2      	; 0x770 <vfprintf+0x3a>
 76e:	ba c1       	rjmp	.+884    	; 0xae4 <vfprintf+0x3ae>
 770:	85 32       	cpi	r24, 0x25	; 37
 772:	39 f4       	brne	.+14     	; 0x782 <vfprintf+0x4c>
 774:	93 fd       	sbrc	r25, 3
 776:	85 91       	lpm	r24, Z+
 778:	93 ff       	sbrs	r25, 3
 77a:	81 91       	ld	r24, Z+
 77c:	7f 01       	movw	r14, r30
 77e:	85 32       	cpi	r24, 0x25	; 37
 780:	29 f4       	brne	.+10     	; 0x78c <vfprintf+0x56>
 782:	b6 01       	movw	r22, r12
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 78a:	e7 cf       	rjmp	.-50     	; 0x75a <vfprintf+0x24>
 78c:	91 2c       	mov	r9, r1
 78e:	21 2c       	mov	r2, r1
 790:	31 2c       	mov	r3, r1
 792:	ff e1       	ldi	r31, 0x1F	; 31
 794:	f3 15       	cp	r31, r3
 796:	d8 f0       	brcs	.+54     	; 0x7ce <vfprintf+0x98>
 798:	8b 32       	cpi	r24, 0x2B	; 43
 79a:	79 f0       	breq	.+30     	; 0x7ba <vfprintf+0x84>
 79c:	38 f4       	brcc	.+14     	; 0x7ac <vfprintf+0x76>
 79e:	80 32       	cpi	r24, 0x20	; 32
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <vfprintf+0x8a>
 7a2:	83 32       	cpi	r24, 0x23	; 35
 7a4:	a1 f4       	brne	.+40     	; 0x7ce <vfprintf+0x98>
 7a6:	23 2d       	mov	r18, r3
 7a8:	20 61       	ori	r18, 0x10	; 16
 7aa:	1d c0       	rjmp	.+58     	; 0x7e6 <vfprintf+0xb0>
 7ac:	8d 32       	cpi	r24, 0x2D	; 45
 7ae:	61 f0       	breq	.+24     	; 0x7c8 <vfprintf+0x92>
 7b0:	80 33       	cpi	r24, 0x30	; 48
 7b2:	69 f4       	brne	.+26     	; 0x7ce <vfprintf+0x98>
 7b4:	23 2d       	mov	r18, r3
 7b6:	21 60       	ori	r18, 0x01	; 1
 7b8:	16 c0       	rjmp	.+44     	; 0x7e6 <vfprintf+0xb0>
 7ba:	83 2d       	mov	r24, r3
 7bc:	82 60       	ori	r24, 0x02	; 2
 7be:	38 2e       	mov	r3, r24
 7c0:	e3 2d       	mov	r30, r3
 7c2:	e4 60       	ori	r30, 0x04	; 4
 7c4:	3e 2e       	mov	r3, r30
 7c6:	2a c0       	rjmp	.+84     	; 0x81c <vfprintf+0xe6>
 7c8:	f3 2d       	mov	r31, r3
 7ca:	f8 60       	ori	r31, 0x08	; 8
 7cc:	1d c0       	rjmp	.+58     	; 0x808 <vfprintf+0xd2>
 7ce:	37 fc       	sbrc	r3, 7
 7d0:	2d c0       	rjmp	.+90     	; 0x82c <vfprintf+0xf6>
 7d2:	20 ed       	ldi	r18, 0xD0	; 208
 7d4:	28 0f       	add	r18, r24
 7d6:	2a 30       	cpi	r18, 0x0A	; 10
 7d8:	40 f0       	brcs	.+16     	; 0x7ea <vfprintf+0xb4>
 7da:	8e 32       	cpi	r24, 0x2E	; 46
 7dc:	b9 f4       	brne	.+46     	; 0x80c <vfprintf+0xd6>
 7de:	36 fc       	sbrc	r3, 6
 7e0:	81 c1       	rjmp	.+770    	; 0xae4 <vfprintf+0x3ae>
 7e2:	23 2d       	mov	r18, r3
 7e4:	20 64       	ori	r18, 0x40	; 64
 7e6:	32 2e       	mov	r3, r18
 7e8:	19 c0       	rjmp	.+50     	; 0x81c <vfprintf+0xe6>
 7ea:	36 fe       	sbrs	r3, 6
 7ec:	06 c0       	rjmp	.+12     	; 0x7fa <vfprintf+0xc4>
 7ee:	8a e0       	ldi	r24, 0x0A	; 10
 7f0:	98 9e       	mul	r9, r24
 7f2:	20 0d       	add	r18, r0
 7f4:	11 24       	eor	r1, r1
 7f6:	92 2e       	mov	r9, r18
 7f8:	11 c0       	rjmp	.+34     	; 0x81c <vfprintf+0xe6>
 7fa:	ea e0       	ldi	r30, 0x0A	; 10
 7fc:	2e 9e       	mul	r2, r30
 7fe:	20 0d       	add	r18, r0
 800:	11 24       	eor	r1, r1
 802:	22 2e       	mov	r2, r18
 804:	f3 2d       	mov	r31, r3
 806:	f0 62       	ori	r31, 0x20	; 32
 808:	3f 2e       	mov	r3, r31
 80a:	08 c0       	rjmp	.+16     	; 0x81c <vfprintf+0xe6>
 80c:	8c 36       	cpi	r24, 0x6C	; 108
 80e:	21 f4       	brne	.+8      	; 0x818 <vfprintf+0xe2>
 810:	83 2d       	mov	r24, r3
 812:	80 68       	ori	r24, 0x80	; 128
 814:	38 2e       	mov	r3, r24
 816:	02 c0       	rjmp	.+4      	; 0x81c <vfprintf+0xe6>
 818:	88 36       	cpi	r24, 0x68	; 104
 81a:	41 f4       	brne	.+16     	; 0x82c <vfprintf+0xf6>
 81c:	f7 01       	movw	r30, r14
 81e:	93 fd       	sbrc	r25, 3
 820:	85 91       	lpm	r24, Z+
 822:	93 ff       	sbrs	r25, 3
 824:	81 91       	ld	r24, Z+
 826:	7f 01       	movw	r14, r30
 828:	81 11       	cpse	r24, r1
 82a:	b3 cf       	rjmp	.-154    	; 0x792 <vfprintf+0x5c>
 82c:	98 2f       	mov	r25, r24
 82e:	9f 7d       	andi	r25, 0xDF	; 223
 830:	95 54       	subi	r25, 0x45	; 69
 832:	93 30       	cpi	r25, 0x03	; 3
 834:	28 f4       	brcc	.+10     	; 0x840 <vfprintf+0x10a>
 836:	0c 5f       	subi	r16, 0xFC	; 252
 838:	1f 4f       	sbci	r17, 0xFF	; 255
 83a:	9f e3       	ldi	r25, 0x3F	; 63
 83c:	99 83       	std	Y+1, r25	; 0x01
 83e:	0d c0       	rjmp	.+26     	; 0x85a <vfprintf+0x124>
 840:	83 36       	cpi	r24, 0x63	; 99
 842:	31 f0       	breq	.+12     	; 0x850 <vfprintf+0x11a>
 844:	83 37       	cpi	r24, 0x73	; 115
 846:	71 f0       	breq	.+28     	; 0x864 <vfprintf+0x12e>
 848:	83 35       	cpi	r24, 0x53	; 83
 84a:	09 f0       	breq	.+2      	; 0x84e <vfprintf+0x118>
 84c:	59 c0       	rjmp	.+178    	; 0x900 <vfprintf+0x1ca>
 84e:	21 c0       	rjmp	.+66     	; 0x892 <vfprintf+0x15c>
 850:	f8 01       	movw	r30, r16
 852:	80 81       	ld	r24, Z
 854:	89 83       	std	Y+1, r24	; 0x01
 856:	0e 5f       	subi	r16, 0xFE	; 254
 858:	1f 4f       	sbci	r17, 0xFF	; 255
 85a:	88 24       	eor	r8, r8
 85c:	83 94       	inc	r8
 85e:	91 2c       	mov	r9, r1
 860:	53 01       	movw	r10, r6
 862:	13 c0       	rjmp	.+38     	; 0x88a <vfprintf+0x154>
 864:	28 01       	movw	r4, r16
 866:	f2 e0       	ldi	r31, 0x02	; 2
 868:	4f 0e       	add	r4, r31
 86a:	51 1c       	adc	r5, r1
 86c:	f8 01       	movw	r30, r16
 86e:	a0 80       	ld	r10, Z
 870:	b1 80       	ldd	r11, Z+1	; 0x01
 872:	36 fe       	sbrs	r3, 6
 874:	03 c0       	rjmp	.+6      	; 0x87c <vfprintf+0x146>
 876:	69 2d       	mov	r22, r9
 878:	70 e0       	ldi	r23, 0x00	; 0
 87a:	02 c0       	rjmp	.+4      	; 0x880 <vfprintf+0x14a>
 87c:	6f ef       	ldi	r22, 0xFF	; 255
 87e:	7f ef       	ldi	r23, 0xFF	; 255
 880:	c5 01       	movw	r24, r10
 882:	0e 94 cb 06 	call	0xd96	; 0xd96 <strnlen>
 886:	4c 01       	movw	r8, r24
 888:	82 01       	movw	r16, r4
 88a:	f3 2d       	mov	r31, r3
 88c:	ff 77       	andi	r31, 0x7F	; 127
 88e:	3f 2e       	mov	r3, r31
 890:	16 c0       	rjmp	.+44     	; 0x8be <vfprintf+0x188>
 892:	28 01       	movw	r4, r16
 894:	22 e0       	ldi	r18, 0x02	; 2
 896:	42 0e       	add	r4, r18
 898:	51 1c       	adc	r5, r1
 89a:	f8 01       	movw	r30, r16
 89c:	a0 80       	ld	r10, Z
 89e:	b1 80       	ldd	r11, Z+1	; 0x01
 8a0:	36 fe       	sbrs	r3, 6
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <vfprintf+0x174>
 8a4:	69 2d       	mov	r22, r9
 8a6:	70 e0       	ldi	r23, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x178>
 8aa:	6f ef       	ldi	r22, 0xFF	; 255
 8ac:	7f ef       	ldi	r23, 0xFF	; 255
 8ae:	c5 01       	movw	r24, r10
 8b0:	0e 94 b9 06 	call	0xd72	; 0xd72 <strnlen_P>
 8b4:	4c 01       	movw	r8, r24
 8b6:	f3 2d       	mov	r31, r3
 8b8:	f0 68       	ori	r31, 0x80	; 128
 8ba:	3f 2e       	mov	r3, r31
 8bc:	82 01       	movw	r16, r4
 8be:	33 fc       	sbrc	r3, 3
 8c0:	1b c0       	rjmp	.+54     	; 0x8f8 <vfprintf+0x1c2>
 8c2:	82 2d       	mov	r24, r2
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	88 16       	cp	r8, r24
 8c8:	99 06       	cpc	r9, r25
 8ca:	b0 f4       	brcc	.+44     	; 0x8f8 <vfprintf+0x1c2>
 8cc:	b6 01       	movw	r22, r12
 8ce:	80 e2       	ldi	r24, 0x20	; 32
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 8d6:	2a 94       	dec	r2
 8d8:	f4 cf       	rjmp	.-24     	; 0x8c2 <vfprintf+0x18c>
 8da:	f5 01       	movw	r30, r10
 8dc:	37 fc       	sbrc	r3, 7
 8de:	85 91       	lpm	r24, Z+
 8e0:	37 fe       	sbrs	r3, 7
 8e2:	81 91       	ld	r24, Z+
 8e4:	5f 01       	movw	r10, r30
 8e6:	b6 01       	movw	r22, r12
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 8ee:	21 10       	cpse	r2, r1
 8f0:	2a 94       	dec	r2
 8f2:	21 e0       	ldi	r18, 0x01	; 1
 8f4:	82 1a       	sub	r8, r18
 8f6:	91 08       	sbc	r9, r1
 8f8:	81 14       	cp	r8, r1
 8fa:	91 04       	cpc	r9, r1
 8fc:	71 f7       	brne	.-36     	; 0x8da <vfprintf+0x1a4>
 8fe:	e8 c0       	rjmp	.+464    	; 0xad0 <vfprintf+0x39a>
 900:	84 36       	cpi	r24, 0x64	; 100
 902:	11 f0       	breq	.+4      	; 0x908 <vfprintf+0x1d2>
 904:	89 36       	cpi	r24, 0x69	; 105
 906:	41 f5       	brne	.+80     	; 0x958 <vfprintf+0x222>
 908:	f8 01       	movw	r30, r16
 90a:	37 fe       	sbrs	r3, 7
 90c:	07 c0       	rjmp	.+14     	; 0x91c <vfprintf+0x1e6>
 90e:	60 81       	ld	r22, Z
 910:	71 81       	ldd	r23, Z+1	; 0x01
 912:	82 81       	ldd	r24, Z+2	; 0x02
 914:	93 81       	ldd	r25, Z+3	; 0x03
 916:	0c 5f       	subi	r16, 0xFC	; 252
 918:	1f 4f       	sbci	r17, 0xFF	; 255
 91a:	08 c0       	rjmp	.+16     	; 0x92c <vfprintf+0x1f6>
 91c:	60 81       	ld	r22, Z
 91e:	71 81       	ldd	r23, Z+1	; 0x01
 920:	07 2e       	mov	r0, r23
 922:	00 0c       	add	r0, r0
 924:	88 0b       	sbc	r24, r24
 926:	99 0b       	sbc	r25, r25
 928:	0e 5f       	subi	r16, 0xFE	; 254
 92a:	1f 4f       	sbci	r17, 0xFF	; 255
 92c:	f3 2d       	mov	r31, r3
 92e:	ff 76       	andi	r31, 0x6F	; 111
 930:	3f 2e       	mov	r3, r31
 932:	97 ff       	sbrs	r25, 7
 934:	09 c0       	rjmp	.+18     	; 0x948 <vfprintf+0x212>
 936:	90 95       	com	r25
 938:	80 95       	com	r24
 93a:	70 95       	com	r23
 93c:	61 95       	neg	r22
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	f0 68       	ori	r31, 0x80	; 128
 946:	3f 2e       	mov	r3, r31
 948:	2a e0       	ldi	r18, 0x0A	; 10
 94a:	30 e0       	ldi	r19, 0x00	; 0
 94c:	a3 01       	movw	r20, r6
 94e:	0e 94 12 07 	call	0xe24	; 0xe24 <__ultoa_invert>
 952:	88 2e       	mov	r8, r24
 954:	86 18       	sub	r8, r6
 956:	45 c0       	rjmp	.+138    	; 0x9e2 <vfprintf+0x2ac>
 958:	85 37       	cpi	r24, 0x75	; 117
 95a:	31 f4       	brne	.+12     	; 0x968 <vfprintf+0x232>
 95c:	23 2d       	mov	r18, r3
 95e:	2f 7e       	andi	r18, 0xEF	; 239
 960:	b2 2e       	mov	r11, r18
 962:	2a e0       	ldi	r18, 0x0A	; 10
 964:	30 e0       	ldi	r19, 0x00	; 0
 966:	25 c0       	rjmp	.+74     	; 0x9b2 <vfprintf+0x27c>
 968:	93 2d       	mov	r25, r3
 96a:	99 7f       	andi	r25, 0xF9	; 249
 96c:	b9 2e       	mov	r11, r25
 96e:	8f 36       	cpi	r24, 0x6F	; 111
 970:	c1 f0       	breq	.+48     	; 0x9a2 <vfprintf+0x26c>
 972:	18 f4       	brcc	.+6      	; 0x97a <vfprintf+0x244>
 974:	88 35       	cpi	r24, 0x58	; 88
 976:	79 f0       	breq	.+30     	; 0x996 <vfprintf+0x260>
 978:	b5 c0       	rjmp	.+362    	; 0xae4 <vfprintf+0x3ae>
 97a:	80 37       	cpi	r24, 0x70	; 112
 97c:	19 f0       	breq	.+6      	; 0x984 <vfprintf+0x24e>
 97e:	88 37       	cpi	r24, 0x78	; 120
 980:	21 f0       	breq	.+8      	; 0x98a <vfprintf+0x254>
 982:	b0 c0       	rjmp	.+352    	; 0xae4 <vfprintf+0x3ae>
 984:	e9 2f       	mov	r30, r25
 986:	e0 61       	ori	r30, 0x10	; 16
 988:	be 2e       	mov	r11, r30
 98a:	b4 fe       	sbrs	r11, 4
 98c:	0d c0       	rjmp	.+26     	; 0x9a8 <vfprintf+0x272>
 98e:	fb 2d       	mov	r31, r11
 990:	f4 60       	ori	r31, 0x04	; 4
 992:	bf 2e       	mov	r11, r31
 994:	09 c0       	rjmp	.+18     	; 0x9a8 <vfprintf+0x272>
 996:	34 fe       	sbrs	r3, 4
 998:	0a c0       	rjmp	.+20     	; 0x9ae <vfprintf+0x278>
 99a:	29 2f       	mov	r18, r25
 99c:	26 60       	ori	r18, 0x06	; 6
 99e:	b2 2e       	mov	r11, r18
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0x278>
 9a2:	28 e0       	ldi	r18, 0x08	; 8
 9a4:	30 e0       	ldi	r19, 0x00	; 0
 9a6:	05 c0       	rjmp	.+10     	; 0x9b2 <vfprintf+0x27c>
 9a8:	20 e1       	ldi	r18, 0x10	; 16
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <vfprintf+0x27c>
 9ae:	20 e1       	ldi	r18, 0x10	; 16
 9b0:	32 e0       	ldi	r19, 0x02	; 2
 9b2:	f8 01       	movw	r30, r16
 9b4:	b7 fe       	sbrs	r11, 7
 9b6:	07 c0       	rjmp	.+14     	; 0x9c6 <vfprintf+0x290>
 9b8:	60 81       	ld	r22, Z
 9ba:	71 81       	ldd	r23, Z+1	; 0x01
 9bc:	82 81       	ldd	r24, Z+2	; 0x02
 9be:	93 81       	ldd	r25, Z+3	; 0x03
 9c0:	0c 5f       	subi	r16, 0xFC	; 252
 9c2:	1f 4f       	sbci	r17, 0xFF	; 255
 9c4:	06 c0       	rjmp	.+12     	; 0x9d2 <vfprintf+0x29c>
 9c6:	60 81       	ld	r22, Z
 9c8:	71 81       	ldd	r23, Z+1	; 0x01
 9ca:	80 e0       	ldi	r24, 0x00	; 0
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	0e 5f       	subi	r16, 0xFE	; 254
 9d0:	1f 4f       	sbci	r17, 0xFF	; 255
 9d2:	a3 01       	movw	r20, r6
 9d4:	0e 94 12 07 	call	0xe24	; 0xe24 <__ultoa_invert>
 9d8:	88 2e       	mov	r8, r24
 9da:	86 18       	sub	r8, r6
 9dc:	fb 2d       	mov	r31, r11
 9de:	ff 77       	andi	r31, 0x7F	; 127
 9e0:	3f 2e       	mov	r3, r31
 9e2:	36 fe       	sbrs	r3, 6
 9e4:	0d c0       	rjmp	.+26     	; 0xa00 <vfprintf+0x2ca>
 9e6:	23 2d       	mov	r18, r3
 9e8:	2e 7f       	andi	r18, 0xFE	; 254
 9ea:	a2 2e       	mov	r10, r18
 9ec:	89 14       	cp	r8, r9
 9ee:	58 f4       	brcc	.+22     	; 0xa06 <vfprintf+0x2d0>
 9f0:	34 fe       	sbrs	r3, 4
 9f2:	0b c0       	rjmp	.+22     	; 0xa0a <vfprintf+0x2d4>
 9f4:	32 fc       	sbrc	r3, 2
 9f6:	09 c0       	rjmp	.+18     	; 0xa0a <vfprintf+0x2d4>
 9f8:	83 2d       	mov	r24, r3
 9fa:	8e 7e       	andi	r24, 0xEE	; 238
 9fc:	a8 2e       	mov	r10, r24
 9fe:	05 c0       	rjmp	.+10     	; 0xa0a <vfprintf+0x2d4>
 a00:	b8 2c       	mov	r11, r8
 a02:	a3 2c       	mov	r10, r3
 a04:	03 c0       	rjmp	.+6      	; 0xa0c <vfprintf+0x2d6>
 a06:	b8 2c       	mov	r11, r8
 a08:	01 c0       	rjmp	.+2      	; 0xa0c <vfprintf+0x2d6>
 a0a:	b9 2c       	mov	r11, r9
 a0c:	a4 fe       	sbrs	r10, 4
 a0e:	0f c0       	rjmp	.+30     	; 0xa2e <vfprintf+0x2f8>
 a10:	fe 01       	movw	r30, r28
 a12:	e8 0d       	add	r30, r8
 a14:	f1 1d       	adc	r31, r1
 a16:	80 81       	ld	r24, Z
 a18:	80 33       	cpi	r24, 0x30	; 48
 a1a:	21 f4       	brne	.+8      	; 0xa24 <vfprintf+0x2ee>
 a1c:	9a 2d       	mov	r25, r10
 a1e:	99 7e       	andi	r25, 0xE9	; 233
 a20:	a9 2e       	mov	r10, r25
 a22:	09 c0       	rjmp	.+18     	; 0xa36 <vfprintf+0x300>
 a24:	a2 fe       	sbrs	r10, 2
 a26:	06 c0       	rjmp	.+12     	; 0xa34 <vfprintf+0x2fe>
 a28:	b3 94       	inc	r11
 a2a:	b3 94       	inc	r11
 a2c:	04 c0       	rjmp	.+8      	; 0xa36 <vfprintf+0x300>
 a2e:	8a 2d       	mov	r24, r10
 a30:	86 78       	andi	r24, 0x86	; 134
 a32:	09 f0       	breq	.+2      	; 0xa36 <vfprintf+0x300>
 a34:	b3 94       	inc	r11
 a36:	a3 fc       	sbrc	r10, 3
 a38:	11 c0       	rjmp	.+34     	; 0xa5c <vfprintf+0x326>
 a3a:	a0 fe       	sbrs	r10, 0
 a3c:	06 c0       	rjmp	.+12     	; 0xa4a <vfprintf+0x314>
 a3e:	b2 14       	cp	r11, r2
 a40:	88 f4       	brcc	.+34     	; 0xa64 <vfprintf+0x32e>
 a42:	28 0c       	add	r2, r8
 a44:	92 2c       	mov	r9, r2
 a46:	9b 18       	sub	r9, r11
 a48:	0e c0       	rjmp	.+28     	; 0xa66 <vfprintf+0x330>
 a4a:	b2 14       	cp	r11, r2
 a4c:	60 f4       	brcc	.+24     	; 0xa66 <vfprintf+0x330>
 a4e:	b6 01       	movw	r22, r12
 a50:	80 e2       	ldi	r24, 0x20	; 32
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 a58:	b3 94       	inc	r11
 a5a:	f7 cf       	rjmp	.-18     	; 0xa4a <vfprintf+0x314>
 a5c:	b2 14       	cp	r11, r2
 a5e:	18 f4       	brcc	.+6      	; 0xa66 <vfprintf+0x330>
 a60:	2b 18       	sub	r2, r11
 a62:	02 c0       	rjmp	.+4      	; 0xa68 <vfprintf+0x332>
 a64:	98 2c       	mov	r9, r8
 a66:	21 2c       	mov	r2, r1
 a68:	a4 fe       	sbrs	r10, 4
 a6a:	10 c0       	rjmp	.+32     	; 0xa8c <vfprintf+0x356>
 a6c:	b6 01       	movw	r22, r12
 a6e:	80 e3       	ldi	r24, 0x30	; 48
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 a76:	a2 fe       	sbrs	r10, 2
 a78:	17 c0       	rjmp	.+46     	; 0xaa8 <vfprintf+0x372>
 a7a:	a1 fc       	sbrc	r10, 1
 a7c:	03 c0       	rjmp	.+6      	; 0xa84 <vfprintf+0x34e>
 a7e:	88 e7       	ldi	r24, 0x78	; 120
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <vfprintf+0x352>
 a84:	88 e5       	ldi	r24, 0x58	; 88
 a86:	90 e0       	ldi	r25, 0x00	; 0
 a88:	b6 01       	movw	r22, r12
 a8a:	0c c0       	rjmp	.+24     	; 0xaa4 <vfprintf+0x36e>
 a8c:	8a 2d       	mov	r24, r10
 a8e:	86 78       	andi	r24, 0x86	; 134
 a90:	59 f0       	breq	.+22     	; 0xaa8 <vfprintf+0x372>
 a92:	a1 fe       	sbrs	r10, 1
 a94:	02 c0       	rjmp	.+4      	; 0xa9a <vfprintf+0x364>
 a96:	8b e2       	ldi	r24, 0x2B	; 43
 a98:	01 c0       	rjmp	.+2      	; 0xa9c <vfprintf+0x366>
 a9a:	80 e2       	ldi	r24, 0x20	; 32
 a9c:	a7 fc       	sbrc	r10, 7
 a9e:	8d e2       	ldi	r24, 0x2D	; 45
 aa0:	b6 01       	movw	r22, r12
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 aa8:	89 14       	cp	r8, r9
 aaa:	38 f4       	brcc	.+14     	; 0xaba <vfprintf+0x384>
 aac:	b6 01       	movw	r22, r12
 aae:	80 e3       	ldi	r24, 0x30	; 48
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 ab6:	9a 94       	dec	r9
 ab8:	f7 cf       	rjmp	.-18     	; 0xaa8 <vfprintf+0x372>
 aba:	8a 94       	dec	r8
 abc:	f3 01       	movw	r30, r6
 abe:	e8 0d       	add	r30, r8
 ac0:	f1 1d       	adc	r31, r1
 ac2:	80 81       	ld	r24, Z
 ac4:	b6 01       	movw	r22, r12
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 acc:	81 10       	cpse	r8, r1
 ace:	f5 cf       	rjmp	.-22     	; 0xaba <vfprintf+0x384>
 ad0:	22 20       	and	r2, r2
 ad2:	09 f4       	brne	.+2      	; 0xad6 <vfprintf+0x3a0>
 ad4:	42 ce       	rjmp	.-892    	; 0x75a <vfprintf+0x24>
 ad6:	b6 01       	movw	r22, r12
 ad8:	80 e2       	ldi	r24, 0x20	; 32
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	0e 94 d6 06 	call	0xdac	; 0xdac <fputc>
 ae0:	2a 94       	dec	r2
 ae2:	f6 cf       	rjmp	.-20     	; 0xad0 <vfprintf+0x39a>
 ae4:	f6 01       	movw	r30, r12
 ae6:	86 81       	ldd	r24, Z+6	; 0x06
 ae8:	97 81       	ldd	r25, Z+7	; 0x07
 aea:	02 c0       	rjmp	.+4      	; 0xaf0 <vfprintf+0x3ba>
 aec:	8f ef       	ldi	r24, 0xFF	; 255
 aee:	9f ef       	ldi	r25, 0xFF	; 255
 af0:	2b 96       	adiw	r28, 0x0b	; 11
 af2:	e2 e1       	ldi	r30, 0x12	; 18
 af4:	0c 94 8c 07 	jmp	0xf18	; 0xf18 <__epilogue_restores__>

00000af8 <calloc>:
 af8:	0f 93       	push	r16
 afa:	1f 93       	push	r17
 afc:	cf 93       	push	r28
 afe:	df 93       	push	r29
 b00:	86 9f       	mul	r24, r22
 b02:	80 01       	movw	r16, r0
 b04:	87 9f       	mul	r24, r23
 b06:	10 0d       	add	r17, r0
 b08:	96 9f       	mul	r25, r22
 b0a:	10 0d       	add	r17, r0
 b0c:	11 24       	eor	r1, r1
 b0e:	c8 01       	movw	r24, r16
 b10:	0e 94 98 05 	call	0xb30	; 0xb30 <malloc>
 b14:	ec 01       	movw	r28, r24
 b16:	00 97       	sbiw	r24, 0x00	; 0
 b18:	29 f0       	breq	.+10     	; 0xb24 <calloc+0x2c>
 b1a:	a8 01       	movw	r20, r16
 b1c:	60 e0       	ldi	r22, 0x00	; 0
 b1e:	70 e0       	ldi	r23, 0x00	; 0
 b20:	0e 94 c4 06 	call	0xd88	; 0xd88 <memset>
 b24:	ce 01       	movw	r24, r28
 b26:	df 91       	pop	r29
 b28:	cf 91       	pop	r28
 b2a:	1f 91       	pop	r17
 b2c:	0f 91       	pop	r16
 b2e:	08 95       	ret

00000b30 <malloc>:
 b30:	0f 93       	push	r16
 b32:	1f 93       	push	r17
 b34:	cf 93       	push	r28
 b36:	df 93       	push	r29
 b38:	82 30       	cpi	r24, 0x02	; 2
 b3a:	91 05       	cpc	r25, r1
 b3c:	10 f4       	brcc	.+4      	; 0xb42 <malloc+0x12>
 b3e:	82 e0       	ldi	r24, 0x02	; 2
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	e0 91 9d 01 	lds	r30, 0x019D	; 0x80019d <__flp>
 b46:	f0 91 9e 01 	lds	r31, 0x019E	; 0x80019e <__flp+0x1>
 b4a:	20 e0       	ldi	r18, 0x00	; 0
 b4c:	30 e0       	ldi	r19, 0x00	; 0
 b4e:	a0 e0       	ldi	r26, 0x00	; 0
 b50:	b0 e0       	ldi	r27, 0x00	; 0
 b52:	30 97       	sbiw	r30, 0x00	; 0
 b54:	19 f1       	breq	.+70     	; 0xb9c <malloc+0x6c>
 b56:	40 81       	ld	r20, Z
 b58:	51 81       	ldd	r21, Z+1	; 0x01
 b5a:	02 81       	ldd	r16, Z+2	; 0x02
 b5c:	13 81       	ldd	r17, Z+3	; 0x03
 b5e:	48 17       	cp	r20, r24
 b60:	59 07       	cpc	r21, r25
 b62:	c8 f0       	brcs	.+50     	; 0xb96 <malloc+0x66>
 b64:	84 17       	cp	r24, r20
 b66:	95 07       	cpc	r25, r21
 b68:	69 f4       	brne	.+26     	; 0xb84 <malloc+0x54>
 b6a:	10 97       	sbiw	r26, 0x00	; 0
 b6c:	31 f0       	breq	.+12     	; 0xb7a <malloc+0x4a>
 b6e:	12 96       	adiw	r26, 0x02	; 2
 b70:	0c 93       	st	X, r16
 b72:	12 97       	sbiw	r26, 0x02	; 2
 b74:	13 96       	adiw	r26, 0x03	; 3
 b76:	1c 93       	st	X, r17
 b78:	27 c0       	rjmp	.+78     	; 0xbc8 <malloc+0x98>
 b7a:	00 93 9d 01 	sts	0x019D, r16	; 0x80019d <__flp>
 b7e:	10 93 9e 01 	sts	0x019E, r17	; 0x80019e <__flp+0x1>
 b82:	22 c0       	rjmp	.+68     	; 0xbc8 <malloc+0x98>
 b84:	21 15       	cp	r18, r1
 b86:	31 05       	cpc	r19, r1
 b88:	19 f0       	breq	.+6      	; 0xb90 <malloc+0x60>
 b8a:	42 17       	cp	r20, r18
 b8c:	53 07       	cpc	r21, r19
 b8e:	18 f4       	brcc	.+6      	; 0xb96 <malloc+0x66>
 b90:	9a 01       	movw	r18, r20
 b92:	bd 01       	movw	r22, r26
 b94:	ef 01       	movw	r28, r30
 b96:	df 01       	movw	r26, r30
 b98:	f8 01       	movw	r30, r16
 b9a:	db cf       	rjmp	.-74     	; 0xb52 <malloc+0x22>
 b9c:	21 15       	cp	r18, r1
 b9e:	31 05       	cpc	r19, r1
 ba0:	f9 f0       	breq	.+62     	; 0xbe0 <malloc+0xb0>
 ba2:	28 1b       	sub	r18, r24
 ba4:	39 0b       	sbc	r19, r25
 ba6:	24 30       	cpi	r18, 0x04	; 4
 ba8:	31 05       	cpc	r19, r1
 baa:	80 f4       	brcc	.+32     	; 0xbcc <malloc+0x9c>
 bac:	8a 81       	ldd	r24, Y+2	; 0x02
 bae:	9b 81       	ldd	r25, Y+3	; 0x03
 bb0:	61 15       	cp	r22, r1
 bb2:	71 05       	cpc	r23, r1
 bb4:	21 f0       	breq	.+8      	; 0xbbe <malloc+0x8e>
 bb6:	fb 01       	movw	r30, r22
 bb8:	93 83       	std	Z+3, r25	; 0x03
 bba:	82 83       	std	Z+2, r24	; 0x02
 bbc:	04 c0       	rjmp	.+8      	; 0xbc6 <malloc+0x96>
 bbe:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <__flp+0x1>
 bc2:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <__flp>
 bc6:	fe 01       	movw	r30, r28
 bc8:	32 96       	adiw	r30, 0x02	; 2
 bca:	44 c0       	rjmp	.+136    	; 0xc54 <malloc+0x124>
 bcc:	fe 01       	movw	r30, r28
 bce:	e2 0f       	add	r30, r18
 bd0:	f3 1f       	adc	r31, r19
 bd2:	81 93       	st	Z+, r24
 bd4:	91 93       	st	Z+, r25
 bd6:	22 50       	subi	r18, 0x02	; 2
 bd8:	31 09       	sbc	r19, r1
 bda:	39 83       	std	Y+1, r19	; 0x01
 bdc:	28 83       	st	Y, r18
 bde:	3a c0       	rjmp	.+116    	; 0xc54 <malloc+0x124>
 be0:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <__brkval>
 be4:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <__brkval+0x1>
 be8:	23 2b       	or	r18, r19
 bea:	41 f4       	brne	.+16     	; 0xbfc <malloc+0xcc>
 bec:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 bf0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 bf4:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <__brkval+0x1>
 bf8:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <__brkval>
 bfc:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 c00:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 c04:	21 15       	cp	r18, r1
 c06:	31 05       	cpc	r19, r1
 c08:	41 f4       	brne	.+16     	; 0xc1a <malloc+0xea>
 c0a:	2d b7       	in	r18, 0x3d	; 61
 c0c:	3e b7       	in	r19, 0x3e	; 62
 c0e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 c12:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 c16:	24 1b       	sub	r18, r20
 c18:	35 0b       	sbc	r19, r21
 c1a:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <__brkval>
 c1e:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <__brkval+0x1>
 c22:	e2 17       	cp	r30, r18
 c24:	f3 07       	cpc	r31, r19
 c26:	a0 f4       	brcc	.+40     	; 0xc50 <malloc+0x120>
 c28:	2e 1b       	sub	r18, r30
 c2a:	3f 0b       	sbc	r19, r31
 c2c:	28 17       	cp	r18, r24
 c2e:	39 07       	cpc	r19, r25
 c30:	78 f0       	brcs	.+30     	; 0xc50 <malloc+0x120>
 c32:	ac 01       	movw	r20, r24
 c34:	4e 5f       	subi	r20, 0xFE	; 254
 c36:	5f 4f       	sbci	r21, 0xFF	; 255
 c38:	24 17       	cp	r18, r20
 c3a:	35 07       	cpc	r19, r21
 c3c:	48 f0       	brcs	.+18     	; 0xc50 <malloc+0x120>
 c3e:	4e 0f       	add	r20, r30
 c40:	5f 1f       	adc	r21, r31
 c42:	50 93 9c 01 	sts	0x019C, r21	; 0x80019c <__brkval+0x1>
 c46:	40 93 9b 01 	sts	0x019B, r20	; 0x80019b <__brkval>
 c4a:	81 93       	st	Z+, r24
 c4c:	91 93       	st	Z+, r25
 c4e:	02 c0       	rjmp	.+4      	; 0xc54 <malloc+0x124>
 c50:	e0 e0       	ldi	r30, 0x00	; 0
 c52:	f0 e0       	ldi	r31, 0x00	; 0
 c54:	cf 01       	movw	r24, r30
 c56:	df 91       	pop	r29
 c58:	cf 91       	pop	r28
 c5a:	1f 91       	pop	r17
 c5c:	0f 91       	pop	r16
 c5e:	08 95       	ret

00000c60 <free>:
 c60:	cf 93       	push	r28
 c62:	df 93       	push	r29
 c64:	00 97       	sbiw	r24, 0x00	; 0
 c66:	09 f4       	brne	.+2      	; 0xc6a <free+0xa>
 c68:	81 c0       	rjmp	.+258    	; 0xd6c <free+0x10c>
 c6a:	fc 01       	movw	r30, r24
 c6c:	32 97       	sbiw	r30, 0x02	; 2
 c6e:	13 82       	std	Z+3, r1	; 0x03
 c70:	12 82       	std	Z+2, r1	; 0x02
 c72:	a0 91 9d 01 	lds	r26, 0x019D	; 0x80019d <__flp>
 c76:	b0 91 9e 01 	lds	r27, 0x019E	; 0x80019e <__flp+0x1>
 c7a:	10 97       	sbiw	r26, 0x00	; 0
 c7c:	81 f4       	brne	.+32     	; 0xc9e <free+0x3e>
 c7e:	20 81       	ld	r18, Z
 c80:	31 81       	ldd	r19, Z+1	; 0x01
 c82:	82 0f       	add	r24, r18
 c84:	93 1f       	adc	r25, r19
 c86:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <__brkval>
 c8a:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <__brkval+0x1>
 c8e:	28 17       	cp	r18, r24
 c90:	39 07       	cpc	r19, r25
 c92:	51 f5       	brne	.+84     	; 0xce8 <free+0x88>
 c94:	f0 93 9c 01 	sts	0x019C, r31	; 0x80019c <__brkval+0x1>
 c98:	e0 93 9b 01 	sts	0x019B, r30	; 0x80019b <__brkval>
 c9c:	67 c0       	rjmp	.+206    	; 0xd6c <free+0x10c>
 c9e:	ed 01       	movw	r28, r26
 ca0:	20 e0       	ldi	r18, 0x00	; 0
 ca2:	30 e0       	ldi	r19, 0x00	; 0
 ca4:	ce 17       	cp	r28, r30
 ca6:	df 07       	cpc	r29, r31
 ca8:	40 f4       	brcc	.+16     	; 0xcba <free+0x5a>
 caa:	4a 81       	ldd	r20, Y+2	; 0x02
 cac:	5b 81       	ldd	r21, Y+3	; 0x03
 cae:	9e 01       	movw	r18, r28
 cb0:	41 15       	cp	r20, r1
 cb2:	51 05       	cpc	r21, r1
 cb4:	f1 f0       	breq	.+60     	; 0xcf2 <free+0x92>
 cb6:	ea 01       	movw	r28, r20
 cb8:	f5 cf       	rjmp	.-22     	; 0xca4 <free+0x44>
 cba:	d3 83       	std	Z+3, r29	; 0x03
 cbc:	c2 83       	std	Z+2, r28	; 0x02
 cbe:	40 81       	ld	r20, Z
 cc0:	51 81       	ldd	r21, Z+1	; 0x01
 cc2:	84 0f       	add	r24, r20
 cc4:	95 1f       	adc	r25, r21
 cc6:	c8 17       	cp	r28, r24
 cc8:	d9 07       	cpc	r29, r25
 cca:	59 f4       	brne	.+22     	; 0xce2 <free+0x82>
 ccc:	88 81       	ld	r24, Y
 cce:	99 81       	ldd	r25, Y+1	; 0x01
 cd0:	84 0f       	add	r24, r20
 cd2:	95 1f       	adc	r25, r21
 cd4:	02 96       	adiw	r24, 0x02	; 2
 cd6:	91 83       	std	Z+1, r25	; 0x01
 cd8:	80 83       	st	Z, r24
 cda:	8a 81       	ldd	r24, Y+2	; 0x02
 cdc:	9b 81       	ldd	r25, Y+3	; 0x03
 cde:	93 83       	std	Z+3, r25	; 0x03
 ce0:	82 83       	std	Z+2, r24	; 0x02
 ce2:	21 15       	cp	r18, r1
 ce4:	31 05       	cpc	r19, r1
 ce6:	29 f4       	brne	.+10     	; 0xcf2 <free+0x92>
 ce8:	f0 93 9e 01 	sts	0x019E, r31	; 0x80019e <__flp+0x1>
 cec:	e0 93 9d 01 	sts	0x019D, r30	; 0x80019d <__flp>
 cf0:	3d c0       	rjmp	.+122    	; 0xd6c <free+0x10c>
 cf2:	e9 01       	movw	r28, r18
 cf4:	fb 83       	std	Y+3, r31	; 0x03
 cf6:	ea 83       	std	Y+2, r30	; 0x02
 cf8:	49 91       	ld	r20, Y+
 cfa:	59 91       	ld	r21, Y+
 cfc:	c4 0f       	add	r28, r20
 cfe:	d5 1f       	adc	r29, r21
 d00:	ec 17       	cp	r30, r28
 d02:	fd 07       	cpc	r31, r29
 d04:	61 f4       	brne	.+24     	; 0xd1e <free+0xbe>
 d06:	80 81       	ld	r24, Z
 d08:	91 81       	ldd	r25, Z+1	; 0x01
 d0a:	84 0f       	add	r24, r20
 d0c:	95 1f       	adc	r25, r21
 d0e:	02 96       	adiw	r24, 0x02	; 2
 d10:	e9 01       	movw	r28, r18
 d12:	99 83       	std	Y+1, r25	; 0x01
 d14:	88 83       	st	Y, r24
 d16:	82 81       	ldd	r24, Z+2	; 0x02
 d18:	93 81       	ldd	r25, Z+3	; 0x03
 d1a:	9b 83       	std	Y+3, r25	; 0x03
 d1c:	8a 83       	std	Y+2, r24	; 0x02
 d1e:	e0 e0       	ldi	r30, 0x00	; 0
 d20:	f0 e0       	ldi	r31, 0x00	; 0
 d22:	12 96       	adiw	r26, 0x02	; 2
 d24:	8d 91       	ld	r24, X+
 d26:	9c 91       	ld	r25, X
 d28:	13 97       	sbiw	r26, 0x03	; 3
 d2a:	00 97       	sbiw	r24, 0x00	; 0
 d2c:	19 f0       	breq	.+6      	; 0xd34 <free+0xd4>
 d2e:	fd 01       	movw	r30, r26
 d30:	dc 01       	movw	r26, r24
 d32:	f7 cf       	rjmp	.-18     	; 0xd22 <free+0xc2>
 d34:	8d 91       	ld	r24, X+
 d36:	9c 91       	ld	r25, X
 d38:	11 97       	sbiw	r26, 0x01	; 1
 d3a:	9d 01       	movw	r18, r26
 d3c:	2e 5f       	subi	r18, 0xFE	; 254
 d3e:	3f 4f       	sbci	r19, 0xFF	; 255
 d40:	82 0f       	add	r24, r18
 d42:	93 1f       	adc	r25, r19
 d44:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <__brkval>
 d48:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <__brkval+0x1>
 d4c:	28 17       	cp	r18, r24
 d4e:	39 07       	cpc	r19, r25
 d50:	69 f4       	brne	.+26     	; 0xd6c <free+0x10c>
 d52:	30 97       	sbiw	r30, 0x00	; 0
 d54:	29 f4       	brne	.+10     	; 0xd60 <free+0x100>
 d56:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__flp+0x1>
 d5a:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <__flp>
 d5e:	02 c0       	rjmp	.+4      	; 0xd64 <free+0x104>
 d60:	13 82       	std	Z+3, r1	; 0x03
 d62:	12 82       	std	Z+2, r1	; 0x02
 d64:	b0 93 9c 01 	sts	0x019C, r27	; 0x80019c <__brkval+0x1>
 d68:	a0 93 9b 01 	sts	0x019B, r26	; 0x80019b <__brkval>
 d6c:	df 91       	pop	r29
 d6e:	cf 91       	pop	r28
 d70:	08 95       	ret

00000d72 <strnlen_P>:
 d72:	fc 01       	movw	r30, r24
 d74:	05 90       	lpm	r0, Z+
 d76:	61 50       	subi	r22, 0x01	; 1
 d78:	70 40       	sbci	r23, 0x00	; 0
 d7a:	01 10       	cpse	r0, r1
 d7c:	d8 f7       	brcc	.-10     	; 0xd74 <strnlen_P+0x2>
 d7e:	80 95       	com	r24
 d80:	90 95       	com	r25
 d82:	8e 0f       	add	r24, r30
 d84:	9f 1f       	adc	r25, r31
 d86:	08 95       	ret

00000d88 <memset>:
 d88:	dc 01       	movw	r26, r24
 d8a:	01 c0       	rjmp	.+2      	; 0xd8e <memset+0x6>
 d8c:	6d 93       	st	X+, r22
 d8e:	41 50       	subi	r20, 0x01	; 1
 d90:	50 40       	sbci	r21, 0x00	; 0
 d92:	e0 f7       	brcc	.-8      	; 0xd8c <memset+0x4>
 d94:	08 95       	ret

00000d96 <strnlen>:
 d96:	fc 01       	movw	r30, r24
 d98:	61 50       	subi	r22, 0x01	; 1
 d9a:	70 40       	sbci	r23, 0x00	; 0
 d9c:	01 90       	ld	r0, Z+
 d9e:	01 10       	cpse	r0, r1
 da0:	d8 f7       	brcc	.-10     	; 0xd98 <strnlen+0x2>
 da2:	80 95       	com	r24
 da4:	90 95       	com	r25
 da6:	8e 0f       	add	r24, r30
 da8:	9f 1f       	adc	r25, r31
 daa:	08 95       	ret

00000dac <fputc>:
 dac:	0f 93       	push	r16
 dae:	1f 93       	push	r17
 db0:	cf 93       	push	r28
 db2:	df 93       	push	r29
 db4:	fb 01       	movw	r30, r22
 db6:	23 81       	ldd	r18, Z+3	; 0x03
 db8:	21 fd       	sbrc	r18, 1
 dba:	03 c0       	rjmp	.+6      	; 0xdc2 <fputc+0x16>
 dbc:	8f ef       	ldi	r24, 0xFF	; 255
 dbe:	9f ef       	ldi	r25, 0xFF	; 255
 dc0:	2c c0       	rjmp	.+88     	; 0xe1a <fputc+0x6e>
 dc2:	22 ff       	sbrs	r18, 2
 dc4:	16 c0       	rjmp	.+44     	; 0xdf2 <fputc+0x46>
 dc6:	46 81       	ldd	r20, Z+6	; 0x06
 dc8:	57 81       	ldd	r21, Z+7	; 0x07
 dca:	24 81       	ldd	r18, Z+4	; 0x04
 dcc:	35 81       	ldd	r19, Z+5	; 0x05
 dce:	42 17       	cp	r20, r18
 dd0:	53 07       	cpc	r21, r19
 dd2:	44 f4       	brge	.+16     	; 0xde4 <fputc+0x38>
 dd4:	a0 81       	ld	r26, Z
 dd6:	b1 81       	ldd	r27, Z+1	; 0x01
 dd8:	9d 01       	movw	r18, r26
 dda:	2f 5f       	subi	r18, 0xFF	; 255
 ddc:	3f 4f       	sbci	r19, 0xFF	; 255
 dde:	31 83       	std	Z+1, r19	; 0x01
 de0:	20 83       	st	Z, r18
 de2:	8c 93       	st	X, r24
 de4:	26 81       	ldd	r18, Z+6	; 0x06
 de6:	37 81       	ldd	r19, Z+7	; 0x07
 de8:	2f 5f       	subi	r18, 0xFF	; 255
 dea:	3f 4f       	sbci	r19, 0xFF	; 255
 dec:	37 83       	std	Z+7, r19	; 0x07
 dee:	26 83       	std	Z+6, r18	; 0x06
 df0:	14 c0       	rjmp	.+40     	; 0xe1a <fputc+0x6e>
 df2:	8b 01       	movw	r16, r22
 df4:	ec 01       	movw	r28, r24
 df6:	fb 01       	movw	r30, r22
 df8:	00 84       	ldd	r0, Z+8	; 0x08
 dfa:	f1 85       	ldd	r31, Z+9	; 0x09
 dfc:	e0 2d       	mov	r30, r0
 dfe:	09 95       	icall
 e00:	89 2b       	or	r24, r25
 e02:	e1 f6       	brne	.-72     	; 0xdbc <fputc+0x10>
 e04:	d8 01       	movw	r26, r16
 e06:	16 96       	adiw	r26, 0x06	; 6
 e08:	8d 91       	ld	r24, X+
 e0a:	9c 91       	ld	r25, X
 e0c:	17 97       	sbiw	r26, 0x07	; 7
 e0e:	01 96       	adiw	r24, 0x01	; 1
 e10:	17 96       	adiw	r26, 0x07	; 7
 e12:	9c 93       	st	X, r25
 e14:	8e 93       	st	-X, r24
 e16:	16 97       	sbiw	r26, 0x06	; 6
 e18:	ce 01       	movw	r24, r28
 e1a:	df 91       	pop	r29
 e1c:	cf 91       	pop	r28
 e1e:	1f 91       	pop	r17
 e20:	0f 91       	pop	r16
 e22:	08 95       	ret

00000e24 <__ultoa_invert>:
 e24:	fa 01       	movw	r30, r20
 e26:	aa 27       	eor	r26, r26
 e28:	28 30       	cpi	r18, 0x08	; 8
 e2a:	51 f1       	breq	.+84     	; 0xe80 <__ultoa_invert+0x5c>
 e2c:	20 31       	cpi	r18, 0x10	; 16
 e2e:	81 f1       	breq	.+96     	; 0xe90 <__ultoa_invert+0x6c>
 e30:	e8 94       	clt
 e32:	6f 93       	push	r22
 e34:	6e 7f       	andi	r22, 0xFE	; 254
 e36:	6e 5f       	subi	r22, 0xFE	; 254
 e38:	7f 4f       	sbci	r23, 0xFF	; 255
 e3a:	8f 4f       	sbci	r24, 0xFF	; 255
 e3c:	9f 4f       	sbci	r25, 0xFF	; 255
 e3e:	af 4f       	sbci	r26, 0xFF	; 255
 e40:	b1 e0       	ldi	r27, 0x01	; 1
 e42:	3e d0       	rcall	.+124    	; 0xec0 <__ultoa_invert+0x9c>
 e44:	b4 e0       	ldi	r27, 0x04	; 4
 e46:	3c d0       	rcall	.+120    	; 0xec0 <__ultoa_invert+0x9c>
 e48:	67 0f       	add	r22, r23
 e4a:	78 1f       	adc	r23, r24
 e4c:	89 1f       	adc	r24, r25
 e4e:	9a 1f       	adc	r25, r26
 e50:	a1 1d       	adc	r26, r1
 e52:	68 0f       	add	r22, r24
 e54:	79 1f       	adc	r23, r25
 e56:	8a 1f       	adc	r24, r26
 e58:	91 1d       	adc	r25, r1
 e5a:	a1 1d       	adc	r26, r1
 e5c:	6a 0f       	add	r22, r26
 e5e:	71 1d       	adc	r23, r1
 e60:	81 1d       	adc	r24, r1
 e62:	91 1d       	adc	r25, r1
 e64:	a1 1d       	adc	r26, r1
 e66:	20 d0       	rcall	.+64     	; 0xea8 <__ultoa_invert+0x84>
 e68:	09 f4       	brne	.+2      	; 0xe6c <__ultoa_invert+0x48>
 e6a:	68 94       	set
 e6c:	3f 91       	pop	r19
 e6e:	2a e0       	ldi	r18, 0x0A	; 10
 e70:	26 9f       	mul	r18, r22
 e72:	11 24       	eor	r1, r1
 e74:	30 19       	sub	r19, r0
 e76:	30 5d       	subi	r19, 0xD0	; 208
 e78:	31 93       	st	Z+, r19
 e7a:	de f6       	brtc	.-74     	; 0xe32 <__ultoa_invert+0xe>
 e7c:	cf 01       	movw	r24, r30
 e7e:	08 95       	ret
 e80:	46 2f       	mov	r20, r22
 e82:	47 70       	andi	r20, 0x07	; 7
 e84:	40 5d       	subi	r20, 0xD0	; 208
 e86:	41 93       	st	Z+, r20
 e88:	b3 e0       	ldi	r27, 0x03	; 3
 e8a:	0f d0       	rcall	.+30     	; 0xeaa <__ultoa_invert+0x86>
 e8c:	c9 f7       	brne	.-14     	; 0xe80 <__ultoa_invert+0x5c>
 e8e:	f6 cf       	rjmp	.-20     	; 0xe7c <__ultoa_invert+0x58>
 e90:	46 2f       	mov	r20, r22
 e92:	4f 70       	andi	r20, 0x0F	; 15
 e94:	40 5d       	subi	r20, 0xD0	; 208
 e96:	4a 33       	cpi	r20, 0x3A	; 58
 e98:	18 f0       	brcs	.+6      	; 0xea0 <__ultoa_invert+0x7c>
 e9a:	49 5d       	subi	r20, 0xD9	; 217
 e9c:	31 fd       	sbrc	r19, 1
 e9e:	40 52       	subi	r20, 0x20	; 32
 ea0:	41 93       	st	Z+, r20
 ea2:	02 d0       	rcall	.+4      	; 0xea8 <__ultoa_invert+0x84>
 ea4:	a9 f7       	brne	.-22     	; 0xe90 <__ultoa_invert+0x6c>
 ea6:	ea cf       	rjmp	.-44     	; 0xe7c <__ultoa_invert+0x58>
 ea8:	b4 e0       	ldi	r27, 0x04	; 4
 eaa:	a6 95       	lsr	r26
 eac:	97 95       	ror	r25
 eae:	87 95       	ror	r24
 eb0:	77 95       	ror	r23
 eb2:	67 95       	ror	r22
 eb4:	ba 95       	dec	r27
 eb6:	c9 f7       	brne	.-14     	; 0xeaa <__ultoa_invert+0x86>
 eb8:	00 97       	sbiw	r24, 0x00	; 0
 eba:	61 05       	cpc	r22, r1
 ebc:	71 05       	cpc	r23, r1
 ebe:	08 95       	ret
 ec0:	9b 01       	movw	r18, r22
 ec2:	ac 01       	movw	r20, r24
 ec4:	0a 2e       	mov	r0, r26
 ec6:	06 94       	lsr	r0
 ec8:	57 95       	ror	r21
 eca:	47 95       	ror	r20
 ecc:	37 95       	ror	r19
 ece:	27 95       	ror	r18
 ed0:	ba 95       	dec	r27
 ed2:	c9 f7       	brne	.-14     	; 0xec6 <__ultoa_invert+0xa2>
 ed4:	62 0f       	add	r22, r18
 ed6:	73 1f       	adc	r23, r19
 ed8:	84 1f       	adc	r24, r20
 eda:	95 1f       	adc	r25, r21
 edc:	a0 1d       	adc	r26, r0
 ede:	08 95       	ret

00000ee0 <__prologue_saves__>:
 ee0:	2f 92       	push	r2
 ee2:	3f 92       	push	r3
 ee4:	4f 92       	push	r4
 ee6:	5f 92       	push	r5
 ee8:	6f 92       	push	r6
 eea:	7f 92       	push	r7
 eec:	8f 92       	push	r8
 eee:	9f 92       	push	r9
 ef0:	af 92       	push	r10
 ef2:	bf 92       	push	r11
 ef4:	cf 92       	push	r12
 ef6:	df 92       	push	r13
 ef8:	ef 92       	push	r14
 efa:	ff 92       	push	r15
 efc:	0f 93       	push	r16
 efe:	1f 93       	push	r17
 f00:	cf 93       	push	r28
 f02:	df 93       	push	r29
 f04:	cd b7       	in	r28, 0x3d	; 61
 f06:	de b7       	in	r29, 0x3e	; 62
 f08:	ca 1b       	sub	r28, r26
 f0a:	db 0b       	sbc	r29, r27
 f0c:	0f b6       	in	r0, 0x3f	; 63
 f0e:	f8 94       	cli
 f10:	de bf       	out	0x3e, r29	; 62
 f12:	0f be       	out	0x3f, r0	; 63
 f14:	cd bf       	out	0x3d, r28	; 61
 f16:	09 94       	ijmp

00000f18 <__epilogue_restores__>:
 f18:	2a 88       	ldd	r2, Y+18	; 0x12
 f1a:	39 88       	ldd	r3, Y+17	; 0x11
 f1c:	48 88       	ldd	r4, Y+16	; 0x10
 f1e:	5f 84       	ldd	r5, Y+15	; 0x0f
 f20:	6e 84       	ldd	r6, Y+14	; 0x0e
 f22:	7d 84       	ldd	r7, Y+13	; 0x0d
 f24:	8c 84       	ldd	r8, Y+12	; 0x0c
 f26:	9b 84       	ldd	r9, Y+11	; 0x0b
 f28:	aa 84       	ldd	r10, Y+10	; 0x0a
 f2a:	b9 84       	ldd	r11, Y+9	; 0x09
 f2c:	c8 84       	ldd	r12, Y+8	; 0x08
 f2e:	df 80       	ldd	r13, Y+7	; 0x07
 f30:	ee 80       	ldd	r14, Y+6	; 0x06
 f32:	fd 80       	ldd	r15, Y+5	; 0x05
 f34:	0c 81       	ldd	r16, Y+4	; 0x04
 f36:	1b 81       	ldd	r17, Y+3	; 0x03
 f38:	aa 81       	ldd	r26, Y+2	; 0x02
 f3a:	b9 81       	ldd	r27, Y+1	; 0x01
 f3c:	ce 0f       	add	r28, r30
 f3e:	d1 1d       	adc	r29, r1
 f40:	0f b6       	in	r0, 0x3f	; 63
 f42:	f8 94       	cli
 f44:	de bf       	out	0x3e, r29	; 62
 f46:	0f be       	out	0x3f, r0	; 63
 f48:	cd bf       	out	0x3d, r28	; 61
 f4a:	ed 01       	movw	r28, r26
 f4c:	08 95       	ret

00000f4e <_exit>:
 f4e:	f8 94       	cli

00000f50 <__stop_program>:
 f50:	ff cf       	rjmp	.-2      	; 0xf50 <__stop_program>
