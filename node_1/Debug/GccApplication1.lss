
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800100  00000f90  00001024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800192  00800192  000010b6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001114  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d88  00000000  00000000  00001330  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001076  00000000  00000000  000030b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000109f  00000000  00000000  0000412e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000484  00000000  00000000  000051d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000810  00000000  00000000  00005654  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d75  00000000  00000000  00005e64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00006bd9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e9       	ldi	r30, 0x90	; 144
  84:	ff e0       	ldi	r31, 0x0F	; 15
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 39       	cpi	r26, 0x92	; 146
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e9       	ldi	r26, 0x92	; 146
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	af 39       	cpi	r26, 0x9F	; 159
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <main>
  a6:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
  ba:	30 98       	cbi	0x06, 0	; 6
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <adc_clock_signal>:
  c2:	b8 9a       	sbi	0x17, 0	; 23
  c4:	83 b7       	in	r24, 0x33	; 51
  c6:	88 60       	ori	r24, 0x08	; 8
  c8:	83 bf       	out	0x33, r24	; 51
  ca:	83 b7       	in	r24, 0x33	; 51
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	83 bf       	out	0x33, r24	; 51
  d0:	83 b7       	in	r24, 0x33	; 51
  d2:	80 61       	ori	r24, 0x10	; 16
  d4:	83 bf       	out	0x33, r24	; 51
  d6:	83 b7       	in	r24, 0x33	; 51
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	83 bf       	out	0x33, r24	; 51
  dc:	8a e0       	ldi	r24, 0x0A	; 10
  de:	81 bf       	out	0x31, r24	; 49
  e0:	08 95       	ret

000000e2 <adc_read>:
  e2:	80 68       	ori	r24, 0x80	; 128
  e4:	e0 e0       	ldi	r30, 0x00	; 0
  e6:	f4 e1       	ldi	r31, 0x14	; 20
  e8:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ea:	84 ea       	ldi	r24, 0xA4	; 164
  ec:	8a 95       	dec	r24
  ee:	f1 f7       	brne	.-4      	; 0xec <adc_read+0xa>
  f0:	80 81       	ld	r24, Z
  f2:	08 95       	ret

000000f4 <can_init>:
  f4:	0e 94 aa 02 	call	0x554	; 0x554 <mcp2515_driver_init>
  f8:	f8 94       	cli
  fa:	38 9a       	sbi	0x07, 0	; 7
  fc:	86 b7       	in	r24, 0x36	; 54
  fe:	81 60       	ori	r24, 0x01	; 1
 100:	86 bf       	out	0x36, r24	; 54
 102:	8b b7       	in	r24, 0x3b	; 59
 104:	80 62       	ori	r24, 0x20	; 32
 106:	8b bf       	out	0x3b, r24	; 59
 108:	43 e0       	ldi	r20, 0x03	; 3
 10a:	6f ef       	ldi	r22, 0xFF	; 255
 10c:	8b e2       	ldi	r24, 0x2B	; 43
 10e:	0e 94 88 02 	call	0x510	; 0x510 <mcp2515_bit_modify>
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	6f ef       	ldi	r22, 0xFF	; 255
 116:	8c e2       	ldi	r24, 0x2C	; 44
 118:	0e 94 88 02 	call	0x510	; 0x510 <mcp2515_bit_modify>
 11c:	30 98       	cbi	0x06, 0	; 6
 11e:	78 94       	sei
 120:	8e e0       	ldi	r24, 0x0E	; 14
 122:	0e 94 57 02 	call	0x4ae	; 0x4ae <mcp2515_read>
 126:	80 7e       	andi	r24, 0xE0	; 224
 128:	80 34       	cpi	r24, 0x40	; 64
 12a:	41 f0       	breq	.+16     	; 0x13c <can_init+0x48>
 12c:	86 e0       	ldi	r24, 0x06	; 6
 12e:	91 e0       	ldi	r25, 0x01	; 1
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	08 95       	ret

0000013e <can_transmission_completed>:
 13e:	80 e3       	ldi	r24, 0x30	; 48
 140:	0e 94 57 02 	call	0x4ae	; 0x4ae <mcp2515_read>
 144:	83 fb       	bst	r24, 3
 146:	88 27       	eor	r24, r24
 148:	80 f9       	bld	r24, 0
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	89 27       	eor	r24, r25
 14e:	08 95       	ret

00000150 <can_send>:
 150:	cf 92       	push	r12
 152:	df 92       	push	r13
 154:	ef 92       	push	r14
 156:	ff 92       	push	r15
 158:	1f 93       	push	r17
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	6c 01       	movw	r12, r24
 160:	0e 94 9f 00 	call	0x13e	; 0x13e <can_transmission_completed>
 164:	88 23       	and	r24, r24
 166:	91 f1       	breq	.+100    	; 0x1cc <can_send+0x7c>
 168:	f6 01       	movw	r30, r12
 16a:	80 81       	ld	r24, Z
 16c:	91 81       	ldd	r25, Z+1	; 0x01
 16e:	96 95       	lsr	r25
 170:	87 95       	ror	r24
 172:	96 95       	lsr	r25
 174:	87 95       	ror	r24
 176:	96 95       	lsr	r25
 178:	87 95       	ror	r24
 17a:	61 e4       	ldi	r22, 0x41	; 65
 17c:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 180:	f6 01       	movw	r30, r12
 182:	80 81       	ld	r24, Z
 184:	62 e4       	ldi	r22, 0x42	; 66
 186:	82 95       	swap	r24
 188:	88 0f       	add	r24, r24
 18a:	80 7e       	andi	r24, 0xE0	; 224
 18c:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 190:	65 e4       	ldi	r22, 0x45	; 69
 192:	f6 01       	movw	r30, r12
 194:	82 81       	ldd	r24, Z+2	; 0x02
 196:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 19a:	f6 01       	movw	r30, r12
 19c:	82 81       	ldd	r24, Z+2	; 0x02
 19e:	88 23       	and	r24, r24
 1a0:	a9 f0       	breq	.+42     	; 0x1cc <can_send+0x7c>
 1a2:	76 01       	movw	r14, r12
 1a4:	f3 e0       	ldi	r31, 0x03	; 3
 1a6:	ef 0e       	add	r14, r31
 1a8:	f1 1c       	adc	r15, r1
 1aa:	16 e4       	ldi	r17, 0x46	; 70
 1ac:	c0 e0       	ldi	r28, 0x00	; 0
 1ae:	d0 e0       	ldi	r29, 0x00	; 0
 1b0:	61 2f       	mov	r22, r17
 1b2:	f7 01       	movw	r30, r14
 1b4:	81 91       	ld	r24, Z+
 1b6:	7f 01       	movw	r14, r30
 1b8:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	1f 5f       	subi	r17, 0xFF	; 255
 1c0:	f6 01       	movw	r30, r12
 1c2:	82 81       	ldd	r24, Z+2	; 0x02
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	c8 17       	cp	r28, r24
 1c8:	d9 07       	cpc	r29, r25
 1ca:	94 f3       	brlt	.-28     	; 0x1b0 <can_send+0x60>
 1cc:	82 e8       	ldi	r24, 0x82	; 130
 1ce:	0e 94 7d 02 	call	0x4fa	; 0x4fa <mcp2515_request_to_send>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	ff 90       	pop	r15
 1da:	ef 90       	pop	r14
 1dc:	df 90       	pop	r13
 1de:	cf 90       	pop	r12
 1e0:	08 95       	ret

000001e2 <can_interrupt>:
 1e2:	40 e0       	ldi	r20, 0x00	; 0
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c e2       	ldi	r24, 0x2C	; 44
 1e8:	0e 94 88 02 	call	0x510	; 0x510 <mcp2515_bit_modify>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__data_end>
 1f2:	08 95       	ret

000001f4 <__vector_3>:
 1f4:	1f 92       	push	r1
 1f6:	0f 92       	push	r0
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	0f 92       	push	r0
 1fc:	11 24       	eor	r1, r1
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 216:	8f ef       	ldi	r24, 0xFF	; 255
 218:	9f e2       	ldi	r25, 0x2F	; 47
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <__vector_3+0x26>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <__vector_3+0x2c>
 220:	00 00       	nop
 222:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <can_interrupt>
 226:	ff 91       	pop	r31
 228:	ef 91       	pop	r30
 22a:	bf 91       	pop	r27
 22c:	af 91       	pop	r26
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	7f 91       	pop	r23
 234:	6f 91       	pop	r22
 236:	5f 91       	pop	r21
 238:	4f 91       	pop	r20
 23a:	3f 91       	pop	r19
 23c:	2f 91       	pop	r18
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <joystick_button>:
	joystick_calibration();

}

int joystick_button(int button){
	switch (button){
 248:	81 30       	cpi	r24, 0x01	; 1
 24a:	91 05       	cpc	r25, r1
 24c:	39 f0       	breq	.+14     	; 0x25c <joystick_button+0x14>
 24e:	82 30       	cpi	r24, 0x02	; 2
 250:	91 05       	cpc	r25, r1
 252:	31 f0       	breq	.+12     	; 0x260 <joystick_button+0x18>
 254:	89 2b       	or	r24, r25
 256:	69 f4       	brne	.+26     	; 0x272 <joystick_button+0x2a>
		// Left touch button
		case 0: 
			if (test_bit(PINB, PINB1)){
 258:	b1 99       	sbic	0x16, 1	; 22
 25a:	0e c0       	rjmp	.+28     	; 0x278 <joystick_button+0x30>
				break;
			}
		
		// Right touch button
		case 1: 
			if (test_bit(PINB, PINB2)){
 25c:	b2 99       	sbic	0x16, 2	; 22
 25e:	0f c0       	rjmp	.+30     	; 0x27e <joystick_button+0x36>
				break;
			}
		
		// Joystick button
		case 2:
			if (!test_bit(PINB, PINB3)){
 260:	86 b3       	in	r24, 0x16	; 22
int joystick_button(int button){
	switch (button){
		// Left touch button
		case 0: 
			if (test_bit(PINB, PINB1)){
				return 1;
 262:	86 95       	lsr	r24
 264:	86 95       	lsr	r24
 266:	86 95       	lsr	r24
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	89 27       	eor	r24, r25
 26c:	81 70       	andi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	08 95       	ret
				break;
			}
		default:
			break;
	}
	return 0;
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	08 95       	ret
int joystick_button(int button){
	switch (button){
		// Left touch button
		case 0: 
			if (test_bit(PINB, PINB1)){
				return 1;
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	08 95       	ret
			}
		
		// Right touch button
		case 1: 
			if (test_bit(PINB, PINB2)){
				return 1;
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
			}
		default:
			break;
	}
	return 0;
}
 282:	08 95       	ret

00000284 <joystick_pos>:



joystick_position joystick_pos(void)
{	
 284:	cf 93       	push	r28
	joystick_position position = {0,0};
	uint8_t x,y;
	
	x = adc_read(0);
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 28e:	c8 2f       	mov	r28, r24
	y = adc_read(1);
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 298:	38 2f       	mov	r19, r24
	
	//position.position_x = (x-x_mid)*200/255;
	//position.position_y = (y-y_mid)*200/255;
	
	//printf("(%d, %d) \n \r", position.position_x, position.position_y);
	int8_t diff_x = x - x_mid;
 29a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <x_mid>
	
	
	if(x > x_mid) {
 29e:	2c 17       	cp	r18, r28
 2a0:	a0 f4       	brcc	.+40     	; 0x2ca <joystick_pos+0x46>
		position.position_x = 100*(x-x_mid)/(0xFF - x_mid);
 2a2:	e2 2f       	mov	r30, r18
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	4c 2f       	mov	r20, r28
 2a8:	50 e0       	ldi	r21, 0x00	; 0
 2aa:	4e 1b       	sub	r20, r30
 2ac:	5f 0b       	sbc	r21, r31
 2ae:	64 e6       	ldi	r22, 0x64	; 100
 2b0:	64 9f       	mul	r22, r20
 2b2:	c0 01       	movw	r24, r0
 2b4:	65 9f       	mul	r22, r21
 2b6:	90 0d       	add	r25, r0
 2b8:	11 24       	eor	r1, r1
 2ba:	6f ef       	ldi	r22, 0xFF	; 255
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	6e 1b       	sub	r22, r30
 2c0:	7f 0b       	sbc	r23, r31
 2c2:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
 2c6:	46 2f       	mov	r20, r22
 2c8:	01 c0       	rjmp	.+2      	; 0x2cc <joystick_pos+0x48>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
 2ca:	40 e0       	ldi	r20, 0x00	; 0
	
	if(x > x_mid) {
		position.position_x = 100*(x-x_mid)/(0xFF - x_mid);
	} 
	
	if (x < x_mid) {
 2cc:	c2 17       	cp	r28, r18
 2ce:	78 f4       	brcc	.+30     	; 0x2ee <joystick_pos+0x6a>
		position.position_x = 100*(x-x_mid)/(x_mid-0);
 2d0:	62 2f       	mov	r22, r18
 2d2:	70 e0       	ldi	r23, 0x00	; 0
 2d4:	4c 2f       	mov	r20, r28
 2d6:	50 e0       	ldi	r21, 0x00	; 0
 2d8:	46 1b       	sub	r20, r22
 2da:	57 0b       	sbc	r21, r23
 2dc:	e4 e6       	ldi	r30, 0x64	; 100
 2de:	e4 9f       	mul	r30, r20
 2e0:	c0 01       	movw	r24, r0
 2e2:	e5 9f       	mul	r30, r21
 2e4:	90 0d       	add	r25, r0
 2e6:	11 24       	eor	r1, r1
 2e8:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
 2ec:	46 2f       	mov	r20, r22
	} 
		
	if (x == x_mid) {
 2ee:	c2 13       	cpse	r28, r18
 2f0:	01 c0       	rjmp	.+2      	; 0x2f4 <joystick_pos+0x70>
		position.position_x = 0;
 2f2:	40 e0       	ldi	r20, 0x00	; 0
	}
	
	//int8_t y_diff = y-y_mid;
	
	//Calculate position y percentage
	if(y > y_mid) {
 2f4:	20 91 93 01 	lds	r18, 0x0193	; 0x800193 <y_mid>
 2f8:	23 17       	cp	r18, r19
 2fa:	a0 f4       	brcc	.+40     	; 0x324 <joystick_pos+0xa0>
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
 2fc:	e2 2f       	mov	r30, r18
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	63 2f       	mov	r22, r19
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	6e 1b       	sub	r22, r30
 306:	7f 0b       	sbc	r23, r31
 308:	54 e6       	ldi	r21, 0x64	; 100
 30a:	56 9f       	mul	r21, r22
 30c:	c0 01       	movw	r24, r0
 30e:	57 9f       	mul	r21, r23
 310:	90 0d       	add	r25, r0
 312:	11 24       	eor	r1, r1
 314:	6f ef       	ldi	r22, 0xFF	; 255
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	6e 1b       	sub	r22, r30
 31a:	7f 0b       	sbc	r23, r31
 31c:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
 320:	76 2f       	mov	r23, r22
 322:	01 c0       	rjmp	.+2      	; 0x326 <joystick_pos+0xa2>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
 324:	70 e0       	ldi	r23, 0x00	; 0
	
	//Calculate position y percentage
	if(y > y_mid) {
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
	}
	if (y < y_mid) {
 326:	32 17       	cp	r19, r18
 328:	78 f4       	brcc	.+30     	; 0x348 <joystick_pos+0xc4>
		position.position_y = 100*(y-y_mid)/y_mid;
 32a:	62 2f       	mov	r22, r18
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	e3 2f       	mov	r30, r19
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	e6 1b       	sub	r30, r22
 334:	f7 0b       	sbc	r31, r23
 336:	54 e6       	ldi	r21, 0x64	; 100
 338:	5e 9f       	mul	r21, r30
 33a:	c0 01       	movw	r24, r0
 33c:	5f 9f       	mul	r21, r31
 33e:	90 0d       	add	r25, r0
 340:	11 24       	eor	r1, r1
 342:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
 346:	76 2f       	mov	r23, r22
	} if (y == y_mid) {
 348:	32 13       	cpse	r19, r18
 34a:	01 c0       	rjmp	.+2      	; 0x34e <joystick_pos+0xca>
		position.position_y = 0;
 34c:	70 e0       	ldi	r23, 0x00	; 0
	
	
	//printf("%d \n \r", position.position_x);

	return position;
}
 34e:	64 2f       	mov	r22, r20
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	cf 91       	pop	r28
 354:	08 95       	ret

00000356 <joystick_direction>:
	
	int deadzone = 3;
	
	joystick_position position;
	
	position = joystick_pos();
 356:	0e 94 42 01 	call	0x284	; 0x284 <joystick_pos>
 35a:	26 2f       	mov	r18, r22
 35c:	97 2f       	mov	r25, r23
	
	if (position.position_x > deadzone){
 35e:	64 30       	cpi	r22, 0x04	; 4
 360:	0c f0       	brlt	.+2      	; 0x364 <joystick_direction+0xe>
		position.dir = 'R';
 362:	82 e5       	ldi	r24, 0x52	; 82
	}
	
	if (position.position_x < -deadzone){
 364:	2d 3f       	cpi	r18, 0xFD	; 253
 366:	0c f4       	brge	.+2      	; 0x36a <joystick_direction+0x14>
		position.dir = 'L';
 368:	8c e4       	ldi	r24, 0x4C	; 76
	}
	
	if (position.position_y > deadzone){
 36a:	94 30       	cpi	r25, 0x04	; 4
 36c:	0c f0       	brlt	.+2      	; 0x370 <joystick_direction+0x1a>
		position.dir = 'U';
 36e:	85 e5       	ldi	r24, 0x55	; 85
	}
	if (position.position_y <  -deadzone){
 370:	9d 3f       	cpi	r25, 0xFD	; 253
 372:	0c f4       	brge	.+2      	; 0x376 <joystick_direction+0x20>
		position.dir = 'D';
 374:	84 e4       	ldi	r24, 0x44	; 68
	}
	if (abs(position.position_x) <= deadzone && abs(position.position_y) <= deadzone){
 376:	26 2f       	mov	r18, r22
 378:	06 2e       	mov	r0, r22
 37a:	00 0c       	add	r0, r0
 37c:	33 0b       	sbc	r19, r19
 37e:	33 23       	and	r19, r19
 380:	1c f4       	brge	.+6      	; 0x388 <joystick_direction+0x32>
 382:	31 95       	neg	r19
 384:	21 95       	neg	r18
 386:	31 09       	sbc	r19, r1
 388:	24 30       	cpi	r18, 0x04	; 4
 38a:	31 05       	cpc	r19, r1
 38c:	6c f4       	brge	.+26     	; 0x3a8 <joystick_direction+0x52>
 38e:	27 2f       	mov	r18, r23
 390:	07 2e       	mov	r0, r23
 392:	00 0c       	add	r0, r0
 394:	33 0b       	sbc	r19, r19
 396:	33 23       	and	r19, r19
 398:	1c f4       	brge	.+6      	; 0x3a0 <joystick_direction+0x4a>
 39a:	31 95       	neg	r19
 39c:	21 95       	neg	r18
 39e:	31 09       	sbc	r19, r1
 3a0:	24 30       	cpi	r18, 0x04	; 4
 3a2:	31 05       	cpc	r19, r1
 3a4:	0c f4       	brge	.+2      	; 0x3a8 <joystick_direction+0x52>
		position.dir = 'N';
 3a6:	8e e4       	ldi	r24, 0x4E	; 78
	}
	return position;
	
};
 3a8:	08 95       	ret

000003aa <joystick_calibration>:

void joystick_calibration(void){
 3aa:	cf 93       	push	r28
	
	uint8_t x,y;
	
	x = adc_read(0);
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 3b4:	c8 2f       	mov	r28, r24
	y = adc_read(1);
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 3be:	ec ec       	ldi	r30, 0xCC	; 204
 3c0:	f4 e0       	ldi	r31, 0x04	; 4
 3c2:	31 97       	sbiw	r30, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <joystick_calibration+0x18>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <joystick_calibration+0x1e>
 3c8:	00 00       	nop
	_delay_ms(1);
	x_mid = x;
 3ca:	c0 93 94 01 	sts	0x0194, r28	; 0x800194 <x_mid>
	y_mid = y;
 3ce:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <y_mid>
}
 3d2:	cf 91       	pop	r28
 3d4:	08 95       	ret

000003d6 <joystick_init>:
	
	// Initialize external units
	//adc_init();
	
	// Set PINB1, PINB2 and PINB3 as inputs
	DDRB &= ~(1<<PINB1) & ~(1<<PINB2) & ~(1<<PINB3);
 3d6:	87 b3       	in	r24, 0x17	; 23
 3d8:	81 7f       	andi	r24, 0xF1	; 241
 3da:	87 bb       	out	0x17, r24	; 23
	
	// Calibrate joystick
	joystick_calibration();
 3dc:	0e 94 d5 01 	call	0x3aa	; 0x3aa <joystick_calibration>
 3e0:	08 95       	ret

000003e2 <main>:
#include "mcp2515.h"
#include "can.h"
#include "mcp2515_driver.h"


void main(void){
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	cd b7       	in	r28, 0x3d	; 61
 3e8:	de b7       	in	r29, 0x3e	; 62
 3ea:	2b 97       	sbiw	r28, 0x0b	; 11
 3ec:	0f b6       	in	r0, 0x3f	; 63
 3ee:	f8 94       	cli
 3f0:	de bf       	out	0x3e, r29	; 62
 3f2:	0f be       	out	0x3f, r0	; 63
 3f4:	cd bf       	out	0x3d, r28	; 61

	joystick_position j_position;
	slider_position s_position;
	can_message message, message2;
	adc_init();
 3f6:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	USART_init(MYUBRR);
 3fa:	8f e1       	ldi	r24, 0x1F	; 31
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	0e 94 24 03 	call	0x648	; 0x648 <USART_init>
	
	adc_clock_signal();
 402:	0e 94 61 00 	call	0xc2	; 0xc2 <adc_clock_signal>
	joystick_init();
 406:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <joystick_init>
	SRAM_init();
 40a:	0e 94 14 03 	call	0x628	; 0x628 <SRAM_init>
	can_init();
 40e:	0e 94 7a 00 	call	0xf4	; 0xf4 <can_init>

	//oled_init();
	//oled_reset();
	//oled_pos(0,0);
	
	message.id = 0;
 412:	1a 82       	std	Y+2, r1	; 0x02
 414:	19 82       	std	Y+1, r1	; 0x01
	message.length = 5;	
 416:	85 e0       	ldi	r24, 0x05	; 5
 418:	8b 83       	std	Y+3, r24	; 0x03
		}
		if (joystick_button(2)){
			button_joy = 1;
		}
		if (joystick_button(2)==0){
			button_joy = 0;
 41a:	00 e0       	ldi	r16, 0x00	; 0
		
		int button_l = 0;
		int button_r = 0;	
		int button_joy = 0;
		
		j_position = joystick_pos();
 41c:	0e 94 42 01 	call	0x284	; 0x284 <joystick_pos>
		//printf("Position 1: %d\n\r", j_position.position_x);
		j_position = joystick_direction();
 420:	0e 94 ab 01 	call	0x356	; 0x356 <joystick_direction>
		
		// Slider position
		//printf("(Left slider: %d, Right slider: %d) \n \r", s_position.position_left, s_position.position_right);
		
		//Buttons
		if (joystick_button(0)){
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_l = 1;
		}
		if (joystick_button(0)==0){
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_l = 0;
		}
		if (joystick_button(1)){
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_r = 1;
		}
		if (joystick_button(1)==0){
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_r = 0;
		}
		if (joystick_button(2)){
 444:	82 e0       	ldi	r24, 0x02	; 2
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
 44c:	7c 01       	movw	r14, r24
			button_joy = 1;
		}
		if (joystick_button(2)==0){
 44e:	82 e0       	ldi	r24, 0x02	; 2
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
 456:	89 2b       	or	r24, r25
 458:	29 f0       	breq	.+10     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>

		//Assignment 3
		
		int button_l = 0;
		int button_r = 0;	
		int button_joy = 0;
 45a:	11 e0       	ldi	r17, 0x01	; 1
 45c:	ef 28       	or	r14, r15
 45e:	19 f4       	brne	.+6      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 460:	10 e0       	ldi	r17, 0x00	; 0
 462:	01 c0       	rjmp	.+2      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
		}
		if (joystick_button(2)){
			button_joy = 1;
		}
		if (joystick_button(2)==0){
			button_joy = 0;
 464:	10 2f       	mov	r17, r16
 466:	87 ea       	ldi	r24, 0xA7	; 167
 468:	91 e6       	ldi	r25, 0x61	; 97
 46a:	01 97       	sbiw	r24, 0x01	; 1
 46c:	f1 f7       	brne	.-4      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 46e:	00 c0       	rjmp	.+0      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 470:	00 00       	nop
		*/
		
		// Assignment 6
		

		message.data[0] = adc_read(0);
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 47a:	8c 83       	std	Y+4, r24	; 0x04
		message.data[1] = adc_read(1);
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 484:	8d 83       	std	Y+5, r24	; 0x05
		message.data[2] = adc_read(3);
 486:	83 e0       	ldi	r24, 0x03	; 3
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 48e:	8e 83       	std	Y+6, r24	; 0x06
		message.data[3] = adc_read(2);
 490:	82 e0       	ldi	r24, 0x02	; 2
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
 498:	8f 83       	std	Y+7, r24	; 0x07
		message.data[4] = button_joy;
 49a:	18 87       	std	Y+8, r17	; 0x08
		
		can_send(&message);
 49c:	ce 01       	movw	r24, r28
 49e:	01 96       	adiw	r24, 0x01	; 1
 4a0:	0e 94 a8 00 	call	0x150	; 0x150 <can_send>
		
		
	}
 4a4:	bb cf       	rjmp	.-138    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>

000004a6 <slave_select>:
 4a6:	c4 98       	cbi	0x18, 4	; 24
 4a8:	08 95       	ret

000004aa <slave_deselect>:
 4aa:	c4 9a       	sbi	0x18, 4	; 24
 4ac:	08 95       	ret

000004ae <mcp2515_read>:
 4ae:	cf 93       	push	r28
 4b0:	c8 2f       	mov	r28, r24
 4b2:	0e 94 53 02 	call	0x4a6	; 0x4a6 <slave_select>
 4b6:	83 e0       	ldi	r24, 0x03	; 3
 4b8:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 4bc:	8c 2f       	mov	r24, r28
 4be:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 4c2:	0e 94 0d 03 	call	0x61a	; 0x61a <spi_receive>
 4c6:	c8 2f       	mov	r28, r24
 4c8:	0e 94 55 02 	call	0x4aa	; 0x4aa <slave_deselect>
 4cc:	8c 2f       	mov	r24, r28
 4ce:	cf 91       	pop	r28
 4d0:	08 95       	ret

000004d2 <mcp2515_write>:
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	c8 2f       	mov	r28, r24
 4d8:	d6 2f       	mov	r29, r22
 4da:	0e 94 53 02 	call	0x4a6	; 0x4a6 <slave_select>
 4de:	82 e0       	ldi	r24, 0x02	; 2
 4e0:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 4e4:	8d 2f       	mov	r24, r29
 4e6:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 4ea:	8c 2f       	mov	r24, r28
 4ec:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 4f0:	0e 94 55 02 	call	0x4aa	; 0x4aa <slave_deselect>
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	08 95       	ret

000004fa <mcp2515_request_to_send>:
 4fa:	cf 93       	push	r28
 4fc:	c8 2f       	mov	r28, r24
 4fe:	0e 94 53 02 	call	0x4a6	; 0x4a6 <slave_select>
 502:	8c 2f       	mov	r24, r28
 504:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 508:	0e 94 55 02 	call	0x4aa	; 0x4aa <slave_deselect>
 50c:	cf 91       	pop	r28
 50e:	08 95       	ret

00000510 <mcp2515_bit_modify>:
 510:	1f 93       	push	r17
 512:	cf 93       	push	r28
 514:	df 93       	push	r29
 516:	18 2f       	mov	r17, r24
 518:	d6 2f       	mov	r29, r22
 51a:	c4 2f       	mov	r28, r20
 51c:	0e 94 53 02 	call	0x4a6	; 0x4a6 <slave_select>
 520:	85 e0       	ldi	r24, 0x05	; 5
 522:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 526:	81 2f       	mov	r24, r17
 528:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 52c:	8d 2f       	mov	r24, r29
 52e:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 532:	8c 2f       	mov	r24, r28
 534:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 538:	0e 94 55 02 	call	0x4aa	; 0x4aa <slave_deselect>
 53c:	df 91       	pop	r29
 53e:	cf 91       	pop	r28
 540:	1f 91       	pop	r17
 542:	08 95       	ret

00000544 <mcp2515_reset>:
 544:	0e 94 53 02 	call	0x4a6	; 0x4a6 <slave_select>
 548:	80 ec       	ldi	r24, 0xC0	; 192
 54a:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 54e:	0e 94 55 02 	call	0x4aa	; 0x4aa <slave_deselect>
 552:	08 95       	ret

00000554 <mcp2515_driver_init>:
 554:	cf 93       	push	r28
 556:	0e 94 01 03 	call	0x602	; 0x602 <spi_init>
 55a:	0e 94 a2 02 	call	0x544	; 0x544 <mcp2515_reset>
 55e:	60 e6       	ldi	r22, 0x60	; 96
 560:	80 e6       	ldi	r24, 0x60	; 96
 562:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 566:	60 e7       	ldi	r22, 0x70	; 112
 568:	80 e6       	ldi	r24, 0x60	; 96
 56a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 56e:	8e e0       	ldi	r24, 0x0E	; 14
 570:	0e 94 57 02 	call	0x4ae	; 0x4ae <mcp2515_read>
 574:	c8 2f       	mov	r28, r24
 576:	68 e2       	ldi	r22, 0x28	; 40
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 57e:	69 e2       	ldi	r22, 0x29	; 41
 580:	85 eb       	ldi	r24, 0xB5	; 181
 582:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 586:	6a e2       	ldi	r22, 0x2A	; 42
 588:	83 e4       	ldi	r24, 0x43	; 67
 58a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 58e:	c0 7e       	andi	r28, 0xE0	; 224
 590:	c0 38       	cpi	r28, 0x80	; 128
 592:	51 f0       	breq	.+20     	; 0x5a8 <mcp2515_driver_init+0x54>
 594:	88 e5       	ldi	r24, 0x58	; 88
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	9f 93       	push	r25
 59a:	8f 93       	push	r24
 59c:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
 5a0:	0f 90       	pop	r0
 5a2:	0f 90       	pop	r0
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	2b c0       	rjmp	.+86     	; 0x5fe <mcp2515_driver_init+0xaa>
 5a8:	2f e3       	ldi	r18, 0x3F	; 63
 5aa:	8d e0       	ldi	r24, 0x0D	; 13
 5ac:	93 e0       	ldi	r25, 0x03	; 3
 5ae:	21 50       	subi	r18, 0x01	; 1
 5b0:	80 40       	sbci	r24, 0x00	; 0
 5b2:	90 40       	sbci	r25, 0x00	; 0
 5b4:	e1 f7       	brne	.-8      	; 0x5ae <mcp2515_driver_init+0x5a>
 5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <mcp2515_driver_init+0x64>
 5b8:	00 00       	nop
 5ba:	6f e0       	ldi	r22, 0x0F	; 15
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	0e 94 69 02 	call	0x4d2	; 0x4d2 <mcp2515_write>
 5c2:	8e e0       	ldi	r24, 0x0E	; 14
 5c4:	0e 94 57 02 	call	0x4ae	; 0x4ae <mcp2515_read>
 5c8:	c8 2f       	mov	r28, r24
 5ca:	1f 92       	push	r1
 5cc:	8f 93       	push	r24
 5ce:	8c e8       	ldi	r24, 0x8C	; 140
 5d0:	91 e0       	ldi	r25, 0x01	; 1
 5d2:	9f 93       	push	r25
 5d4:	8f 93       	push	r24
 5d6:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
 5da:	c0 7e       	andi	r28, 0xE0	; 224
 5dc:	0f 90       	pop	r0
 5de:	0f 90       	pop	r0
 5e0:	0f 90       	pop	r0
 5e2:	0f 90       	pop	r0
 5e4:	c0 34       	cpi	r28, 0x40	; 64
 5e6:	51 f0       	breq	.+20     	; 0x5fc <mcp2515_driver_init+0xa8>
 5e8:	86 e0       	ldi	r24, 0x06	; 6
 5ea:	91 e0       	ldi	r25, 0x01	; 1
 5ec:	9f 93       	push	r25
 5ee:	8f 93       	push	r24
 5f0:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
 5f4:	0f 90       	pop	r0
 5f6:	0f 90       	pop	r0
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	01 c0       	rjmp	.+2      	; 0x5fe <mcp2515_driver_init+0xaa>
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	cf 91       	pop	r28
 600:	08 95       	ret

00000602 <spi_init>:
 602:	87 b3       	in	r24, 0x17	; 23
 604:	80 6b       	ori	r24, 0xB0	; 176
 606:	87 bb       	out	0x17, r24	; 23
 608:	be 98       	cbi	0x17, 6	; 23
 60a:	8d b1       	in	r24, 0x0d	; 13
 60c:	81 65       	ori	r24, 0x51	; 81
 60e:	8d b9       	out	0x0d, r24	; 13
 610:	08 95       	ret

00000612 <spi_send>:
 612:	8f b9       	out	0x0f, r24	; 15
 614:	77 9b       	sbis	0x0e, 7	; 14
 616:	fe cf       	rjmp	.-4      	; 0x614 <spi_send+0x2>
 618:	08 95       	ret

0000061a <spi_receive>:
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	0e 94 09 03 	call	0x612	; 0x612 <spi_send>
 620:	77 9b       	sbis	0x0e, 7	; 14
 622:	fe cf       	rjmp	.-4      	; 0x620 <spi_receive+0x6>
 624:	8f b1       	in	r24, 0x0f	; 15
 626:	08 95       	ret

00000628 <SRAM_init>:
 628:	85 b7       	in	r24, 0x35	; 53
 62a:	80 68       	ori	r24, 0x80	; 128
 62c:	85 bf       	out	0x35, r24	; 53
 62e:	80 b7       	in	r24, 0x30	; 48
 630:	80 62       	ori	r24, 0x20	; 32
 632:	80 bf       	out	0x30, r24	; 48
 634:	08 95       	ret

00000636 <USART_transmit>:
 636:	5d 9b       	sbis	0x0b, 5	; 11
 638:	fe cf       	rjmp	.-4      	; 0x636 <USART_transmit>
 63a:	8c b9       	out	0x0c, r24	; 12
 63c:	08 95       	ret

0000063e <USART_receive>:
 63e:	5f 9b       	sbis	0x0b, 7	; 11
 640:	fe cf       	rjmp	.-4      	; 0x63e <USART_receive>
 642:	8c b1       	in	r24, 0x0c	; 12
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	08 95       	ret

00000648 <USART_init>:
 648:	90 bd       	out	0x20, r25	; 32
 64a:	89 b9       	out	0x09, r24	; 9
 64c:	88 e1       	ldi	r24, 0x18	; 24
 64e:	8a b9       	out	0x0a, r24	; 10
 650:	8e e8       	ldi	r24, 0x8E	; 142
 652:	80 bd       	out	0x20, r24	; 32
 654:	6f e1       	ldi	r22, 0x1F	; 31
 656:	73 e0       	ldi	r23, 0x03	; 3
 658:	8b e1       	ldi	r24, 0x1B	; 27
 65a:	93 e0       	ldi	r25, 0x03	; 3
 65c:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fdevopen>
 660:	08 95       	ret

00000662 <__divmodhi4>:
 662:	97 fb       	bst	r25, 7
 664:	07 2e       	mov	r0, r23
 666:	16 f4       	brtc	.+4      	; 0x66c <__divmodhi4+0xa>
 668:	00 94       	com	r0
 66a:	07 d0       	rcall	.+14     	; 0x67a <__divmodhi4_neg1>
 66c:	77 fd       	sbrc	r23, 7
 66e:	09 d0       	rcall	.+18     	; 0x682 <__divmodhi4_neg2>
 670:	0e 94 45 03 	call	0x68a	; 0x68a <__udivmodhi4>
 674:	07 fc       	sbrc	r0, 7
 676:	05 d0       	rcall	.+10     	; 0x682 <__divmodhi4_neg2>
 678:	3e f4       	brtc	.+14     	; 0x688 <__divmodhi4_exit>

0000067a <__divmodhi4_neg1>:
 67a:	90 95       	com	r25
 67c:	81 95       	neg	r24
 67e:	9f 4f       	sbci	r25, 0xFF	; 255
 680:	08 95       	ret

00000682 <__divmodhi4_neg2>:
 682:	70 95       	com	r23
 684:	61 95       	neg	r22
 686:	7f 4f       	sbci	r23, 0xFF	; 255

00000688 <__divmodhi4_exit>:
 688:	08 95       	ret

0000068a <__udivmodhi4>:
 68a:	aa 1b       	sub	r26, r26
 68c:	bb 1b       	sub	r27, r27
 68e:	51 e1       	ldi	r21, 0x11	; 17
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <__udivmodhi4_ep>

00000692 <__udivmodhi4_loop>:
 692:	aa 1f       	adc	r26, r26
 694:	bb 1f       	adc	r27, r27
 696:	a6 17       	cp	r26, r22
 698:	b7 07       	cpc	r27, r23
 69a:	10 f0       	brcs	.+4      	; 0x6a0 <__udivmodhi4_ep>
 69c:	a6 1b       	sub	r26, r22
 69e:	b7 0b       	sbc	r27, r23

000006a0 <__udivmodhi4_ep>:
 6a0:	88 1f       	adc	r24, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	5a 95       	dec	r21
 6a6:	a9 f7       	brne	.-22     	; 0x692 <__udivmodhi4_loop>
 6a8:	80 95       	com	r24
 6aa:	90 95       	com	r25
 6ac:	bc 01       	movw	r22, r24
 6ae:	cd 01       	movw	r24, r26
 6b0:	08 95       	ret

000006b2 <fdevopen>:
 6b2:	0f 93       	push	r16
 6b4:	1f 93       	push	r17
 6b6:	cf 93       	push	r28
 6b8:	df 93       	push	r29
 6ba:	00 97       	sbiw	r24, 0x00	; 0
 6bc:	31 f4       	brne	.+12     	; 0x6ca <fdevopen+0x18>
 6be:	61 15       	cp	r22, r1
 6c0:	71 05       	cpc	r23, r1
 6c2:	19 f4       	brne	.+6      	; 0x6ca <fdevopen+0x18>
 6c4:	80 e0       	ldi	r24, 0x00	; 0
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	3a c0       	rjmp	.+116    	; 0x73e <fdevopen+0x8c>
 6ca:	8b 01       	movw	r16, r22
 6cc:	ec 01       	movw	r28, r24
 6ce:	6e e0       	ldi	r22, 0x0E	; 14
 6d0:	70 e0       	ldi	r23, 0x00	; 0
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 94 9b 05 	call	0xb36	; 0xb36 <calloc>
 6da:	fc 01       	movw	r30, r24
 6dc:	89 2b       	or	r24, r25
 6de:	91 f3       	breq	.-28     	; 0x6c4 <fdevopen+0x12>
 6e0:	80 e8       	ldi	r24, 0x80	; 128
 6e2:	83 83       	std	Z+3, r24	; 0x03
 6e4:	01 15       	cp	r16, r1
 6e6:	11 05       	cpc	r17, r1
 6e8:	71 f0       	breq	.+28     	; 0x706 <fdevopen+0x54>
 6ea:	13 87       	std	Z+11, r17	; 0x0b
 6ec:	02 87       	std	Z+10, r16	; 0x0a
 6ee:	81 e8       	ldi	r24, 0x81	; 129
 6f0:	83 83       	std	Z+3, r24	; 0x03
 6f2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <__iob>
 6f6:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <__iob+0x1>
 6fa:	89 2b       	or	r24, r25
 6fc:	21 f4       	brne	.+8      	; 0x706 <fdevopen+0x54>
 6fe:	f0 93 96 01 	sts	0x0196, r31	; 0x800196 <__iob+0x1>
 702:	e0 93 95 01 	sts	0x0195, r30	; 0x800195 <__iob>
 706:	20 97       	sbiw	r28, 0x00	; 0
 708:	c9 f0       	breq	.+50     	; 0x73c <fdevopen+0x8a>
 70a:	d1 87       	std	Z+9, r29	; 0x09
 70c:	c0 87       	std	Z+8, r28	; 0x08
 70e:	83 81       	ldd	r24, Z+3	; 0x03
 710:	82 60       	ori	r24, 0x02	; 2
 712:	83 83       	std	Z+3, r24	; 0x03
 714:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <__iob+0x2>
 718:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <__iob+0x3>
 71c:	89 2b       	or	r24, r25
 71e:	71 f4       	brne	.+28     	; 0x73c <fdevopen+0x8a>
 720:	f0 93 98 01 	sts	0x0198, r31	; 0x800198 <__iob+0x3>
 724:	e0 93 97 01 	sts	0x0197, r30	; 0x800197 <__iob+0x2>
 728:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <__iob+0x4>
 72c:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <__iob+0x5>
 730:	89 2b       	or	r24, r25
 732:	21 f4       	brne	.+8      	; 0x73c <fdevopen+0x8a>
 734:	f0 93 9a 01 	sts	0x019A, r31	; 0x80019a <__iob+0x5>
 738:	e0 93 99 01 	sts	0x0199, r30	; 0x800199 <__iob+0x4>
 73c:	cf 01       	movw	r24, r30
 73e:	df 91       	pop	r29
 740:	cf 91       	pop	r28
 742:	1f 91       	pop	r17
 744:	0f 91       	pop	r16
 746:	08 95       	ret

00000748 <printf>:
 748:	a0 e0       	ldi	r26, 0x00	; 0
 74a:	b0 e0       	ldi	r27, 0x00	; 0
 74c:	ea ea       	ldi	r30, 0xAA	; 170
 74e:	f3 e0       	ldi	r31, 0x03	; 3
 750:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__prologue_saves__+0x20>
 754:	ae 01       	movw	r20, r28
 756:	4b 5f       	subi	r20, 0xFB	; 251
 758:	5f 4f       	sbci	r21, 0xFF	; 255
 75a:	fa 01       	movw	r30, r20
 75c:	61 91       	ld	r22, Z+
 75e:	71 91       	ld	r23, Z+
 760:	af 01       	movw	r20, r30
 762:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <__iob+0x2>
 766:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <__iob+0x3>
 76a:	0e 94 ba 03 	call	0x774	; 0x774 <vfprintf>
 76e:	e2 e0       	ldi	r30, 0x02	; 2
 770:	0c 94 bb 07 	jmp	0xf76	; 0xf76 <__epilogue_restores__+0x20>

00000774 <vfprintf>:
 774:	ab e0       	ldi	r26, 0x0B	; 11
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	e0 ec       	ldi	r30, 0xC0	; 192
 77a:	f3 e0       	ldi	r31, 0x03	; 3
 77c:	0c 94 8f 07 	jmp	0xf1e	; 0xf1e <__prologue_saves__>
 780:	6c 01       	movw	r12, r24
 782:	7b 01       	movw	r14, r22
 784:	8a 01       	movw	r16, r20
 786:	fc 01       	movw	r30, r24
 788:	17 82       	std	Z+7, r1	; 0x07
 78a:	16 82       	std	Z+6, r1	; 0x06
 78c:	83 81       	ldd	r24, Z+3	; 0x03
 78e:	81 ff       	sbrs	r24, 1
 790:	cc c1       	rjmp	.+920    	; 0xb2a <vfprintf+0x3b6>
 792:	ce 01       	movw	r24, r28
 794:	01 96       	adiw	r24, 0x01	; 1
 796:	3c 01       	movw	r6, r24
 798:	f6 01       	movw	r30, r12
 79a:	93 81       	ldd	r25, Z+3	; 0x03
 79c:	f7 01       	movw	r30, r14
 79e:	93 fd       	sbrc	r25, 3
 7a0:	85 91       	lpm	r24, Z+
 7a2:	93 ff       	sbrs	r25, 3
 7a4:	81 91       	ld	r24, Z+
 7a6:	7f 01       	movw	r14, r30
 7a8:	88 23       	and	r24, r24
 7aa:	09 f4       	brne	.+2      	; 0x7ae <vfprintf+0x3a>
 7ac:	ba c1       	rjmp	.+884    	; 0xb22 <vfprintf+0x3ae>
 7ae:	85 32       	cpi	r24, 0x25	; 37
 7b0:	39 f4       	brne	.+14     	; 0x7c0 <vfprintf+0x4c>
 7b2:	93 fd       	sbrc	r25, 3
 7b4:	85 91       	lpm	r24, Z+
 7b6:	93 ff       	sbrs	r25, 3
 7b8:	81 91       	ld	r24, Z+
 7ba:	7f 01       	movw	r14, r30
 7bc:	85 32       	cpi	r24, 0x25	; 37
 7be:	29 f4       	brne	.+10     	; 0x7ca <vfprintf+0x56>
 7c0:	b6 01       	movw	r22, r12
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 7c8:	e7 cf       	rjmp	.-50     	; 0x798 <vfprintf+0x24>
 7ca:	91 2c       	mov	r9, r1
 7cc:	21 2c       	mov	r2, r1
 7ce:	31 2c       	mov	r3, r1
 7d0:	ff e1       	ldi	r31, 0x1F	; 31
 7d2:	f3 15       	cp	r31, r3
 7d4:	d8 f0       	brcs	.+54     	; 0x80c <vfprintf+0x98>
 7d6:	8b 32       	cpi	r24, 0x2B	; 43
 7d8:	79 f0       	breq	.+30     	; 0x7f8 <vfprintf+0x84>
 7da:	38 f4       	brcc	.+14     	; 0x7ea <vfprintf+0x76>
 7dc:	80 32       	cpi	r24, 0x20	; 32
 7de:	79 f0       	breq	.+30     	; 0x7fe <vfprintf+0x8a>
 7e0:	83 32       	cpi	r24, 0x23	; 35
 7e2:	a1 f4       	brne	.+40     	; 0x80c <vfprintf+0x98>
 7e4:	23 2d       	mov	r18, r3
 7e6:	20 61       	ori	r18, 0x10	; 16
 7e8:	1d c0       	rjmp	.+58     	; 0x824 <vfprintf+0xb0>
 7ea:	8d 32       	cpi	r24, 0x2D	; 45
 7ec:	61 f0       	breq	.+24     	; 0x806 <vfprintf+0x92>
 7ee:	80 33       	cpi	r24, 0x30	; 48
 7f0:	69 f4       	brne	.+26     	; 0x80c <vfprintf+0x98>
 7f2:	23 2d       	mov	r18, r3
 7f4:	21 60       	ori	r18, 0x01	; 1
 7f6:	16 c0       	rjmp	.+44     	; 0x824 <vfprintf+0xb0>
 7f8:	83 2d       	mov	r24, r3
 7fa:	82 60       	ori	r24, 0x02	; 2
 7fc:	38 2e       	mov	r3, r24
 7fe:	e3 2d       	mov	r30, r3
 800:	e4 60       	ori	r30, 0x04	; 4
 802:	3e 2e       	mov	r3, r30
 804:	2a c0       	rjmp	.+84     	; 0x85a <vfprintf+0xe6>
 806:	f3 2d       	mov	r31, r3
 808:	f8 60       	ori	r31, 0x08	; 8
 80a:	1d c0       	rjmp	.+58     	; 0x846 <vfprintf+0xd2>
 80c:	37 fc       	sbrc	r3, 7
 80e:	2d c0       	rjmp	.+90     	; 0x86a <vfprintf+0xf6>
 810:	20 ed       	ldi	r18, 0xD0	; 208
 812:	28 0f       	add	r18, r24
 814:	2a 30       	cpi	r18, 0x0A	; 10
 816:	40 f0       	brcs	.+16     	; 0x828 <vfprintf+0xb4>
 818:	8e 32       	cpi	r24, 0x2E	; 46
 81a:	b9 f4       	brne	.+46     	; 0x84a <vfprintf+0xd6>
 81c:	36 fc       	sbrc	r3, 6
 81e:	81 c1       	rjmp	.+770    	; 0xb22 <vfprintf+0x3ae>
 820:	23 2d       	mov	r18, r3
 822:	20 64       	ori	r18, 0x40	; 64
 824:	32 2e       	mov	r3, r18
 826:	19 c0       	rjmp	.+50     	; 0x85a <vfprintf+0xe6>
 828:	36 fe       	sbrs	r3, 6
 82a:	06 c0       	rjmp	.+12     	; 0x838 <vfprintf+0xc4>
 82c:	8a e0       	ldi	r24, 0x0A	; 10
 82e:	98 9e       	mul	r9, r24
 830:	20 0d       	add	r18, r0
 832:	11 24       	eor	r1, r1
 834:	92 2e       	mov	r9, r18
 836:	11 c0       	rjmp	.+34     	; 0x85a <vfprintf+0xe6>
 838:	ea e0       	ldi	r30, 0x0A	; 10
 83a:	2e 9e       	mul	r2, r30
 83c:	20 0d       	add	r18, r0
 83e:	11 24       	eor	r1, r1
 840:	22 2e       	mov	r2, r18
 842:	f3 2d       	mov	r31, r3
 844:	f0 62       	ori	r31, 0x20	; 32
 846:	3f 2e       	mov	r3, r31
 848:	08 c0       	rjmp	.+16     	; 0x85a <vfprintf+0xe6>
 84a:	8c 36       	cpi	r24, 0x6C	; 108
 84c:	21 f4       	brne	.+8      	; 0x856 <vfprintf+0xe2>
 84e:	83 2d       	mov	r24, r3
 850:	80 68       	ori	r24, 0x80	; 128
 852:	38 2e       	mov	r3, r24
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0xe6>
 856:	88 36       	cpi	r24, 0x68	; 104
 858:	41 f4       	brne	.+16     	; 0x86a <vfprintf+0xf6>
 85a:	f7 01       	movw	r30, r14
 85c:	93 fd       	sbrc	r25, 3
 85e:	85 91       	lpm	r24, Z+
 860:	93 ff       	sbrs	r25, 3
 862:	81 91       	ld	r24, Z+
 864:	7f 01       	movw	r14, r30
 866:	81 11       	cpse	r24, r1
 868:	b3 cf       	rjmp	.-154    	; 0x7d0 <vfprintf+0x5c>
 86a:	98 2f       	mov	r25, r24
 86c:	9f 7d       	andi	r25, 0xDF	; 223
 86e:	95 54       	subi	r25, 0x45	; 69
 870:	93 30       	cpi	r25, 0x03	; 3
 872:	28 f4       	brcc	.+10     	; 0x87e <vfprintf+0x10a>
 874:	0c 5f       	subi	r16, 0xFC	; 252
 876:	1f 4f       	sbci	r17, 0xFF	; 255
 878:	9f e3       	ldi	r25, 0x3F	; 63
 87a:	99 83       	std	Y+1, r25	; 0x01
 87c:	0d c0       	rjmp	.+26     	; 0x898 <vfprintf+0x124>
 87e:	83 36       	cpi	r24, 0x63	; 99
 880:	31 f0       	breq	.+12     	; 0x88e <vfprintf+0x11a>
 882:	83 37       	cpi	r24, 0x73	; 115
 884:	71 f0       	breq	.+28     	; 0x8a2 <vfprintf+0x12e>
 886:	83 35       	cpi	r24, 0x53	; 83
 888:	09 f0       	breq	.+2      	; 0x88c <vfprintf+0x118>
 88a:	59 c0       	rjmp	.+178    	; 0x93e <vfprintf+0x1ca>
 88c:	21 c0       	rjmp	.+66     	; 0x8d0 <vfprintf+0x15c>
 88e:	f8 01       	movw	r30, r16
 890:	80 81       	ld	r24, Z
 892:	89 83       	std	Y+1, r24	; 0x01
 894:	0e 5f       	subi	r16, 0xFE	; 254
 896:	1f 4f       	sbci	r17, 0xFF	; 255
 898:	88 24       	eor	r8, r8
 89a:	83 94       	inc	r8
 89c:	91 2c       	mov	r9, r1
 89e:	53 01       	movw	r10, r6
 8a0:	13 c0       	rjmp	.+38     	; 0x8c8 <vfprintf+0x154>
 8a2:	28 01       	movw	r4, r16
 8a4:	f2 e0       	ldi	r31, 0x02	; 2
 8a6:	4f 0e       	add	r4, r31
 8a8:	51 1c       	adc	r5, r1
 8aa:	f8 01       	movw	r30, r16
 8ac:	a0 80       	ld	r10, Z
 8ae:	b1 80       	ldd	r11, Z+1	; 0x01
 8b0:	36 fe       	sbrs	r3, 6
 8b2:	03 c0       	rjmp	.+6      	; 0x8ba <vfprintf+0x146>
 8b4:	69 2d       	mov	r22, r9
 8b6:	70 e0       	ldi	r23, 0x00	; 0
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <vfprintf+0x14a>
 8ba:	6f ef       	ldi	r22, 0xFF	; 255
 8bc:	7f ef       	ldi	r23, 0xFF	; 255
 8be:	c5 01       	movw	r24, r10
 8c0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <strnlen>
 8c4:	4c 01       	movw	r8, r24
 8c6:	82 01       	movw	r16, r4
 8c8:	f3 2d       	mov	r31, r3
 8ca:	ff 77       	andi	r31, 0x7F	; 127
 8cc:	3f 2e       	mov	r3, r31
 8ce:	16 c0       	rjmp	.+44     	; 0x8fc <vfprintf+0x188>
 8d0:	28 01       	movw	r4, r16
 8d2:	22 e0       	ldi	r18, 0x02	; 2
 8d4:	42 0e       	add	r4, r18
 8d6:	51 1c       	adc	r5, r1
 8d8:	f8 01       	movw	r30, r16
 8da:	a0 80       	ld	r10, Z
 8dc:	b1 80       	ldd	r11, Z+1	; 0x01
 8de:	36 fe       	sbrs	r3, 6
 8e0:	03 c0       	rjmp	.+6      	; 0x8e8 <vfprintf+0x174>
 8e2:	69 2d       	mov	r22, r9
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <vfprintf+0x178>
 8e8:	6f ef       	ldi	r22, 0xFF	; 255
 8ea:	7f ef       	ldi	r23, 0xFF	; 255
 8ec:	c5 01       	movw	r24, r10
 8ee:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <strnlen_P>
 8f2:	4c 01       	movw	r8, r24
 8f4:	f3 2d       	mov	r31, r3
 8f6:	f0 68       	ori	r31, 0x80	; 128
 8f8:	3f 2e       	mov	r3, r31
 8fa:	82 01       	movw	r16, r4
 8fc:	33 fc       	sbrc	r3, 3
 8fe:	1b c0       	rjmp	.+54     	; 0x936 <vfprintf+0x1c2>
 900:	82 2d       	mov	r24, r2
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	88 16       	cp	r8, r24
 906:	99 06       	cpc	r9, r25
 908:	b0 f4       	brcc	.+44     	; 0x936 <vfprintf+0x1c2>
 90a:	b6 01       	movw	r22, r12
 90c:	80 e2       	ldi	r24, 0x20	; 32
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 914:	2a 94       	dec	r2
 916:	f4 cf       	rjmp	.-24     	; 0x900 <vfprintf+0x18c>
 918:	f5 01       	movw	r30, r10
 91a:	37 fc       	sbrc	r3, 7
 91c:	85 91       	lpm	r24, Z+
 91e:	37 fe       	sbrs	r3, 7
 920:	81 91       	ld	r24, Z+
 922:	5f 01       	movw	r10, r30
 924:	b6 01       	movw	r22, r12
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 92c:	21 10       	cpse	r2, r1
 92e:	2a 94       	dec	r2
 930:	21 e0       	ldi	r18, 0x01	; 1
 932:	82 1a       	sub	r8, r18
 934:	91 08       	sbc	r9, r1
 936:	81 14       	cp	r8, r1
 938:	91 04       	cpc	r9, r1
 93a:	71 f7       	brne	.-36     	; 0x918 <vfprintf+0x1a4>
 93c:	e8 c0       	rjmp	.+464    	; 0xb0e <vfprintf+0x39a>
 93e:	84 36       	cpi	r24, 0x64	; 100
 940:	11 f0       	breq	.+4      	; 0x946 <vfprintf+0x1d2>
 942:	89 36       	cpi	r24, 0x69	; 105
 944:	41 f5       	brne	.+80     	; 0x996 <vfprintf+0x222>
 946:	f8 01       	movw	r30, r16
 948:	37 fe       	sbrs	r3, 7
 94a:	07 c0       	rjmp	.+14     	; 0x95a <vfprintf+0x1e6>
 94c:	60 81       	ld	r22, Z
 94e:	71 81       	ldd	r23, Z+1	; 0x01
 950:	82 81       	ldd	r24, Z+2	; 0x02
 952:	93 81       	ldd	r25, Z+3	; 0x03
 954:	0c 5f       	subi	r16, 0xFC	; 252
 956:	1f 4f       	sbci	r17, 0xFF	; 255
 958:	08 c0       	rjmp	.+16     	; 0x96a <vfprintf+0x1f6>
 95a:	60 81       	ld	r22, Z
 95c:	71 81       	ldd	r23, Z+1	; 0x01
 95e:	07 2e       	mov	r0, r23
 960:	00 0c       	add	r0, r0
 962:	88 0b       	sbc	r24, r24
 964:	99 0b       	sbc	r25, r25
 966:	0e 5f       	subi	r16, 0xFE	; 254
 968:	1f 4f       	sbci	r17, 0xFF	; 255
 96a:	f3 2d       	mov	r31, r3
 96c:	ff 76       	andi	r31, 0x6F	; 111
 96e:	3f 2e       	mov	r3, r31
 970:	97 ff       	sbrs	r25, 7
 972:	09 c0       	rjmp	.+18     	; 0x986 <vfprintf+0x212>
 974:	90 95       	com	r25
 976:	80 95       	com	r24
 978:	70 95       	com	r23
 97a:	61 95       	neg	r22
 97c:	7f 4f       	sbci	r23, 0xFF	; 255
 97e:	8f 4f       	sbci	r24, 0xFF	; 255
 980:	9f 4f       	sbci	r25, 0xFF	; 255
 982:	f0 68       	ori	r31, 0x80	; 128
 984:	3f 2e       	mov	r3, r31
 986:	2a e0       	ldi	r18, 0x0A	; 10
 988:	30 e0       	ldi	r19, 0x00	; 0
 98a:	a3 01       	movw	r20, r6
 98c:	0e 94 31 07 	call	0xe62	; 0xe62 <__ultoa_invert>
 990:	88 2e       	mov	r8, r24
 992:	86 18       	sub	r8, r6
 994:	45 c0       	rjmp	.+138    	; 0xa20 <vfprintf+0x2ac>
 996:	85 37       	cpi	r24, 0x75	; 117
 998:	31 f4       	brne	.+12     	; 0x9a6 <vfprintf+0x232>
 99a:	23 2d       	mov	r18, r3
 99c:	2f 7e       	andi	r18, 0xEF	; 239
 99e:	b2 2e       	mov	r11, r18
 9a0:	2a e0       	ldi	r18, 0x0A	; 10
 9a2:	30 e0       	ldi	r19, 0x00	; 0
 9a4:	25 c0       	rjmp	.+74     	; 0x9f0 <vfprintf+0x27c>
 9a6:	93 2d       	mov	r25, r3
 9a8:	99 7f       	andi	r25, 0xF9	; 249
 9aa:	b9 2e       	mov	r11, r25
 9ac:	8f 36       	cpi	r24, 0x6F	; 111
 9ae:	c1 f0       	breq	.+48     	; 0x9e0 <vfprintf+0x26c>
 9b0:	18 f4       	brcc	.+6      	; 0x9b8 <vfprintf+0x244>
 9b2:	88 35       	cpi	r24, 0x58	; 88
 9b4:	79 f0       	breq	.+30     	; 0x9d4 <vfprintf+0x260>
 9b6:	b5 c0       	rjmp	.+362    	; 0xb22 <vfprintf+0x3ae>
 9b8:	80 37       	cpi	r24, 0x70	; 112
 9ba:	19 f0       	breq	.+6      	; 0x9c2 <vfprintf+0x24e>
 9bc:	88 37       	cpi	r24, 0x78	; 120
 9be:	21 f0       	breq	.+8      	; 0x9c8 <vfprintf+0x254>
 9c0:	b0 c0       	rjmp	.+352    	; 0xb22 <vfprintf+0x3ae>
 9c2:	e9 2f       	mov	r30, r25
 9c4:	e0 61       	ori	r30, 0x10	; 16
 9c6:	be 2e       	mov	r11, r30
 9c8:	b4 fe       	sbrs	r11, 4
 9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <vfprintf+0x272>
 9cc:	fb 2d       	mov	r31, r11
 9ce:	f4 60       	ori	r31, 0x04	; 4
 9d0:	bf 2e       	mov	r11, r31
 9d2:	09 c0       	rjmp	.+18     	; 0x9e6 <vfprintf+0x272>
 9d4:	34 fe       	sbrs	r3, 4
 9d6:	0a c0       	rjmp	.+20     	; 0x9ec <vfprintf+0x278>
 9d8:	29 2f       	mov	r18, r25
 9da:	26 60       	ori	r18, 0x06	; 6
 9dc:	b2 2e       	mov	r11, r18
 9de:	06 c0       	rjmp	.+12     	; 0x9ec <vfprintf+0x278>
 9e0:	28 e0       	ldi	r18, 0x08	; 8
 9e2:	30 e0       	ldi	r19, 0x00	; 0
 9e4:	05 c0       	rjmp	.+10     	; 0x9f0 <vfprintf+0x27c>
 9e6:	20 e1       	ldi	r18, 0x10	; 16
 9e8:	30 e0       	ldi	r19, 0x00	; 0
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <vfprintf+0x27c>
 9ec:	20 e1       	ldi	r18, 0x10	; 16
 9ee:	32 e0       	ldi	r19, 0x02	; 2
 9f0:	f8 01       	movw	r30, r16
 9f2:	b7 fe       	sbrs	r11, 7
 9f4:	07 c0       	rjmp	.+14     	; 0xa04 <vfprintf+0x290>
 9f6:	60 81       	ld	r22, Z
 9f8:	71 81       	ldd	r23, Z+1	; 0x01
 9fa:	82 81       	ldd	r24, Z+2	; 0x02
 9fc:	93 81       	ldd	r25, Z+3	; 0x03
 9fe:	0c 5f       	subi	r16, 0xFC	; 252
 a00:	1f 4f       	sbci	r17, 0xFF	; 255
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <vfprintf+0x29c>
 a04:	60 81       	ld	r22, Z
 a06:	71 81       	ldd	r23, Z+1	; 0x01
 a08:	80 e0       	ldi	r24, 0x00	; 0
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	0e 5f       	subi	r16, 0xFE	; 254
 a0e:	1f 4f       	sbci	r17, 0xFF	; 255
 a10:	a3 01       	movw	r20, r6
 a12:	0e 94 31 07 	call	0xe62	; 0xe62 <__ultoa_invert>
 a16:	88 2e       	mov	r8, r24
 a18:	86 18       	sub	r8, r6
 a1a:	fb 2d       	mov	r31, r11
 a1c:	ff 77       	andi	r31, 0x7F	; 127
 a1e:	3f 2e       	mov	r3, r31
 a20:	36 fe       	sbrs	r3, 6
 a22:	0d c0       	rjmp	.+26     	; 0xa3e <vfprintf+0x2ca>
 a24:	23 2d       	mov	r18, r3
 a26:	2e 7f       	andi	r18, 0xFE	; 254
 a28:	a2 2e       	mov	r10, r18
 a2a:	89 14       	cp	r8, r9
 a2c:	58 f4       	brcc	.+22     	; 0xa44 <vfprintf+0x2d0>
 a2e:	34 fe       	sbrs	r3, 4
 a30:	0b c0       	rjmp	.+22     	; 0xa48 <vfprintf+0x2d4>
 a32:	32 fc       	sbrc	r3, 2
 a34:	09 c0       	rjmp	.+18     	; 0xa48 <vfprintf+0x2d4>
 a36:	83 2d       	mov	r24, r3
 a38:	8e 7e       	andi	r24, 0xEE	; 238
 a3a:	a8 2e       	mov	r10, r24
 a3c:	05 c0       	rjmp	.+10     	; 0xa48 <vfprintf+0x2d4>
 a3e:	b8 2c       	mov	r11, r8
 a40:	a3 2c       	mov	r10, r3
 a42:	03 c0       	rjmp	.+6      	; 0xa4a <vfprintf+0x2d6>
 a44:	b8 2c       	mov	r11, r8
 a46:	01 c0       	rjmp	.+2      	; 0xa4a <vfprintf+0x2d6>
 a48:	b9 2c       	mov	r11, r9
 a4a:	a4 fe       	sbrs	r10, 4
 a4c:	0f c0       	rjmp	.+30     	; 0xa6c <vfprintf+0x2f8>
 a4e:	fe 01       	movw	r30, r28
 a50:	e8 0d       	add	r30, r8
 a52:	f1 1d       	adc	r31, r1
 a54:	80 81       	ld	r24, Z
 a56:	80 33       	cpi	r24, 0x30	; 48
 a58:	21 f4       	brne	.+8      	; 0xa62 <vfprintf+0x2ee>
 a5a:	9a 2d       	mov	r25, r10
 a5c:	99 7e       	andi	r25, 0xE9	; 233
 a5e:	a9 2e       	mov	r10, r25
 a60:	09 c0       	rjmp	.+18     	; 0xa74 <vfprintf+0x300>
 a62:	a2 fe       	sbrs	r10, 2
 a64:	06 c0       	rjmp	.+12     	; 0xa72 <vfprintf+0x2fe>
 a66:	b3 94       	inc	r11
 a68:	b3 94       	inc	r11
 a6a:	04 c0       	rjmp	.+8      	; 0xa74 <vfprintf+0x300>
 a6c:	8a 2d       	mov	r24, r10
 a6e:	86 78       	andi	r24, 0x86	; 134
 a70:	09 f0       	breq	.+2      	; 0xa74 <vfprintf+0x300>
 a72:	b3 94       	inc	r11
 a74:	a3 fc       	sbrc	r10, 3
 a76:	11 c0       	rjmp	.+34     	; 0xa9a <vfprintf+0x326>
 a78:	a0 fe       	sbrs	r10, 0
 a7a:	06 c0       	rjmp	.+12     	; 0xa88 <vfprintf+0x314>
 a7c:	b2 14       	cp	r11, r2
 a7e:	88 f4       	brcc	.+34     	; 0xaa2 <vfprintf+0x32e>
 a80:	28 0c       	add	r2, r8
 a82:	92 2c       	mov	r9, r2
 a84:	9b 18       	sub	r9, r11
 a86:	0e c0       	rjmp	.+28     	; 0xaa4 <vfprintf+0x330>
 a88:	b2 14       	cp	r11, r2
 a8a:	60 f4       	brcc	.+24     	; 0xaa4 <vfprintf+0x330>
 a8c:	b6 01       	movw	r22, r12
 a8e:	80 e2       	ldi	r24, 0x20	; 32
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 a96:	b3 94       	inc	r11
 a98:	f7 cf       	rjmp	.-18     	; 0xa88 <vfprintf+0x314>
 a9a:	b2 14       	cp	r11, r2
 a9c:	18 f4       	brcc	.+6      	; 0xaa4 <vfprintf+0x330>
 a9e:	2b 18       	sub	r2, r11
 aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <vfprintf+0x332>
 aa2:	98 2c       	mov	r9, r8
 aa4:	21 2c       	mov	r2, r1
 aa6:	a4 fe       	sbrs	r10, 4
 aa8:	10 c0       	rjmp	.+32     	; 0xaca <vfprintf+0x356>
 aaa:	b6 01       	movw	r22, r12
 aac:	80 e3       	ldi	r24, 0x30	; 48
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 ab4:	a2 fe       	sbrs	r10, 2
 ab6:	17 c0       	rjmp	.+46     	; 0xae6 <vfprintf+0x372>
 ab8:	a1 fc       	sbrc	r10, 1
 aba:	03 c0       	rjmp	.+6      	; 0xac2 <vfprintf+0x34e>
 abc:	88 e7       	ldi	r24, 0x78	; 120
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x352>
 ac2:	88 e5       	ldi	r24, 0x58	; 88
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	b6 01       	movw	r22, r12
 ac8:	0c c0       	rjmp	.+24     	; 0xae2 <vfprintf+0x36e>
 aca:	8a 2d       	mov	r24, r10
 acc:	86 78       	andi	r24, 0x86	; 134
 ace:	59 f0       	breq	.+22     	; 0xae6 <vfprintf+0x372>
 ad0:	a1 fe       	sbrs	r10, 1
 ad2:	02 c0       	rjmp	.+4      	; 0xad8 <vfprintf+0x364>
 ad4:	8b e2       	ldi	r24, 0x2B	; 43
 ad6:	01 c0       	rjmp	.+2      	; 0xada <vfprintf+0x366>
 ad8:	80 e2       	ldi	r24, 0x20	; 32
 ada:	a7 fc       	sbrc	r10, 7
 adc:	8d e2       	ldi	r24, 0x2D	; 45
 ade:	b6 01       	movw	r22, r12
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 ae6:	89 14       	cp	r8, r9
 ae8:	38 f4       	brcc	.+14     	; 0xaf8 <vfprintf+0x384>
 aea:	b6 01       	movw	r22, r12
 aec:	80 e3       	ldi	r24, 0x30	; 48
 aee:	90 e0       	ldi	r25, 0x00	; 0
 af0:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 af4:	9a 94       	dec	r9
 af6:	f7 cf       	rjmp	.-18     	; 0xae6 <vfprintf+0x372>
 af8:	8a 94       	dec	r8
 afa:	f3 01       	movw	r30, r6
 afc:	e8 0d       	add	r30, r8
 afe:	f1 1d       	adc	r31, r1
 b00:	80 81       	ld	r24, Z
 b02:	b6 01       	movw	r22, r12
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 b0a:	81 10       	cpse	r8, r1
 b0c:	f5 cf       	rjmp	.-22     	; 0xaf8 <vfprintf+0x384>
 b0e:	22 20       	and	r2, r2
 b10:	09 f4       	brne	.+2      	; 0xb14 <vfprintf+0x3a0>
 b12:	42 ce       	rjmp	.-892    	; 0x798 <vfprintf+0x24>
 b14:	b6 01       	movw	r22, r12
 b16:	80 e2       	ldi	r24, 0x20	; 32
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	0e 94 f5 06 	call	0xdea	; 0xdea <fputc>
 b1e:	2a 94       	dec	r2
 b20:	f6 cf       	rjmp	.-20     	; 0xb0e <vfprintf+0x39a>
 b22:	f6 01       	movw	r30, r12
 b24:	86 81       	ldd	r24, Z+6	; 0x06
 b26:	97 81       	ldd	r25, Z+7	; 0x07
 b28:	02 c0       	rjmp	.+4      	; 0xb2e <vfprintf+0x3ba>
 b2a:	8f ef       	ldi	r24, 0xFF	; 255
 b2c:	9f ef       	ldi	r25, 0xFF	; 255
 b2e:	2b 96       	adiw	r28, 0x0b	; 11
 b30:	e2 e1       	ldi	r30, 0x12	; 18
 b32:	0c 94 ab 07 	jmp	0xf56	; 0xf56 <__epilogue_restores__>

00000b36 <calloc>:
 b36:	0f 93       	push	r16
 b38:	1f 93       	push	r17
 b3a:	cf 93       	push	r28
 b3c:	df 93       	push	r29
 b3e:	86 9f       	mul	r24, r22
 b40:	80 01       	movw	r16, r0
 b42:	87 9f       	mul	r24, r23
 b44:	10 0d       	add	r17, r0
 b46:	96 9f       	mul	r25, r22
 b48:	10 0d       	add	r17, r0
 b4a:	11 24       	eor	r1, r1
 b4c:	c8 01       	movw	r24, r16
 b4e:	0e 94 b7 05 	call	0xb6e	; 0xb6e <malloc>
 b52:	ec 01       	movw	r28, r24
 b54:	00 97       	sbiw	r24, 0x00	; 0
 b56:	29 f0       	breq	.+10     	; 0xb62 <calloc+0x2c>
 b58:	a8 01       	movw	r20, r16
 b5a:	60 e0       	ldi	r22, 0x00	; 0
 b5c:	70 e0       	ldi	r23, 0x00	; 0
 b5e:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <memset>
 b62:	ce 01       	movw	r24, r28
 b64:	df 91       	pop	r29
 b66:	cf 91       	pop	r28
 b68:	1f 91       	pop	r17
 b6a:	0f 91       	pop	r16
 b6c:	08 95       	ret

00000b6e <malloc>:
 b6e:	0f 93       	push	r16
 b70:	1f 93       	push	r17
 b72:	cf 93       	push	r28
 b74:	df 93       	push	r29
 b76:	82 30       	cpi	r24, 0x02	; 2
 b78:	91 05       	cpc	r25, r1
 b7a:	10 f4       	brcc	.+4      	; 0xb80 <malloc+0x12>
 b7c:	82 e0       	ldi	r24, 0x02	; 2
 b7e:	90 e0       	ldi	r25, 0x00	; 0
 b80:	e0 91 9d 01 	lds	r30, 0x019D	; 0x80019d <__flp>
 b84:	f0 91 9e 01 	lds	r31, 0x019E	; 0x80019e <__flp+0x1>
 b88:	20 e0       	ldi	r18, 0x00	; 0
 b8a:	30 e0       	ldi	r19, 0x00	; 0
 b8c:	a0 e0       	ldi	r26, 0x00	; 0
 b8e:	b0 e0       	ldi	r27, 0x00	; 0
 b90:	30 97       	sbiw	r30, 0x00	; 0
 b92:	19 f1       	breq	.+70     	; 0xbda <malloc+0x6c>
 b94:	40 81       	ld	r20, Z
 b96:	51 81       	ldd	r21, Z+1	; 0x01
 b98:	02 81       	ldd	r16, Z+2	; 0x02
 b9a:	13 81       	ldd	r17, Z+3	; 0x03
 b9c:	48 17       	cp	r20, r24
 b9e:	59 07       	cpc	r21, r25
 ba0:	c8 f0       	brcs	.+50     	; 0xbd4 <malloc+0x66>
 ba2:	84 17       	cp	r24, r20
 ba4:	95 07       	cpc	r25, r21
 ba6:	69 f4       	brne	.+26     	; 0xbc2 <malloc+0x54>
 ba8:	10 97       	sbiw	r26, 0x00	; 0
 baa:	31 f0       	breq	.+12     	; 0xbb8 <malloc+0x4a>
 bac:	12 96       	adiw	r26, 0x02	; 2
 bae:	0c 93       	st	X, r16
 bb0:	12 97       	sbiw	r26, 0x02	; 2
 bb2:	13 96       	adiw	r26, 0x03	; 3
 bb4:	1c 93       	st	X, r17
 bb6:	27 c0       	rjmp	.+78     	; 0xc06 <malloc+0x98>
 bb8:	00 93 9d 01 	sts	0x019D, r16	; 0x80019d <__flp>
 bbc:	10 93 9e 01 	sts	0x019E, r17	; 0x80019e <__flp+0x1>
 bc0:	22 c0       	rjmp	.+68     	; 0xc06 <malloc+0x98>
 bc2:	21 15       	cp	r18, r1
 bc4:	31 05       	cpc	r19, r1
 bc6:	19 f0       	breq	.+6      	; 0xbce <malloc+0x60>
 bc8:	42 17       	cp	r20, r18
 bca:	53 07       	cpc	r21, r19
 bcc:	18 f4       	brcc	.+6      	; 0xbd4 <malloc+0x66>
 bce:	9a 01       	movw	r18, r20
 bd0:	bd 01       	movw	r22, r26
 bd2:	ef 01       	movw	r28, r30
 bd4:	df 01       	movw	r26, r30
 bd6:	f8 01       	movw	r30, r16
 bd8:	db cf       	rjmp	.-74     	; 0xb90 <malloc+0x22>
 bda:	21 15       	cp	r18, r1
 bdc:	31 05       	cpc	r19, r1
 bde:	f9 f0       	breq	.+62     	; 0xc1e <malloc+0xb0>
 be0:	28 1b       	sub	r18, r24
 be2:	39 0b       	sbc	r19, r25
 be4:	24 30       	cpi	r18, 0x04	; 4
 be6:	31 05       	cpc	r19, r1
 be8:	80 f4       	brcc	.+32     	; 0xc0a <malloc+0x9c>
 bea:	8a 81       	ldd	r24, Y+2	; 0x02
 bec:	9b 81       	ldd	r25, Y+3	; 0x03
 bee:	61 15       	cp	r22, r1
 bf0:	71 05       	cpc	r23, r1
 bf2:	21 f0       	breq	.+8      	; 0xbfc <malloc+0x8e>
 bf4:	fb 01       	movw	r30, r22
 bf6:	93 83       	std	Z+3, r25	; 0x03
 bf8:	82 83       	std	Z+2, r24	; 0x02
 bfa:	04 c0       	rjmp	.+8      	; 0xc04 <malloc+0x96>
 bfc:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <__flp+0x1>
 c00:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <__flp>
 c04:	fe 01       	movw	r30, r28
 c06:	32 96       	adiw	r30, 0x02	; 2
 c08:	44 c0       	rjmp	.+136    	; 0xc92 <malloc+0x124>
 c0a:	fe 01       	movw	r30, r28
 c0c:	e2 0f       	add	r30, r18
 c0e:	f3 1f       	adc	r31, r19
 c10:	81 93       	st	Z+, r24
 c12:	91 93       	st	Z+, r25
 c14:	22 50       	subi	r18, 0x02	; 2
 c16:	31 09       	sbc	r19, r1
 c18:	39 83       	std	Y+1, r19	; 0x01
 c1a:	28 83       	st	Y, r18
 c1c:	3a c0       	rjmp	.+116    	; 0xc92 <malloc+0x124>
 c1e:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <__brkval>
 c22:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <__brkval+0x1>
 c26:	23 2b       	or	r18, r19
 c28:	41 f4       	brne	.+16     	; 0xc3a <malloc+0xcc>
 c2a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 c2e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 c32:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <__brkval+0x1>
 c36:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <__brkval>
 c3a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 c3e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 c42:	21 15       	cp	r18, r1
 c44:	31 05       	cpc	r19, r1
 c46:	41 f4       	brne	.+16     	; 0xc58 <malloc+0xea>
 c48:	2d b7       	in	r18, 0x3d	; 61
 c4a:	3e b7       	in	r19, 0x3e	; 62
 c4c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 c50:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 c54:	24 1b       	sub	r18, r20
 c56:	35 0b       	sbc	r19, r21
 c58:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <__brkval>
 c5c:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <__brkval+0x1>
 c60:	e2 17       	cp	r30, r18
 c62:	f3 07       	cpc	r31, r19
 c64:	a0 f4       	brcc	.+40     	; 0xc8e <malloc+0x120>
 c66:	2e 1b       	sub	r18, r30
 c68:	3f 0b       	sbc	r19, r31
 c6a:	28 17       	cp	r18, r24
 c6c:	39 07       	cpc	r19, r25
 c6e:	78 f0       	brcs	.+30     	; 0xc8e <malloc+0x120>
 c70:	ac 01       	movw	r20, r24
 c72:	4e 5f       	subi	r20, 0xFE	; 254
 c74:	5f 4f       	sbci	r21, 0xFF	; 255
 c76:	24 17       	cp	r18, r20
 c78:	35 07       	cpc	r19, r21
 c7a:	48 f0       	brcs	.+18     	; 0xc8e <malloc+0x120>
 c7c:	4e 0f       	add	r20, r30
 c7e:	5f 1f       	adc	r21, r31
 c80:	50 93 9c 01 	sts	0x019C, r21	; 0x80019c <__brkval+0x1>
 c84:	40 93 9b 01 	sts	0x019B, r20	; 0x80019b <__brkval>
 c88:	81 93       	st	Z+, r24
 c8a:	91 93       	st	Z+, r25
 c8c:	02 c0       	rjmp	.+4      	; 0xc92 <malloc+0x124>
 c8e:	e0 e0       	ldi	r30, 0x00	; 0
 c90:	f0 e0       	ldi	r31, 0x00	; 0
 c92:	cf 01       	movw	r24, r30
 c94:	df 91       	pop	r29
 c96:	cf 91       	pop	r28
 c98:	1f 91       	pop	r17
 c9a:	0f 91       	pop	r16
 c9c:	08 95       	ret

00000c9e <free>:
 c9e:	cf 93       	push	r28
 ca0:	df 93       	push	r29
 ca2:	00 97       	sbiw	r24, 0x00	; 0
 ca4:	09 f4       	brne	.+2      	; 0xca8 <free+0xa>
 ca6:	81 c0       	rjmp	.+258    	; 0xdaa <free+0x10c>
 ca8:	fc 01       	movw	r30, r24
 caa:	32 97       	sbiw	r30, 0x02	; 2
 cac:	13 82       	std	Z+3, r1	; 0x03
 cae:	12 82       	std	Z+2, r1	; 0x02
 cb0:	a0 91 9d 01 	lds	r26, 0x019D	; 0x80019d <__flp>
 cb4:	b0 91 9e 01 	lds	r27, 0x019E	; 0x80019e <__flp+0x1>
 cb8:	10 97       	sbiw	r26, 0x00	; 0
 cba:	81 f4       	brne	.+32     	; 0xcdc <free+0x3e>
 cbc:	20 81       	ld	r18, Z
 cbe:	31 81       	ldd	r19, Z+1	; 0x01
 cc0:	82 0f       	add	r24, r18
 cc2:	93 1f       	adc	r25, r19
 cc4:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <__brkval>
 cc8:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <__brkval+0x1>
 ccc:	28 17       	cp	r18, r24
 cce:	39 07       	cpc	r19, r25
 cd0:	51 f5       	brne	.+84     	; 0xd26 <free+0x88>
 cd2:	f0 93 9c 01 	sts	0x019C, r31	; 0x80019c <__brkval+0x1>
 cd6:	e0 93 9b 01 	sts	0x019B, r30	; 0x80019b <__brkval>
 cda:	67 c0       	rjmp	.+206    	; 0xdaa <free+0x10c>
 cdc:	ed 01       	movw	r28, r26
 cde:	20 e0       	ldi	r18, 0x00	; 0
 ce0:	30 e0       	ldi	r19, 0x00	; 0
 ce2:	ce 17       	cp	r28, r30
 ce4:	df 07       	cpc	r29, r31
 ce6:	40 f4       	brcc	.+16     	; 0xcf8 <free+0x5a>
 ce8:	4a 81       	ldd	r20, Y+2	; 0x02
 cea:	5b 81       	ldd	r21, Y+3	; 0x03
 cec:	9e 01       	movw	r18, r28
 cee:	41 15       	cp	r20, r1
 cf0:	51 05       	cpc	r21, r1
 cf2:	f1 f0       	breq	.+60     	; 0xd30 <free+0x92>
 cf4:	ea 01       	movw	r28, r20
 cf6:	f5 cf       	rjmp	.-22     	; 0xce2 <free+0x44>
 cf8:	d3 83       	std	Z+3, r29	; 0x03
 cfa:	c2 83       	std	Z+2, r28	; 0x02
 cfc:	40 81       	ld	r20, Z
 cfe:	51 81       	ldd	r21, Z+1	; 0x01
 d00:	84 0f       	add	r24, r20
 d02:	95 1f       	adc	r25, r21
 d04:	c8 17       	cp	r28, r24
 d06:	d9 07       	cpc	r29, r25
 d08:	59 f4       	brne	.+22     	; 0xd20 <free+0x82>
 d0a:	88 81       	ld	r24, Y
 d0c:	99 81       	ldd	r25, Y+1	; 0x01
 d0e:	84 0f       	add	r24, r20
 d10:	95 1f       	adc	r25, r21
 d12:	02 96       	adiw	r24, 0x02	; 2
 d14:	91 83       	std	Z+1, r25	; 0x01
 d16:	80 83       	st	Z, r24
 d18:	8a 81       	ldd	r24, Y+2	; 0x02
 d1a:	9b 81       	ldd	r25, Y+3	; 0x03
 d1c:	93 83       	std	Z+3, r25	; 0x03
 d1e:	82 83       	std	Z+2, r24	; 0x02
 d20:	21 15       	cp	r18, r1
 d22:	31 05       	cpc	r19, r1
 d24:	29 f4       	brne	.+10     	; 0xd30 <free+0x92>
 d26:	f0 93 9e 01 	sts	0x019E, r31	; 0x80019e <__flp+0x1>
 d2a:	e0 93 9d 01 	sts	0x019D, r30	; 0x80019d <__flp>
 d2e:	3d c0       	rjmp	.+122    	; 0xdaa <free+0x10c>
 d30:	e9 01       	movw	r28, r18
 d32:	fb 83       	std	Y+3, r31	; 0x03
 d34:	ea 83       	std	Y+2, r30	; 0x02
 d36:	49 91       	ld	r20, Y+
 d38:	59 91       	ld	r21, Y+
 d3a:	c4 0f       	add	r28, r20
 d3c:	d5 1f       	adc	r29, r21
 d3e:	ec 17       	cp	r30, r28
 d40:	fd 07       	cpc	r31, r29
 d42:	61 f4       	brne	.+24     	; 0xd5c <free+0xbe>
 d44:	80 81       	ld	r24, Z
 d46:	91 81       	ldd	r25, Z+1	; 0x01
 d48:	84 0f       	add	r24, r20
 d4a:	95 1f       	adc	r25, r21
 d4c:	02 96       	adiw	r24, 0x02	; 2
 d4e:	e9 01       	movw	r28, r18
 d50:	99 83       	std	Y+1, r25	; 0x01
 d52:	88 83       	st	Y, r24
 d54:	82 81       	ldd	r24, Z+2	; 0x02
 d56:	93 81       	ldd	r25, Z+3	; 0x03
 d58:	9b 83       	std	Y+3, r25	; 0x03
 d5a:	8a 83       	std	Y+2, r24	; 0x02
 d5c:	e0 e0       	ldi	r30, 0x00	; 0
 d5e:	f0 e0       	ldi	r31, 0x00	; 0
 d60:	12 96       	adiw	r26, 0x02	; 2
 d62:	8d 91       	ld	r24, X+
 d64:	9c 91       	ld	r25, X
 d66:	13 97       	sbiw	r26, 0x03	; 3
 d68:	00 97       	sbiw	r24, 0x00	; 0
 d6a:	19 f0       	breq	.+6      	; 0xd72 <free+0xd4>
 d6c:	fd 01       	movw	r30, r26
 d6e:	dc 01       	movw	r26, r24
 d70:	f7 cf       	rjmp	.-18     	; 0xd60 <free+0xc2>
 d72:	8d 91       	ld	r24, X+
 d74:	9c 91       	ld	r25, X
 d76:	11 97       	sbiw	r26, 0x01	; 1
 d78:	9d 01       	movw	r18, r26
 d7a:	2e 5f       	subi	r18, 0xFE	; 254
 d7c:	3f 4f       	sbci	r19, 0xFF	; 255
 d7e:	82 0f       	add	r24, r18
 d80:	93 1f       	adc	r25, r19
 d82:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <__brkval>
 d86:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <__brkval+0x1>
 d8a:	28 17       	cp	r18, r24
 d8c:	39 07       	cpc	r19, r25
 d8e:	69 f4       	brne	.+26     	; 0xdaa <free+0x10c>
 d90:	30 97       	sbiw	r30, 0x00	; 0
 d92:	29 f4       	brne	.+10     	; 0xd9e <free+0x100>
 d94:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__flp+0x1>
 d98:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <__flp>
 d9c:	02 c0       	rjmp	.+4      	; 0xda2 <free+0x104>
 d9e:	13 82       	std	Z+3, r1	; 0x03
 da0:	12 82       	std	Z+2, r1	; 0x02
 da2:	b0 93 9c 01 	sts	0x019C, r27	; 0x80019c <__brkval+0x1>
 da6:	a0 93 9b 01 	sts	0x019B, r26	; 0x80019b <__brkval>
 daa:	df 91       	pop	r29
 dac:	cf 91       	pop	r28
 dae:	08 95       	ret

00000db0 <strnlen_P>:
 db0:	fc 01       	movw	r30, r24
 db2:	05 90       	lpm	r0, Z+
 db4:	61 50       	subi	r22, 0x01	; 1
 db6:	70 40       	sbci	r23, 0x00	; 0
 db8:	01 10       	cpse	r0, r1
 dba:	d8 f7       	brcc	.-10     	; 0xdb2 <strnlen_P+0x2>
 dbc:	80 95       	com	r24
 dbe:	90 95       	com	r25
 dc0:	8e 0f       	add	r24, r30
 dc2:	9f 1f       	adc	r25, r31
 dc4:	08 95       	ret

00000dc6 <memset>:
 dc6:	dc 01       	movw	r26, r24
 dc8:	01 c0       	rjmp	.+2      	; 0xdcc <memset+0x6>
 dca:	6d 93       	st	X+, r22
 dcc:	41 50       	subi	r20, 0x01	; 1
 dce:	50 40       	sbci	r21, 0x00	; 0
 dd0:	e0 f7       	brcc	.-8      	; 0xdca <memset+0x4>
 dd2:	08 95       	ret

00000dd4 <strnlen>:
 dd4:	fc 01       	movw	r30, r24
 dd6:	61 50       	subi	r22, 0x01	; 1
 dd8:	70 40       	sbci	r23, 0x00	; 0
 dda:	01 90       	ld	r0, Z+
 ddc:	01 10       	cpse	r0, r1
 dde:	d8 f7       	brcc	.-10     	; 0xdd6 <strnlen+0x2>
 de0:	80 95       	com	r24
 de2:	90 95       	com	r25
 de4:	8e 0f       	add	r24, r30
 de6:	9f 1f       	adc	r25, r31
 de8:	08 95       	ret

00000dea <fputc>:
 dea:	0f 93       	push	r16
 dec:	1f 93       	push	r17
 dee:	cf 93       	push	r28
 df0:	df 93       	push	r29
 df2:	fb 01       	movw	r30, r22
 df4:	23 81       	ldd	r18, Z+3	; 0x03
 df6:	21 fd       	sbrc	r18, 1
 df8:	03 c0       	rjmp	.+6      	; 0xe00 <fputc+0x16>
 dfa:	8f ef       	ldi	r24, 0xFF	; 255
 dfc:	9f ef       	ldi	r25, 0xFF	; 255
 dfe:	2c c0       	rjmp	.+88     	; 0xe58 <fputc+0x6e>
 e00:	22 ff       	sbrs	r18, 2
 e02:	16 c0       	rjmp	.+44     	; 0xe30 <fputc+0x46>
 e04:	46 81       	ldd	r20, Z+6	; 0x06
 e06:	57 81       	ldd	r21, Z+7	; 0x07
 e08:	24 81       	ldd	r18, Z+4	; 0x04
 e0a:	35 81       	ldd	r19, Z+5	; 0x05
 e0c:	42 17       	cp	r20, r18
 e0e:	53 07       	cpc	r21, r19
 e10:	44 f4       	brge	.+16     	; 0xe22 <fputc+0x38>
 e12:	a0 81       	ld	r26, Z
 e14:	b1 81       	ldd	r27, Z+1	; 0x01
 e16:	9d 01       	movw	r18, r26
 e18:	2f 5f       	subi	r18, 0xFF	; 255
 e1a:	3f 4f       	sbci	r19, 0xFF	; 255
 e1c:	31 83       	std	Z+1, r19	; 0x01
 e1e:	20 83       	st	Z, r18
 e20:	8c 93       	st	X, r24
 e22:	26 81       	ldd	r18, Z+6	; 0x06
 e24:	37 81       	ldd	r19, Z+7	; 0x07
 e26:	2f 5f       	subi	r18, 0xFF	; 255
 e28:	3f 4f       	sbci	r19, 0xFF	; 255
 e2a:	37 83       	std	Z+7, r19	; 0x07
 e2c:	26 83       	std	Z+6, r18	; 0x06
 e2e:	14 c0       	rjmp	.+40     	; 0xe58 <fputc+0x6e>
 e30:	8b 01       	movw	r16, r22
 e32:	ec 01       	movw	r28, r24
 e34:	fb 01       	movw	r30, r22
 e36:	00 84       	ldd	r0, Z+8	; 0x08
 e38:	f1 85       	ldd	r31, Z+9	; 0x09
 e3a:	e0 2d       	mov	r30, r0
 e3c:	09 95       	icall
 e3e:	89 2b       	or	r24, r25
 e40:	e1 f6       	brne	.-72     	; 0xdfa <fputc+0x10>
 e42:	d8 01       	movw	r26, r16
 e44:	16 96       	adiw	r26, 0x06	; 6
 e46:	8d 91       	ld	r24, X+
 e48:	9c 91       	ld	r25, X
 e4a:	17 97       	sbiw	r26, 0x07	; 7
 e4c:	01 96       	adiw	r24, 0x01	; 1
 e4e:	17 96       	adiw	r26, 0x07	; 7
 e50:	9c 93       	st	X, r25
 e52:	8e 93       	st	-X, r24
 e54:	16 97       	sbiw	r26, 0x06	; 6
 e56:	ce 01       	movw	r24, r28
 e58:	df 91       	pop	r29
 e5a:	cf 91       	pop	r28
 e5c:	1f 91       	pop	r17
 e5e:	0f 91       	pop	r16
 e60:	08 95       	ret

00000e62 <__ultoa_invert>:
 e62:	fa 01       	movw	r30, r20
 e64:	aa 27       	eor	r26, r26
 e66:	28 30       	cpi	r18, 0x08	; 8
 e68:	51 f1       	breq	.+84     	; 0xebe <__ultoa_invert+0x5c>
 e6a:	20 31       	cpi	r18, 0x10	; 16
 e6c:	81 f1       	breq	.+96     	; 0xece <__ultoa_invert+0x6c>
 e6e:	e8 94       	clt
 e70:	6f 93       	push	r22
 e72:	6e 7f       	andi	r22, 0xFE	; 254
 e74:	6e 5f       	subi	r22, 0xFE	; 254
 e76:	7f 4f       	sbci	r23, 0xFF	; 255
 e78:	8f 4f       	sbci	r24, 0xFF	; 255
 e7a:	9f 4f       	sbci	r25, 0xFF	; 255
 e7c:	af 4f       	sbci	r26, 0xFF	; 255
 e7e:	b1 e0       	ldi	r27, 0x01	; 1
 e80:	3e d0       	rcall	.+124    	; 0xefe <__ultoa_invert+0x9c>
 e82:	b4 e0       	ldi	r27, 0x04	; 4
 e84:	3c d0       	rcall	.+120    	; 0xefe <__ultoa_invert+0x9c>
 e86:	67 0f       	add	r22, r23
 e88:	78 1f       	adc	r23, r24
 e8a:	89 1f       	adc	r24, r25
 e8c:	9a 1f       	adc	r25, r26
 e8e:	a1 1d       	adc	r26, r1
 e90:	68 0f       	add	r22, r24
 e92:	79 1f       	adc	r23, r25
 e94:	8a 1f       	adc	r24, r26
 e96:	91 1d       	adc	r25, r1
 e98:	a1 1d       	adc	r26, r1
 e9a:	6a 0f       	add	r22, r26
 e9c:	71 1d       	adc	r23, r1
 e9e:	81 1d       	adc	r24, r1
 ea0:	91 1d       	adc	r25, r1
 ea2:	a1 1d       	adc	r26, r1
 ea4:	20 d0       	rcall	.+64     	; 0xee6 <__ultoa_invert+0x84>
 ea6:	09 f4       	brne	.+2      	; 0xeaa <__ultoa_invert+0x48>
 ea8:	68 94       	set
 eaa:	3f 91       	pop	r19
 eac:	2a e0       	ldi	r18, 0x0A	; 10
 eae:	26 9f       	mul	r18, r22
 eb0:	11 24       	eor	r1, r1
 eb2:	30 19       	sub	r19, r0
 eb4:	30 5d       	subi	r19, 0xD0	; 208
 eb6:	31 93       	st	Z+, r19
 eb8:	de f6       	brtc	.-74     	; 0xe70 <__ultoa_invert+0xe>
 eba:	cf 01       	movw	r24, r30
 ebc:	08 95       	ret
 ebe:	46 2f       	mov	r20, r22
 ec0:	47 70       	andi	r20, 0x07	; 7
 ec2:	40 5d       	subi	r20, 0xD0	; 208
 ec4:	41 93       	st	Z+, r20
 ec6:	b3 e0       	ldi	r27, 0x03	; 3
 ec8:	0f d0       	rcall	.+30     	; 0xee8 <__ultoa_invert+0x86>
 eca:	c9 f7       	brne	.-14     	; 0xebe <__ultoa_invert+0x5c>
 ecc:	f6 cf       	rjmp	.-20     	; 0xeba <__ultoa_invert+0x58>
 ece:	46 2f       	mov	r20, r22
 ed0:	4f 70       	andi	r20, 0x0F	; 15
 ed2:	40 5d       	subi	r20, 0xD0	; 208
 ed4:	4a 33       	cpi	r20, 0x3A	; 58
 ed6:	18 f0       	brcs	.+6      	; 0xede <__ultoa_invert+0x7c>
 ed8:	49 5d       	subi	r20, 0xD9	; 217
 eda:	31 fd       	sbrc	r19, 1
 edc:	40 52       	subi	r20, 0x20	; 32
 ede:	41 93       	st	Z+, r20
 ee0:	02 d0       	rcall	.+4      	; 0xee6 <__ultoa_invert+0x84>
 ee2:	a9 f7       	brne	.-22     	; 0xece <__ultoa_invert+0x6c>
 ee4:	ea cf       	rjmp	.-44     	; 0xeba <__ultoa_invert+0x58>
 ee6:	b4 e0       	ldi	r27, 0x04	; 4
 ee8:	a6 95       	lsr	r26
 eea:	97 95       	ror	r25
 eec:	87 95       	ror	r24
 eee:	77 95       	ror	r23
 ef0:	67 95       	ror	r22
 ef2:	ba 95       	dec	r27
 ef4:	c9 f7       	brne	.-14     	; 0xee8 <__ultoa_invert+0x86>
 ef6:	00 97       	sbiw	r24, 0x00	; 0
 ef8:	61 05       	cpc	r22, r1
 efa:	71 05       	cpc	r23, r1
 efc:	08 95       	ret
 efe:	9b 01       	movw	r18, r22
 f00:	ac 01       	movw	r20, r24
 f02:	0a 2e       	mov	r0, r26
 f04:	06 94       	lsr	r0
 f06:	57 95       	ror	r21
 f08:	47 95       	ror	r20
 f0a:	37 95       	ror	r19
 f0c:	27 95       	ror	r18
 f0e:	ba 95       	dec	r27
 f10:	c9 f7       	brne	.-14     	; 0xf04 <__ultoa_invert+0xa2>
 f12:	62 0f       	add	r22, r18
 f14:	73 1f       	adc	r23, r19
 f16:	84 1f       	adc	r24, r20
 f18:	95 1f       	adc	r25, r21
 f1a:	a0 1d       	adc	r26, r0
 f1c:	08 95       	ret

00000f1e <__prologue_saves__>:
 f1e:	2f 92       	push	r2
 f20:	3f 92       	push	r3
 f22:	4f 92       	push	r4
 f24:	5f 92       	push	r5
 f26:	6f 92       	push	r6
 f28:	7f 92       	push	r7
 f2a:	8f 92       	push	r8
 f2c:	9f 92       	push	r9
 f2e:	af 92       	push	r10
 f30:	bf 92       	push	r11
 f32:	cf 92       	push	r12
 f34:	df 92       	push	r13
 f36:	ef 92       	push	r14
 f38:	ff 92       	push	r15
 f3a:	0f 93       	push	r16
 f3c:	1f 93       	push	r17
 f3e:	cf 93       	push	r28
 f40:	df 93       	push	r29
 f42:	cd b7       	in	r28, 0x3d	; 61
 f44:	de b7       	in	r29, 0x3e	; 62
 f46:	ca 1b       	sub	r28, r26
 f48:	db 0b       	sbc	r29, r27
 f4a:	0f b6       	in	r0, 0x3f	; 63
 f4c:	f8 94       	cli
 f4e:	de bf       	out	0x3e, r29	; 62
 f50:	0f be       	out	0x3f, r0	; 63
 f52:	cd bf       	out	0x3d, r28	; 61
 f54:	09 94       	ijmp

00000f56 <__epilogue_restores__>:
 f56:	2a 88       	ldd	r2, Y+18	; 0x12
 f58:	39 88       	ldd	r3, Y+17	; 0x11
 f5a:	48 88       	ldd	r4, Y+16	; 0x10
 f5c:	5f 84       	ldd	r5, Y+15	; 0x0f
 f5e:	6e 84       	ldd	r6, Y+14	; 0x0e
 f60:	7d 84       	ldd	r7, Y+13	; 0x0d
 f62:	8c 84       	ldd	r8, Y+12	; 0x0c
 f64:	9b 84       	ldd	r9, Y+11	; 0x0b
 f66:	aa 84       	ldd	r10, Y+10	; 0x0a
 f68:	b9 84       	ldd	r11, Y+9	; 0x09
 f6a:	c8 84       	ldd	r12, Y+8	; 0x08
 f6c:	df 80       	ldd	r13, Y+7	; 0x07
 f6e:	ee 80       	ldd	r14, Y+6	; 0x06
 f70:	fd 80       	ldd	r15, Y+5	; 0x05
 f72:	0c 81       	ldd	r16, Y+4	; 0x04
 f74:	1b 81       	ldd	r17, Y+3	; 0x03
 f76:	aa 81       	ldd	r26, Y+2	; 0x02
 f78:	b9 81       	ldd	r27, Y+1	; 0x01
 f7a:	ce 0f       	add	r28, r30
 f7c:	d1 1d       	adc	r29, r1
 f7e:	0f b6       	in	r0, 0x3f	; 63
 f80:	f8 94       	cli
 f82:	de bf       	out	0x3e, r29	; 62
 f84:	0f be       	out	0x3f, r0	; 63
 f86:	cd bf       	out	0x3d, r28	; 61
 f88:	ed 01       	movw	r28, r26
 f8a:	08 95       	ret

00000f8c <_exit>:
 f8c:	f8 94       	cli

00000f8e <__stop_program>:
 f8e:	ff cf       	rjmp	.-2      	; 0xf8e <__stop_program>
