
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00001174  00001208  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001174  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800196  00800196  0000129e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000129e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002183  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000122a  00000000  00000000  000036f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001356  00000000  00000000  0000491d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000548  00000000  00000000  00005c74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008c1  00000000  00000000  000061bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000100b  00000000  00000000  00006a7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  00007a88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_3>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e4 e7       	ldi	r30, 0x74	; 116
      84:	f1 e1       	ldi	r31, 0x11	; 17
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a6 39       	cpi	r26, 0x96	; 150
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	21 e0       	ldi	r18, 0x01	; 1
      94:	a6 e9       	ldi	r26, 0x96	; 150
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a5 3a       	cpi	r26, 0xA5	; 165
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 dd 01 	call	0x3ba	; 0x3ba <main>
      a6:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
      ae:	85 b7       	in	r24, 0x35	; 53
      b0:	80 68       	ori	r24, 0x80	; 128
      b2:	85 bf       	out	0x35, r24	; 53
      b4:	80 b7       	in	r24, 0x30	; 48
      b6:	80 62       	ori	r24, 0x20	; 32
      b8:	80 bf       	out	0x30, r24	; 48
      ba:	30 98       	cbi	0x06, 0	; 6
      bc:	80 e0       	ldi	r24, 0x00	; 0
      be:	90 e0       	ldi	r25, 0x00	; 0
      c0:	08 95       	ret

000000c2 <adc_clock_signal>:
      c2:	b8 9a       	sbi	0x17, 0	; 23
      c4:	83 b7       	in	r24, 0x33	; 51
      c6:	88 60       	ori	r24, 0x08	; 8
      c8:	83 bf       	out	0x33, r24	; 51
      ca:	83 b7       	in	r24, 0x33	; 51
      cc:	8f 7b       	andi	r24, 0xBF	; 191
      ce:	83 bf       	out	0x33, r24	; 51
      d0:	83 b7       	in	r24, 0x33	; 51
      d2:	80 61       	ori	r24, 0x10	; 16
      d4:	83 bf       	out	0x33, r24	; 51
      d6:	83 b7       	in	r24, 0x33	; 51
      d8:	81 60       	ori	r24, 0x01	; 1
      da:	83 bf       	out	0x33, r24	; 51
      dc:	8a e0       	ldi	r24, 0x0A	; 10
      de:	81 bf       	out	0x31, r24	; 49
      e0:	08 95       	ret

000000e2 <adc_read>:
      e2:	80 68       	ori	r24, 0x80	; 128
      e4:	e0 e0       	ldi	r30, 0x00	; 0
      e6:	f4 e1       	ldi	r31, 0x14	; 20
      e8:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ea:	84 ea       	ldi	r24, 0xA4	; 164
      ec:	8a 95       	dec	r24
      ee:	f1 f7       	brne	.-4      	; 0xec <adc_read+0xa>
      f0:	80 81       	ld	r24, Z
      f2:	08 95       	ret

000000f4 <can_init>:
      f4:	0e 94 89 02 	call	0x512	; 0x512 <mcp2515_driver_init>
      f8:	f8 94       	cli
      fa:	38 9a       	sbi	0x07, 0	; 7
      fc:	86 b7       	in	r24, 0x36	; 54
      fe:	81 60       	ori	r24, 0x01	; 1
     100:	86 bf       	out	0x36, r24	; 54
     102:	8b b7       	in	r24, 0x3b	; 59
     104:	80 62       	ori	r24, 0x20	; 32
     106:	8b bf       	out	0x3b, r24	; 59
     108:	43 e0       	ldi	r20, 0x03	; 3
     10a:	6f ef       	ldi	r22, 0xFF	; 255
     10c:	8b e2       	ldi	r24, 0x2B	; 43
     10e:	0e 94 67 02 	call	0x4ce	; 0x4ce <mcp2515_bit_modify>
     112:	40 e0       	ldi	r20, 0x00	; 0
     114:	6f ef       	ldi	r22, 0xFF	; 255
     116:	8c e2       	ldi	r24, 0x2C	; 44
     118:	0e 94 67 02 	call	0x4ce	; 0x4ce <mcp2515_bit_modify>
     11c:	30 98       	cbi	0x06, 0	; 6
     11e:	78 94       	sei
     120:	8e e0       	ldi	r24, 0x0E	; 14
     122:	0e 94 36 02 	call	0x46c	; 0x46c <mcp2515_read>
     126:	80 7e       	andi	r24, 0xE0	; 224
     128:	80 34       	cpi	r24, 0x40	; 64
     12a:	41 f0       	breq	.+16     	; 0x13c <can_init+0x48>
     12c:	8a e0       	ldi	r24, 0x0A	; 10
     12e:	91 e0       	ldi	r25, 0x01	; 1
     130:	9f 93       	push	r25
     132:	8f 93       	push	r24
     134:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
     138:	0f 90       	pop	r0
     13a:	0f 90       	pop	r0
     13c:	08 95       	ret

0000013e <can_transmission_completed>:
     13e:	80 e3       	ldi	r24, 0x30	; 48
     140:	0e 94 36 02 	call	0x46c	; 0x46c <mcp2515_read>
     144:	83 fb       	bst	r24, 3
     146:	88 27       	eor	r24, r24
     148:	80 f9       	bld	r24, 0
     14a:	91 e0       	ldi	r25, 0x01	; 1
     14c:	89 27       	eor	r24, r25
     14e:	08 95       	ret

00000150 <can_send>:
     150:	cf 92       	push	r12
     152:	df 92       	push	r13
     154:	ef 92       	push	r14
     156:	ff 92       	push	r15
     158:	1f 93       	push	r17
     15a:	cf 93       	push	r28
     15c:	df 93       	push	r29
     15e:	6c 01       	movw	r12, r24
     160:	0e 94 9f 00 	call	0x13e	; 0x13e <can_transmission_completed>
     164:	88 23       	and	r24, r24
     166:	91 f1       	breq	.+100    	; 0x1cc <can_send+0x7c>
     168:	f6 01       	movw	r30, r12
     16a:	80 81       	ld	r24, Z
     16c:	91 81       	ldd	r25, Z+1	; 0x01
     16e:	96 95       	lsr	r25
     170:	87 95       	ror	r24
     172:	96 95       	lsr	r25
     174:	87 95       	ror	r24
     176:	96 95       	lsr	r25
     178:	87 95       	ror	r24
     17a:	61 e4       	ldi	r22, 0x41	; 65
     17c:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     180:	f6 01       	movw	r30, r12
     182:	80 81       	ld	r24, Z
     184:	62 e4       	ldi	r22, 0x42	; 66
     186:	82 95       	swap	r24
     188:	88 0f       	add	r24, r24
     18a:	80 7e       	andi	r24, 0xE0	; 224
     18c:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     190:	65 e4       	ldi	r22, 0x45	; 69
     192:	f6 01       	movw	r30, r12
     194:	82 81       	ldd	r24, Z+2	; 0x02
     196:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     19a:	f6 01       	movw	r30, r12
     19c:	82 81       	ldd	r24, Z+2	; 0x02
     19e:	88 23       	and	r24, r24
     1a0:	a9 f0       	breq	.+42     	; 0x1cc <can_send+0x7c>
     1a2:	76 01       	movw	r14, r12
     1a4:	f3 e0       	ldi	r31, 0x03	; 3
     1a6:	ef 0e       	add	r14, r31
     1a8:	f1 1c       	adc	r15, r1
     1aa:	16 e4       	ldi	r17, 0x46	; 70
     1ac:	c0 e0       	ldi	r28, 0x00	; 0
     1ae:	d0 e0       	ldi	r29, 0x00	; 0
     1b0:	61 2f       	mov	r22, r17
     1b2:	f7 01       	movw	r30, r14
     1b4:	81 91       	ld	r24, Z+
     1b6:	7f 01       	movw	r14, r30
     1b8:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     1bc:	21 96       	adiw	r28, 0x01	; 1
     1be:	1f 5f       	subi	r17, 0xFF	; 255
     1c0:	f6 01       	movw	r30, r12
     1c2:	82 81       	ldd	r24, Z+2	; 0x02
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	c8 17       	cp	r28, r24
     1c8:	d9 07       	cpc	r29, r25
     1ca:	94 f3       	brlt	.-28     	; 0x1b0 <can_send+0x60>
     1cc:	82 e8       	ldi	r24, 0x82	; 130
     1ce:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <mcp2515_request_to_send>
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	1f 91       	pop	r17
     1d8:	ff 90       	pop	r15
     1da:	ef 90       	pop	r14
     1dc:	df 90       	pop	r13
     1de:	cf 90       	pop	r12
     1e0:	08 95       	ret

000001e2 <can_interrupt>:
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	61 e0       	ldi	r22, 0x01	; 1
     1e6:	8c e2       	ldi	r24, 0x2C	; 44
     1e8:	0e 94 67 02 	call	0x4ce	; 0x4ce <mcp2515_bit_modify>
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <__data_end>
     1f2:	08 95       	ret

000001f4 <__vector_3>:
     1f4:	1f 92       	push	r1
     1f6:	0f 92       	push	r0
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	0f 92       	push	r0
     1fc:	11 24       	eor	r1, r1
     1fe:	2f 93       	push	r18
     200:	3f 93       	push	r19
     202:	4f 93       	push	r20
     204:	5f 93       	push	r21
     206:	6f 93       	push	r22
     208:	7f 93       	push	r23
     20a:	8f 93       	push	r24
     20c:	9f 93       	push	r25
     20e:	af 93       	push	r26
     210:	bf 93       	push	r27
     212:	ef 93       	push	r30
     214:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     216:	8f ef       	ldi	r24, 0xFF	; 255
     218:	9f e2       	ldi	r25, 0x2F	; 47
     21a:	01 97       	sbiw	r24, 0x01	; 1
     21c:	f1 f7       	brne	.-4      	; 0x21a <__vector_3+0x26>
     21e:	00 c0       	rjmp	.+0      	; 0x220 <__vector_3+0x2c>
     220:	00 00       	nop
     222:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <can_interrupt>
     226:	ff 91       	pop	r31
     228:	ef 91       	pop	r30
     22a:	bf 91       	pop	r27
     22c:	af 91       	pop	r26
     22e:	9f 91       	pop	r25
     230:	8f 91       	pop	r24
     232:	7f 91       	pop	r23
     234:	6f 91       	pop	r22
     236:	5f 91       	pop	r21
     238:	4f 91       	pop	r20
     23a:	3f 91       	pop	r19
     23c:	2f 91       	pop	r18
     23e:	0f 90       	pop	r0
     240:	0f be       	out	0x3f, r0	; 63
     242:	0f 90       	pop	r0
     244:	1f 90       	pop	r1
     246:	18 95       	reti

00000248 <joystick_button>:
	joystick_calibration();

}

int joystick_button(int button){
	switch (button){
     248:	89 2b       	or	r24, r25
     24a:	29 f4       	brne	.+10     	; 0x256 <joystick_button+0xe>
		// Left touch button
		case 0: 
			if (test_bit(PINB, PINB1)){
     24c:	86 b3       	in	r24, 0x16	; 22
				return 1;
     24e:	86 95       	lsr	r24
     250:	81 70       	andi	r24, 0x01	; 1
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	08 95       	ret
				break;
			}
		default:
			break;*/
	}
	return 0;
     256:	80 e0       	ldi	r24, 0x00	; 0
     258:	90 e0       	ldi	r25, 0x00	; 0
}
     25a:	08 95       	ret

0000025c <joystick_pos>:



joystick_position joystick_pos(void)
{	
     25c:	cf 93       	push	r28
	joystick_position position = {0,0};
	uint8_t x,y;
	
	x = adc_read(0);
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
     266:	c8 2f       	mov	r28, r24
	y = adc_read(1);
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
     270:	38 2f       	mov	r19, r24
	
	//position.position_x = (x-x_mid)*200/255;
	//position.position_y = (y-y_mid)*200/255;
	
	//printf("(%d, %d) \n \r", position.position_x, position.position_y);
	int8_t diff_x = x - x_mid;
     272:	20 91 98 01 	lds	r18, 0x0198	; 0x800198 <x_mid>
	
	
	if(x > x_mid) {
     276:	2c 17       	cp	r18, r28
     278:	a0 f4       	brcc	.+40     	; 0x2a2 <joystick_pos+0x46>
		position.position_x = 100*(x-x_mid)/(0xFF - x_mid);
     27a:	e2 2f       	mov	r30, r18
     27c:	f0 e0       	ldi	r31, 0x00	; 0
     27e:	4c 2f       	mov	r20, r28
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	4e 1b       	sub	r20, r30
     284:	5f 0b       	sbc	r21, r31
     286:	64 e6       	ldi	r22, 0x64	; 100
     288:	64 9f       	mul	r22, r20
     28a:	c0 01       	movw	r24, r0
     28c:	65 9f       	mul	r22, r21
     28e:	90 0d       	add	r25, r0
     290:	11 24       	eor	r1, r1
     292:	6f ef       	ldi	r22, 0xFF	; 255
     294:	70 e0       	ldi	r23, 0x00	; 0
     296:	6e 1b       	sub	r22, r30
     298:	7f 0b       	sbc	r23, r31
     29a:	0e 94 23 04 	call	0x846	; 0x846 <__divmodhi4>
     29e:	46 2f       	mov	r20, r22
     2a0:	01 c0       	rjmp	.+2      	; 0x2a4 <joystick_pos+0x48>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
     2a2:	40 e0       	ldi	r20, 0x00	; 0
	
	if(x > x_mid) {
		position.position_x = 100*(x-x_mid)/(0xFF - x_mid);
	} 
	
	if (x < x_mid) {
     2a4:	c2 17       	cp	r28, r18
     2a6:	78 f4       	brcc	.+30     	; 0x2c6 <joystick_pos+0x6a>
		position.position_x = 100*(x-x_mid)/(x_mid-0);
     2a8:	62 2f       	mov	r22, r18
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	4c 2f       	mov	r20, r28
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	46 1b       	sub	r20, r22
     2b2:	57 0b       	sbc	r21, r23
     2b4:	e4 e6       	ldi	r30, 0x64	; 100
     2b6:	e4 9f       	mul	r30, r20
     2b8:	c0 01       	movw	r24, r0
     2ba:	e5 9f       	mul	r30, r21
     2bc:	90 0d       	add	r25, r0
     2be:	11 24       	eor	r1, r1
     2c0:	0e 94 23 04 	call	0x846	; 0x846 <__divmodhi4>
     2c4:	46 2f       	mov	r20, r22
	} 
		
	if (x == x_mid) {
     2c6:	c2 13       	cpse	r28, r18
     2c8:	01 c0       	rjmp	.+2      	; 0x2cc <joystick_pos+0x70>
		position.position_x = 0;
     2ca:	40 e0       	ldi	r20, 0x00	; 0
	}
	
	//int8_t y_diff = y-y_mid;
	
	//Calculate position y percentage
	if(y > y_mid) {
     2cc:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <y_mid>
     2d0:	23 17       	cp	r18, r19
     2d2:	a0 f4       	brcc	.+40     	; 0x2fc <joystick_pos+0xa0>
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
     2d4:	e2 2f       	mov	r30, r18
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	63 2f       	mov	r22, r19
     2da:	70 e0       	ldi	r23, 0x00	; 0
     2dc:	6e 1b       	sub	r22, r30
     2de:	7f 0b       	sbc	r23, r31
     2e0:	54 e6       	ldi	r21, 0x64	; 100
     2e2:	56 9f       	mul	r21, r22
     2e4:	c0 01       	movw	r24, r0
     2e6:	57 9f       	mul	r21, r23
     2e8:	90 0d       	add	r25, r0
     2ea:	11 24       	eor	r1, r1
     2ec:	6f ef       	ldi	r22, 0xFF	; 255
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	6e 1b       	sub	r22, r30
     2f2:	7f 0b       	sbc	r23, r31
     2f4:	0e 94 23 04 	call	0x846	; 0x846 <__divmodhi4>
     2f8:	76 2f       	mov	r23, r22
     2fa:	01 c0       	rjmp	.+2      	; 0x2fe <joystick_pos+0xa2>



joystick_position joystick_pos(void)
{	
	joystick_position position = {0,0};
     2fc:	70 e0       	ldi	r23, 0x00	; 0
	
	//Calculate position y percentage
	if(y > y_mid) {
		position.position_y = 100*(y-y_mid)/(255 - y_mid);
	}
	if (y < y_mid) {
     2fe:	32 17       	cp	r19, r18
     300:	78 f4       	brcc	.+30     	; 0x320 <joystick_pos+0xc4>
		position.position_y = 100*(y-y_mid)/y_mid;
     302:	62 2f       	mov	r22, r18
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	e3 2f       	mov	r30, r19
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	e6 1b       	sub	r30, r22
     30c:	f7 0b       	sbc	r31, r23
     30e:	54 e6       	ldi	r21, 0x64	; 100
     310:	5e 9f       	mul	r21, r30
     312:	c0 01       	movw	r24, r0
     314:	5f 9f       	mul	r21, r31
     316:	90 0d       	add	r25, r0
     318:	11 24       	eor	r1, r1
     31a:	0e 94 23 04 	call	0x846	; 0x846 <__divmodhi4>
     31e:	76 2f       	mov	r23, r22
	} if (y == y_mid) {
     320:	32 13       	cpse	r19, r18
     322:	01 c0       	rjmp	.+2      	; 0x326 <joystick_pos+0xca>
		position.position_y = 0;
     324:	70 e0       	ldi	r23, 0x00	; 0
	
	
	//printf("%d \n \r", position.position_x);

	return position;
}
     326:	64 2f       	mov	r22, r20
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	cf 91       	pop	r28
     32c:	08 95       	ret

0000032e <joystick_direction>:
	
	int deadzone = 3;
	
	joystick_position position;
	
	position = joystick_pos();
     32e:	0e 94 2e 01 	call	0x25c	; 0x25c <joystick_pos>
     332:	26 2f       	mov	r18, r22
     334:	97 2f       	mov	r25, r23
	
	if (position.position_x > deadzone){
     336:	64 30       	cpi	r22, 0x04	; 4
     338:	0c f0       	brlt	.+2      	; 0x33c <joystick_direction+0xe>
		position.dir = 'R';
     33a:	82 e5       	ldi	r24, 0x52	; 82
	}
	
	if (position.position_x < -deadzone){
     33c:	2d 3f       	cpi	r18, 0xFD	; 253
     33e:	0c f4       	brge	.+2      	; 0x342 <joystick_direction+0x14>
		position.dir = 'L';
     340:	8c e4       	ldi	r24, 0x4C	; 76
	}
	
	if (position.position_y > deadzone){
     342:	94 30       	cpi	r25, 0x04	; 4
     344:	0c f0       	brlt	.+2      	; 0x348 <joystick_direction+0x1a>
		position.dir = 'U';
     346:	85 e5       	ldi	r24, 0x55	; 85
	}
	if (position.position_y <  -deadzone){
     348:	9d 3f       	cpi	r25, 0xFD	; 253
     34a:	0c f4       	brge	.+2      	; 0x34e <joystick_direction+0x20>
		position.dir = 'D';
     34c:	84 e4       	ldi	r24, 0x44	; 68
	}
	if (abs(position.position_x) <= deadzone && abs(position.position_y) <= deadzone){
     34e:	26 2f       	mov	r18, r22
     350:	06 2e       	mov	r0, r22
     352:	00 0c       	add	r0, r0
     354:	33 0b       	sbc	r19, r19
     356:	33 23       	and	r19, r19
     358:	1c f4       	brge	.+6      	; 0x360 <joystick_direction+0x32>
     35a:	31 95       	neg	r19
     35c:	21 95       	neg	r18
     35e:	31 09       	sbc	r19, r1
     360:	24 30       	cpi	r18, 0x04	; 4
     362:	31 05       	cpc	r19, r1
     364:	6c f4       	brge	.+26     	; 0x380 <joystick_direction+0x52>
     366:	27 2f       	mov	r18, r23
     368:	07 2e       	mov	r0, r23
     36a:	00 0c       	add	r0, r0
     36c:	33 0b       	sbc	r19, r19
     36e:	33 23       	and	r19, r19
     370:	1c f4       	brge	.+6      	; 0x378 <joystick_direction+0x4a>
     372:	31 95       	neg	r19
     374:	21 95       	neg	r18
     376:	31 09       	sbc	r19, r1
     378:	24 30       	cpi	r18, 0x04	; 4
     37a:	31 05       	cpc	r19, r1
     37c:	0c f4       	brge	.+2      	; 0x380 <joystick_direction+0x52>
		position.dir = 'N';
     37e:	8e e4       	ldi	r24, 0x4E	; 78
	}
	return position;
	
};
     380:	08 95       	ret

00000382 <joystick_calibration>:

void joystick_calibration(void){
     382:	cf 93       	push	r28
	
	uint8_t x,y;
	
	x = adc_read(0);
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
     38c:	c8 2f       	mov	r28, r24
	y = adc_read(1);
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
     396:	ec ec       	ldi	r30, 0xCC	; 204
     398:	f4 e0       	ldi	r31, 0x04	; 4
     39a:	31 97       	sbiw	r30, 0x01	; 1
     39c:	f1 f7       	brne	.-4      	; 0x39a <joystick_calibration+0x18>
     39e:	00 c0       	rjmp	.+0      	; 0x3a0 <joystick_calibration+0x1e>
     3a0:	00 00       	nop
	_delay_ms(1);
	x_mid = x;
     3a2:	c0 93 98 01 	sts	0x0198, r28	; 0x800198 <x_mid>
	y_mid = y;
     3a6:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <y_mid>
}
     3aa:	cf 91       	pop	r28
     3ac:	08 95       	ret

000003ae <joystick_init>:
	
	// Initialize external units
	//adc_init();
	
	// Set PINB1, PINB2 and PINB3 as inputs
	DDRB &= ~(1<<PINB1) & ~(1<<PINB2) & ~(1<<PINB3);
     3ae:	87 b3       	in	r24, 0x17	; 23
     3b0:	81 7f       	andi	r24, 0xF1	; 241
     3b2:	87 bb       	out	0x17, r24	; 23
	
	// Calibrate joystick
	joystick_calibration();
     3b4:	0e 94 c1 01 	call	0x382	; 0x382 <joystick_calibration>
     3b8:	08 95       	ret

000003ba <main>:
#include "mcp2515.h"
#include "can.h"
#include "mcp2515_driver.h"


void main(void){
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	2b 97       	sbiw	r28, 0x0b	; 11
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61

	joystick_position j_position;
	slider_position s_position;
	can_message message, message2;
	adc_init();
     3ce:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	USART_init(MYUBRR);
     3d2:	8f e1       	ldi	r24, 0x1F	; 31
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	0e 94 16 04 	call	0x82c	; 0x82c <USART_init>
	
	adc_clock_signal();
     3da:	0e 94 61 00 	call	0xc2	; 0xc2 <adc_clock_signal>
	joystick_init();
     3de:	0e 94 d7 01 	call	0x3ae	; 0x3ae <joystick_init>
	SRAM_init();
     3e2:	0e 94 06 04 	call	0x80c	; 0x80c <SRAM_init>
	can_init();
     3e6:	0e 94 7a 00 	call	0xf4	; 0xf4 <can_init>

	oled_init();
     3ea:	0e 94 3b 03 	call	0x676	; 0x676 <oled_init>
	oled_reset();
     3ee:	0e 94 2f 03 	call	0x65e	; 0x65e <oled_reset>
	oled_pos(0,0);
     3f2:	60 e0       	ldi	r22, 0x00	; 0
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	0e 94 da 03 	call	0x7b4	; 0x7b4 <oled_pos>
	
	message.id = 0;
     3fa:	1a 82       	std	Y+2, r1	; 0x02
     3fc:	19 82       	std	Y+1, r1	; 0x01
	message.length = 2;	
     3fe:	82 e0       	ldi	r24, 0x02	; 2
     400:	8b 83       	std	Y+3, r24	; 0x03
		
		int button_l = 0;
		int button_r = 0;	
		int button_joy = 0;
		
		j_position = joystick_pos();
     402:	0e 94 2e 01 	call	0x25c	; 0x25c <joystick_pos>
		//printf("Position 1: %d\n\r", j_position.position_x);
		j_position = joystick_direction();
     406:	0e 94 97 01 	call	0x32e	; 0x32e <joystick_direction>
		
		// Slider position
		//printf("(Left slider: %d, Right slider: %d) \n \r", s_position.position_left, s_position.position_right);
		
		//Buttons
		if (joystick_button(0)){
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_l = 1;
		}
		if (joystick_button(0)==0){
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_l = 0;
		}
		if (joystick_button(1)){
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_r = 1;
		}
		if (joystick_button(1)==0){
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_r = 0;
		}
		if (joystick_button(2)){
     42a:	82 e0       	ldi	r24, 0x02	; 2
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
			button_joy = 0;
		}
		if (joystick_button(2)==0){
     432:	82 e0       	ldi	r24, 0x02	; 2
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 24 01 	call	0x248	; 0x248 <joystick_button>
     43a:	87 ea       	ldi	r24, 0xA7	; 167
     43c:	91 e6       	ldi	r25, 0x61	; 97
     43e:	01 97       	sbiw	r24, 0x01	; 1
     440:	f1 f7       	brne	.-4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     442:	00 c0       	rjmp	.+0      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     444:	00 00       	nop
		*/
		
		// Assignment 6
		

		message.data[0] = adc_read(0);
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
     44e:	8c 83       	std	Y+4, r24	; 0x04
		message.data[1] = adc_read(1);
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
     458:	8d 83       	std	Y+5, r24	; 0x05
		
		
		can_send(&message);
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	0e 94 a8 00 	call	0x150	; 0x150 <can_send>
     462:	cf cf       	rjmp	.-98     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>

00000464 <slave_select>:
     464:	c4 98       	cbi	0x18, 4	; 24
     466:	08 95       	ret

00000468 <slave_deselect>:
     468:	c4 9a       	sbi	0x18, 4	; 24
     46a:	08 95       	ret

0000046c <mcp2515_read>:
     46c:	cf 93       	push	r28
     46e:	c8 2f       	mov	r28, r24
     470:	0e 94 32 02 	call	0x464	; 0x464 <slave_select>
     474:	83 e0       	ldi	r24, 0x03	; 3
     476:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     47a:	8c 2f       	mov	r24, r28
     47c:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     480:	0e 94 ff 03 	call	0x7fe	; 0x7fe <spi_receive>
     484:	c8 2f       	mov	r28, r24
     486:	0e 94 34 02 	call	0x468	; 0x468 <slave_deselect>
     48a:	8c 2f       	mov	r24, r28
     48c:	cf 91       	pop	r28
     48e:	08 95       	ret

00000490 <mcp2515_write>:
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	c8 2f       	mov	r28, r24
     496:	d6 2f       	mov	r29, r22
     498:	0e 94 32 02 	call	0x464	; 0x464 <slave_select>
     49c:	82 e0       	ldi	r24, 0x02	; 2
     49e:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4a2:	8d 2f       	mov	r24, r29
     4a4:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4a8:	8c 2f       	mov	r24, r28
     4aa:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4ae:	0e 94 34 02 	call	0x468	; 0x468 <slave_deselect>
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	08 95       	ret

000004b8 <mcp2515_request_to_send>:
     4b8:	cf 93       	push	r28
     4ba:	c8 2f       	mov	r28, r24
     4bc:	0e 94 32 02 	call	0x464	; 0x464 <slave_select>
     4c0:	8c 2f       	mov	r24, r28
     4c2:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4c6:	0e 94 34 02 	call	0x468	; 0x468 <slave_deselect>
     4ca:	cf 91       	pop	r28
     4cc:	08 95       	ret

000004ce <mcp2515_bit_modify>:
     4ce:	1f 93       	push	r17
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	18 2f       	mov	r17, r24
     4d6:	d6 2f       	mov	r29, r22
     4d8:	c4 2f       	mov	r28, r20
     4da:	0e 94 32 02 	call	0x464	; 0x464 <slave_select>
     4de:	85 e0       	ldi	r24, 0x05	; 5
     4e0:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4e4:	81 2f       	mov	r24, r17
     4e6:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4ea:	8d 2f       	mov	r24, r29
     4ec:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4f0:	8c 2f       	mov	r24, r28
     4f2:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     4f6:	0e 94 34 02 	call	0x468	; 0x468 <slave_deselect>
     4fa:	df 91       	pop	r29
     4fc:	cf 91       	pop	r28
     4fe:	1f 91       	pop	r17
     500:	08 95       	ret

00000502 <mcp2515_reset>:
     502:	0e 94 32 02 	call	0x464	; 0x464 <slave_select>
     506:	80 ec       	ldi	r24, 0xC0	; 192
     508:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     50c:	0e 94 34 02 	call	0x468	; 0x468 <slave_deselect>
     510:	08 95       	ret

00000512 <mcp2515_driver_init>:
     512:	cf 93       	push	r28
     514:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <spi_init>
     518:	0e 94 81 02 	call	0x502	; 0x502 <mcp2515_reset>
     51c:	60 e6       	ldi	r22, 0x60	; 96
     51e:	80 e6       	ldi	r24, 0x60	; 96
     520:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     524:	60 e7       	ldi	r22, 0x70	; 112
     526:	80 e6       	ldi	r24, 0x60	; 96
     528:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     52c:	8e e0       	ldi	r24, 0x0E	; 14
     52e:	0e 94 36 02 	call	0x46c	; 0x46c <mcp2515_read>
     532:	c8 2f       	mov	r28, r24
     534:	68 e2       	ldi	r22, 0x28	; 40
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     53c:	69 e2       	ldi	r22, 0x29	; 41
     53e:	85 eb       	ldi	r24, 0xB5	; 181
     540:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     544:	6a e2       	ldi	r22, 0x2A	; 42
     546:	83 e4       	ldi	r24, 0x43	; 67
     548:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     54c:	c0 7e       	andi	r28, 0xE0	; 224
     54e:	c0 38       	cpi	r28, 0x80	; 128
     550:	51 f0       	breq	.+20     	; 0x566 <mcp2515_driver_init+0x54>
     552:	8c e5       	ldi	r24, 0x5C	; 92
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	9f 93       	push	r25
     558:	8f 93       	push	r24
     55a:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
     55e:	0f 90       	pop	r0
     560:	0f 90       	pop	r0
     562:	81 e0       	ldi	r24, 0x01	; 1
     564:	2b c0       	rjmp	.+86     	; 0x5bc <mcp2515_driver_init+0xaa>
     566:	2f e3       	ldi	r18, 0x3F	; 63
     568:	8d e0       	ldi	r24, 0x0D	; 13
     56a:	93 e0       	ldi	r25, 0x03	; 3
     56c:	21 50       	subi	r18, 0x01	; 1
     56e:	80 40       	sbci	r24, 0x00	; 0
     570:	90 40       	sbci	r25, 0x00	; 0
     572:	e1 f7       	brne	.-8      	; 0x56c <mcp2515_driver_init+0x5a>
     574:	00 c0       	rjmp	.+0      	; 0x576 <mcp2515_driver_init+0x64>
     576:	00 00       	nop
     578:	6f e0       	ldi	r22, 0x0F	; 15
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_write>
     580:	8e e0       	ldi	r24, 0x0E	; 14
     582:	0e 94 36 02 	call	0x46c	; 0x46c <mcp2515_read>
     586:	c8 2f       	mov	r28, r24
     588:	1f 92       	push	r1
     58a:	8f 93       	push	r24
     58c:	80 e9       	ldi	r24, 0x90	; 144
     58e:	91 e0       	ldi	r25, 0x01	; 1
     590:	9f 93       	push	r25
     592:	8f 93       	push	r24
     594:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
     598:	c0 7e       	andi	r28, 0xE0	; 224
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	c0 34       	cpi	r28, 0x40	; 64
     5a4:	51 f0       	breq	.+20     	; 0x5ba <mcp2515_driver_init+0xa8>
     5a6:	8a e0       	ldi	r24, 0x0A	; 10
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	9f 93       	push	r25
     5ac:	8f 93       	push	r24
     5ae:	0e 94 96 04 	call	0x92c	; 0x92c <printf>
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	01 c0       	rjmp	.+2      	; 0x5bc <mcp2515_driver_init+0xaa>
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	cf 91       	pop	r28
     5be:	08 95       	ret

000005c0 <oled_home>:
     5c0:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <page>
     5c4:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <col>
     5c8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     5cc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     5d0:	81 e2       	ldi	r24, 0x21	; 33
     5d2:	80 83       	st	Z, r24
     5d4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     5d8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     5dc:	10 82       	st	Z, r1
     5de:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     5e2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     5e6:	8f e7       	ldi	r24, 0x7F	; 127
     5e8:	80 83       	st	Z, r24
     5ea:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     5ee:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     5f2:	82 e2       	ldi	r24, 0x22	; 34
     5f4:	80 83       	st	Z, r24
     5f6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     5fa:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     5fe:	10 82       	st	Z, r1
     600:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     604:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     608:	87 e0       	ldi	r24, 0x07	; 7
     60a:	80 83       	st	Z, r24
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	08 95       	ret

00000612 <oled_goto_line>:
     612:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <page>
     616:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     61a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     61e:	10 82       	st	Z, r1
     620:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     624:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     628:	90 e1       	ldi	r25, 0x10	; 16
     62a:	90 83       	st	Z, r25
     62c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     630:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     634:	80 55       	subi	r24, 0x50	; 80
     636:	80 83       	st	Z, r24
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	08 95       	ret

0000063e <oled_clear_line>:
     63e:	0e 94 09 03 	call	0x612	; 0x612 <oled_goto_line>
     642:	80 e8       	ldi	r24, 0x80	; 128
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_data>
     64a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_data+0x1>
     64e:	10 82       	st	Z, r1
     650:	01 97       	sbiw	r24, 0x01	; 1
     652:	c9 f7       	brne	.-14     	; 0x646 <oled_clear_line+0x8>
     654:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <oled_home>
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	08 95       	ret

0000065e <oled_reset>:
     65e:	cf 93       	push	r28
     660:	c0 e0       	ldi	r28, 0x00	; 0
     662:	8c 2f       	mov	r24, r28
     664:	0e 94 1f 03 	call	0x63e	; 0x63e <oled_clear_line>
     668:	cf 5f       	subi	r28, 0xFF	; 255
     66a:	c8 30       	cpi	r28, 0x08	; 8
     66c:	d1 f7       	brne	.-12     	; 0x662 <oled_reset+0x4>
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <oled_init>:
     676:	85 b7       	in	r24, 0x35	; 53
     678:	80 68       	ori	r24, 0x80	; 128
     67a:	85 bf       	out	0x35, r24	; 53
     67c:	80 b7       	in	r24, 0x30	; 48
     67e:	80 62       	ori	r24, 0x20	; 32
     680:	80 bf       	out	0x30, r24	; 48
     682:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     686:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     68a:	8e ea       	ldi	r24, 0xAE	; 174
     68c:	80 83       	st	Z, r24
     68e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     692:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     696:	81 ea       	ldi	r24, 0xA1	; 161
     698:	80 83       	st	Z, r24
     69a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     69e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6a2:	8a ed       	ldi	r24, 0xDA	; 218
     6a4:	80 83       	st	Z, r24
     6a6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6aa:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6ae:	82 e1       	ldi	r24, 0x12	; 18
     6b0:	80 83       	st	Z, r24
     6b2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6b6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6ba:	88 ec       	ldi	r24, 0xC8	; 200
     6bc:	80 83       	st	Z, r24
     6be:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6c2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6c6:	88 ea       	ldi	r24, 0xA8	; 168
     6c8:	80 83       	st	Z, r24
     6ca:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6ce:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6d2:	8f e3       	ldi	r24, 0x3F	; 63
     6d4:	80 83       	st	Z, r24
     6d6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6da:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6de:	85 ed       	ldi	r24, 0xD5	; 213
     6e0:	80 83       	st	Z, r24
     6e2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6e6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6ea:	80 e8       	ldi	r24, 0x80	; 128
     6ec:	80 83       	st	Z, r24
     6ee:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6f2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     6f6:	81 e8       	ldi	r24, 0x81	; 129
     6f8:	80 83       	st	Z, r24
     6fa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     6fe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     702:	80 e5       	ldi	r24, 0x50	; 80
     704:	80 83       	st	Z, r24
     706:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     70a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     70e:	89 ed       	ldi	r24, 0xD9	; 217
     710:	80 83       	st	Z, r24
     712:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     716:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     71a:	81 e2       	ldi	r24, 0x21	; 33
     71c:	80 83       	st	Z, r24
     71e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     722:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     726:	80 e2       	ldi	r24, 0x20	; 32
     728:	80 83       	st	Z, r24
     72a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     72e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     732:	82 e0       	ldi	r24, 0x02	; 2
     734:	80 83       	st	Z, r24
     736:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     73a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     73e:	8b ed       	ldi	r24, 0xDB	; 219
     740:	80 83       	st	Z, r24
     742:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     746:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     74a:	80 e3       	ldi	r24, 0x30	; 48
     74c:	80 83       	st	Z, r24
     74e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     752:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     756:	8d ea       	ldi	r24, 0xAD	; 173
     758:	80 83       	st	Z, r24
     75a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     75e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     762:	10 82       	st	Z, r1
     764:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     768:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     76c:	84 ea       	ldi	r24, 0xA4	; 164
     76e:	80 83       	st	Z, r24
     770:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     774:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     778:	86 ea       	ldi	r24, 0xA6	; 166
     77a:	80 83       	st	Z, r24
     77c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     780:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     784:	8f ea       	ldi	r24, 0xAF	; 175
     786:	80 83       	st	Z, r24
     788:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     78c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     790:	80 eb       	ldi	r24, 0xB0	; 176
     792:	80 83       	st	Z, r24
     794:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     798:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     79c:	10 82       	st	Z, r1
     79e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7a2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7a6:	80 e1       	ldi	r24, 0x10	; 16
     7a8:	80 83       	st	Z, r24
     7aa:	0e 94 2f 03 	call	0x65e	; 0x65e <oled_reset>
     7ae:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <oled_home>
     7b2:	08 95       	ret

000007b4 <oled_pos>:
     7b4:	cf 93       	push	r28
     7b6:	c6 2f       	mov	r28, r22
     7b8:	0e 94 09 03 	call	0x612	; 0x612 <oled_goto_line>
     7bc:	c0 93 99 01 	sts	0x0199, r28	; 0x800199 <col>
     7c0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7c4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7c8:	6c 2f       	mov	r22, r28
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	76 95       	lsr	r23
     7ce:	67 95       	ror	r22
     7d0:	60 83       	st	Z, r22
     7d2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     7d6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     7da:	60 5f       	subi	r22, 0xF0	; 240
     7dc:	60 83       	st	Z, r22
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	cf 91       	pop	r28
     7e4:	08 95       	ret

000007e6 <spi_init>:
     7e6:	87 b3       	in	r24, 0x17	; 23
     7e8:	80 6b       	ori	r24, 0xB0	; 176
     7ea:	87 bb       	out	0x17, r24	; 23
     7ec:	be 98       	cbi	0x17, 6	; 23
     7ee:	8d b1       	in	r24, 0x0d	; 13
     7f0:	81 65       	ori	r24, 0x51	; 81
     7f2:	8d b9       	out	0x0d, r24	; 13
     7f4:	08 95       	ret

000007f6 <spi_send>:
     7f6:	8f b9       	out	0x0f, r24	; 15
     7f8:	77 9b       	sbis	0x0e, 7	; 14
     7fa:	fe cf       	rjmp	.-4      	; 0x7f8 <spi_send+0x2>
     7fc:	08 95       	ret

000007fe <spi_receive>:
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <spi_send>
     804:	77 9b       	sbis	0x0e, 7	; 14
     806:	fe cf       	rjmp	.-4      	; 0x804 <spi_receive+0x6>
     808:	8f b1       	in	r24, 0x0f	; 15
     80a:	08 95       	ret

0000080c <SRAM_init>:
     80c:	85 b7       	in	r24, 0x35	; 53
     80e:	80 68       	ori	r24, 0x80	; 128
     810:	85 bf       	out	0x35, r24	; 53
     812:	80 b7       	in	r24, 0x30	; 48
     814:	80 62       	ori	r24, 0x20	; 32
     816:	80 bf       	out	0x30, r24	; 48
     818:	08 95       	ret

0000081a <USART_transmit>:
     81a:	5d 9b       	sbis	0x0b, 5	; 11
     81c:	fe cf       	rjmp	.-4      	; 0x81a <USART_transmit>
     81e:	8c b9       	out	0x0c, r24	; 12
     820:	08 95       	ret

00000822 <USART_receive>:
     822:	5f 9b       	sbis	0x0b, 7	; 11
     824:	fe cf       	rjmp	.-4      	; 0x822 <USART_receive>
     826:	8c b1       	in	r24, 0x0c	; 12
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	08 95       	ret

0000082c <USART_init>:
     82c:	90 bd       	out	0x20, r25	; 32
     82e:	89 b9       	out	0x09, r24	; 9
     830:	88 e1       	ldi	r24, 0x18	; 24
     832:	8a b9       	out	0x0a, r24	; 10
     834:	8e e8       	ldi	r24, 0x8E	; 142
     836:	80 bd       	out	0x20, r24	; 32
     838:	61 e1       	ldi	r22, 0x11	; 17
     83a:	74 e0       	ldi	r23, 0x04	; 4
     83c:	8d e0       	ldi	r24, 0x0D	; 13
     83e:	94 e0       	ldi	r25, 0x04	; 4
     840:	0e 94 4b 04 	call	0x896	; 0x896 <fdevopen>
     844:	08 95       	ret

00000846 <__divmodhi4>:
     846:	97 fb       	bst	r25, 7
     848:	07 2e       	mov	r0, r23
     84a:	16 f4       	brtc	.+4      	; 0x850 <__divmodhi4+0xa>
     84c:	00 94       	com	r0
     84e:	07 d0       	rcall	.+14     	; 0x85e <__divmodhi4_neg1>
     850:	77 fd       	sbrc	r23, 7
     852:	09 d0       	rcall	.+18     	; 0x866 <__divmodhi4_neg2>
     854:	0e 94 37 04 	call	0x86e	; 0x86e <__udivmodhi4>
     858:	07 fc       	sbrc	r0, 7
     85a:	05 d0       	rcall	.+10     	; 0x866 <__divmodhi4_neg2>
     85c:	3e f4       	brtc	.+14     	; 0x86c <__divmodhi4_exit>

0000085e <__divmodhi4_neg1>:
     85e:	90 95       	com	r25
     860:	81 95       	neg	r24
     862:	9f 4f       	sbci	r25, 0xFF	; 255
     864:	08 95       	ret

00000866 <__divmodhi4_neg2>:
     866:	70 95       	com	r23
     868:	61 95       	neg	r22
     86a:	7f 4f       	sbci	r23, 0xFF	; 255

0000086c <__divmodhi4_exit>:
     86c:	08 95       	ret

0000086e <__udivmodhi4>:
     86e:	aa 1b       	sub	r26, r26
     870:	bb 1b       	sub	r27, r27
     872:	51 e1       	ldi	r21, 0x11	; 17
     874:	07 c0       	rjmp	.+14     	; 0x884 <__udivmodhi4_ep>

00000876 <__udivmodhi4_loop>:
     876:	aa 1f       	adc	r26, r26
     878:	bb 1f       	adc	r27, r27
     87a:	a6 17       	cp	r26, r22
     87c:	b7 07       	cpc	r27, r23
     87e:	10 f0       	brcs	.+4      	; 0x884 <__udivmodhi4_ep>
     880:	a6 1b       	sub	r26, r22
     882:	b7 0b       	sbc	r27, r23

00000884 <__udivmodhi4_ep>:
     884:	88 1f       	adc	r24, r24
     886:	99 1f       	adc	r25, r25
     888:	5a 95       	dec	r21
     88a:	a9 f7       	brne	.-22     	; 0x876 <__udivmodhi4_loop>
     88c:	80 95       	com	r24
     88e:	90 95       	com	r25
     890:	bc 01       	movw	r22, r24
     892:	cd 01       	movw	r24, r26
     894:	08 95       	ret

00000896 <fdevopen>:
     896:	0f 93       	push	r16
     898:	1f 93       	push	r17
     89a:	cf 93       	push	r28
     89c:	df 93       	push	r29
     89e:	00 97       	sbiw	r24, 0x00	; 0
     8a0:	31 f4       	brne	.+12     	; 0x8ae <fdevopen+0x18>
     8a2:	61 15       	cp	r22, r1
     8a4:	71 05       	cpc	r23, r1
     8a6:	19 f4       	brne	.+6      	; 0x8ae <fdevopen+0x18>
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	3a c0       	rjmp	.+116    	; 0x922 <fdevopen+0x8c>
     8ae:	8b 01       	movw	r16, r22
     8b0:	ec 01       	movw	r28, r24
     8b2:	6e e0       	ldi	r22, 0x0E	; 14
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	0e 94 8d 06 	call	0xd1a	; 0xd1a <calloc>
     8be:	fc 01       	movw	r30, r24
     8c0:	89 2b       	or	r24, r25
     8c2:	91 f3       	breq	.-28     	; 0x8a8 <fdevopen+0x12>
     8c4:	80 e8       	ldi	r24, 0x80	; 128
     8c6:	83 83       	std	Z+3, r24	; 0x03
     8c8:	01 15       	cp	r16, r1
     8ca:	11 05       	cpc	r17, r1
     8cc:	71 f0       	breq	.+28     	; 0x8ea <fdevopen+0x54>
     8ce:	13 87       	std	Z+11, r17	; 0x0b
     8d0:	02 87       	std	Z+10, r16	; 0x0a
     8d2:	81 e8       	ldi	r24, 0x81	; 129
     8d4:	83 83       	std	Z+3, r24	; 0x03
     8d6:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <__iob>
     8da:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <__iob+0x1>
     8de:	89 2b       	or	r24, r25
     8e0:	21 f4       	brne	.+8      	; 0x8ea <fdevopen+0x54>
     8e2:	f0 93 9c 01 	sts	0x019C, r31	; 0x80019c <__iob+0x1>
     8e6:	e0 93 9b 01 	sts	0x019B, r30	; 0x80019b <__iob>
     8ea:	20 97       	sbiw	r28, 0x00	; 0
     8ec:	c9 f0       	breq	.+50     	; 0x920 <fdevopen+0x8a>
     8ee:	d1 87       	std	Z+9, r29	; 0x09
     8f0:	c0 87       	std	Z+8, r28	; 0x08
     8f2:	83 81       	ldd	r24, Z+3	; 0x03
     8f4:	82 60       	ori	r24, 0x02	; 2
     8f6:	83 83       	std	Z+3, r24	; 0x03
     8f8:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <__iob+0x2>
     8fc:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <__iob+0x3>
     900:	89 2b       	or	r24, r25
     902:	71 f4       	brne	.+28     	; 0x920 <fdevopen+0x8a>
     904:	f0 93 9e 01 	sts	0x019E, r31	; 0x80019e <__iob+0x3>
     908:	e0 93 9d 01 	sts	0x019D, r30	; 0x80019d <__iob+0x2>
     90c:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <__iob+0x4>
     910:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <__iob+0x5>
     914:	89 2b       	or	r24, r25
     916:	21 f4       	brne	.+8      	; 0x920 <fdevopen+0x8a>
     918:	f0 93 a0 01 	sts	0x01A0, r31	; 0x8001a0 <__iob+0x5>
     91c:	e0 93 9f 01 	sts	0x019F, r30	; 0x80019f <__iob+0x4>
     920:	cf 01       	movw	r24, r30
     922:	df 91       	pop	r29
     924:	cf 91       	pop	r28
     926:	1f 91       	pop	r17
     928:	0f 91       	pop	r16
     92a:	08 95       	ret

0000092c <printf>:
     92c:	a0 e0       	ldi	r26, 0x00	; 0
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	ec e9       	ldi	r30, 0x9C	; 156
     932:	f4 e0       	ldi	r31, 0x04	; 4
     934:	0c 94 91 08 	jmp	0x1122	; 0x1122 <__prologue_saves__+0x20>
     938:	ae 01       	movw	r20, r28
     93a:	4b 5f       	subi	r20, 0xFB	; 251
     93c:	5f 4f       	sbci	r21, 0xFF	; 255
     93e:	fa 01       	movw	r30, r20
     940:	61 91       	ld	r22, Z+
     942:	71 91       	ld	r23, Z+
     944:	af 01       	movw	r20, r30
     946:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <__iob+0x2>
     94a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <__iob+0x3>
     94e:	0e 94 ac 04 	call	0x958	; 0x958 <vfprintf>
     952:	e2 e0       	ldi	r30, 0x02	; 2
     954:	0c 94 ad 08 	jmp	0x115a	; 0x115a <__epilogue_restores__+0x20>

00000958 <vfprintf>:
     958:	ab e0       	ldi	r26, 0x0B	; 11
     95a:	b0 e0       	ldi	r27, 0x00	; 0
     95c:	e2 eb       	ldi	r30, 0xB2	; 178
     95e:	f4 e0       	ldi	r31, 0x04	; 4
     960:	0c 94 81 08 	jmp	0x1102	; 0x1102 <__prologue_saves__>
     964:	6c 01       	movw	r12, r24
     966:	7b 01       	movw	r14, r22
     968:	8a 01       	movw	r16, r20
     96a:	fc 01       	movw	r30, r24
     96c:	17 82       	std	Z+7, r1	; 0x07
     96e:	16 82       	std	Z+6, r1	; 0x06
     970:	83 81       	ldd	r24, Z+3	; 0x03
     972:	81 ff       	sbrs	r24, 1
     974:	cc c1       	rjmp	.+920    	; 0xd0e <vfprintf+0x3b6>
     976:	ce 01       	movw	r24, r28
     978:	01 96       	adiw	r24, 0x01	; 1
     97a:	3c 01       	movw	r6, r24
     97c:	f6 01       	movw	r30, r12
     97e:	93 81       	ldd	r25, Z+3	; 0x03
     980:	f7 01       	movw	r30, r14
     982:	93 fd       	sbrc	r25, 3
     984:	85 91       	lpm	r24, Z+
     986:	93 ff       	sbrs	r25, 3
     988:	81 91       	ld	r24, Z+
     98a:	7f 01       	movw	r14, r30
     98c:	88 23       	and	r24, r24
     98e:	09 f4       	brne	.+2      	; 0x992 <vfprintf+0x3a>
     990:	ba c1       	rjmp	.+884    	; 0xd06 <vfprintf+0x3ae>
     992:	85 32       	cpi	r24, 0x25	; 37
     994:	39 f4       	brne	.+14     	; 0x9a4 <vfprintf+0x4c>
     996:	93 fd       	sbrc	r25, 3
     998:	85 91       	lpm	r24, Z+
     99a:	93 ff       	sbrs	r25, 3
     99c:	81 91       	ld	r24, Z+
     99e:	7f 01       	movw	r14, r30
     9a0:	85 32       	cpi	r24, 0x25	; 37
     9a2:	29 f4       	brne	.+10     	; 0x9ae <vfprintf+0x56>
     9a4:	b6 01       	movw	r22, r12
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     9ac:	e7 cf       	rjmp	.-50     	; 0x97c <vfprintf+0x24>
     9ae:	91 2c       	mov	r9, r1
     9b0:	21 2c       	mov	r2, r1
     9b2:	31 2c       	mov	r3, r1
     9b4:	ff e1       	ldi	r31, 0x1F	; 31
     9b6:	f3 15       	cp	r31, r3
     9b8:	d8 f0       	brcs	.+54     	; 0x9f0 <vfprintf+0x98>
     9ba:	8b 32       	cpi	r24, 0x2B	; 43
     9bc:	79 f0       	breq	.+30     	; 0x9dc <vfprintf+0x84>
     9be:	38 f4       	brcc	.+14     	; 0x9ce <vfprintf+0x76>
     9c0:	80 32       	cpi	r24, 0x20	; 32
     9c2:	79 f0       	breq	.+30     	; 0x9e2 <vfprintf+0x8a>
     9c4:	83 32       	cpi	r24, 0x23	; 35
     9c6:	a1 f4       	brne	.+40     	; 0x9f0 <vfprintf+0x98>
     9c8:	23 2d       	mov	r18, r3
     9ca:	20 61       	ori	r18, 0x10	; 16
     9cc:	1d c0       	rjmp	.+58     	; 0xa08 <vfprintf+0xb0>
     9ce:	8d 32       	cpi	r24, 0x2D	; 45
     9d0:	61 f0       	breq	.+24     	; 0x9ea <vfprintf+0x92>
     9d2:	80 33       	cpi	r24, 0x30	; 48
     9d4:	69 f4       	brne	.+26     	; 0x9f0 <vfprintf+0x98>
     9d6:	23 2d       	mov	r18, r3
     9d8:	21 60       	ori	r18, 0x01	; 1
     9da:	16 c0       	rjmp	.+44     	; 0xa08 <vfprintf+0xb0>
     9dc:	83 2d       	mov	r24, r3
     9de:	82 60       	ori	r24, 0x02	; 2
     9e0:	38 2e       	mov	r3, r24
     9e2:	e3 2d       	mov	r30, r3
     9e4:	e4 60       	ori	r30, 0x04	; 4
     9e6:	3e 2e       	mov	r3, r30
     9e8:	2a c0       	rjmp	.+84     	; 0xa3e <vfprintf+0xe6>
     9ea:	f3 2d       	mov	r31, r3
     9ec:	f8 60       	ori	r31, 0x08	; 8
     9ee:	1d c0       	rjmp	.+58     	; 0xa2a <vfprintf+0xd2>
     9f0:	37 fc       	sbrc	r3, 7
     9f2:	2d c0       	rjmp	.+90     	; 0xa4e <vfprintf+0xf6>
     9f4:	20 ed       	ldi	r18, 0xD0	; 208
     9f6:	28 0f       	add	r18, r24
     9f8:	2a 30       	cpi	r18, 0x0A	; 10
     9fa:	40 f0       	brcs	.+16     	; 0xa0c <vfprintf+0xb4>
     9fc:	8e 32       	cpi	r24, 0x2E	; 46
     9fe:	b9 f4       	brne	.+46     	; 0xa2e <vfprintf+0xd6>
     a00:	36 fc       	sbrc	r3, 6
     a02:	81 c1       	rjmp	.+770    	; 0xd06 <vfprintf+0x3ae>
     a04:	23 2d       	mov	r18, r3
     a06:	20 64       	ori	r18, 0x40	; 64
     a08:	32 2e       	mov	r3, r18
     a0a:	19 c0       	rjmp	.+50     	; 0xa3e <vfprintf+0xe6>
     a0c:	36 fe       	sbrs	r3, 6
     a0e:	06 c0       	rjmp	.+12     	; 0xa1c <vfprintf+0xc4>
     a10:	8a e0       	ldi	r24, 0x0A	; 10
     a12:	98 9e       	mul	r9, r24
     a14:	20 0d       	add	r18, r0
     a16:	11 24       	eor	r1, r1
     a18:	92 2e       	mov	r9, r18
     a1a:	11 c0       	rjmp	.+34     	; 0xa3e <vfprintf+0xe6>
     a1c:	ea e0       	ldi	r30, 0x0A	; 10
     a1e:	2e 9e       	mul	r2, r30
     a20:	20 0d       	add	r18, r0
     a22:	11 24       	eor	r1, r1
     a24:	22 2e       	mov	r2, r18
     a26:	f3 2d       	mov	r31, r3
     a28:	f0 62       	ori	r31, 0x20	; 32
     a2a:	3f 2e       	mov	r3, r31
     a2c:	08 c0       	rjmp	.+16     	; 0xa3e <vfprintf+0xe6>
     a2e:	8c 36       	cpi	r24, 0x6C	; 108
     a30:	21 f4       	brne	.+8      	; 0xa3a <vfprintf+0xe2>
     a32:	83 2d       	mov	r24, r3
     a34:	80 68       	ori	r24, 0x80	; 128
     a36:	38 2e       	mov	r3, r24
     a38:	02 c0       	rjmp	.+4      	; 0xa3e <vfprintf+0xe6>
     a3a:	88 36       	cpi	r24, 0x68	; 104
     a3c:	41 f4       	brne	.+16     	; 0xa4e <vfprintf+0xf6>
     a3e:	f7 01       	movw	r30, r14
     a40:	93 fd       	sbrc	r25, 3
     a42:	85 91       	lpm	r24, Z+
     a44:	93 ff       	sbrs	r25, 3
     a46:	81 91       	ld	r24, Z+
     a48:	7f 01       	movw	r14, r30
     a4a:	81 11       	cpse	r24, r1
     a4c:	b3 cf       	rjmp	.-154    	; 0x9b4 <vfprintf+0x5c>
     a4e:	98 2f       	mov	r25, r24
     a50:	9f 7d       	andi	r25, 0xDF	; 223
     a52:	95 54       	subi	r25, 0x45	; 69
     a54:	93 30       	cpi	r25, 0x03	; 3
     a56:	28 f4       	brcc	.+10     	; 0xa62 <vfprintf+0x10a>
     a58:	0c 5f       	subi	r16, 0xFC	; 252
     a5a:	1f 4f       	sbci	r17, 0xFF	; 255
     a5c:	9f e3       	ldi	r25, 0x3F	; 63
     a5e:	99 83       	std	Y+1, r25	; 0x01
     a60:	0d c0       	rjmp	.+26     	; 0xa7c <vfprintf+0x124>
     a62:	83 36       	cpi	r24, 0x63	; 99
     a64:	31 f0       	breq	.+12     	; 0xa72 <vfprintf+0x11a>
     a66:	83 37       	cpi	r24, 0x73	; 115
     a68:	71 f0       	breq	.+28     	; 0xa86 <vfprintf+0x12e>
     a6a:	83 35       	cpi	r24, 0x53	; 83
     a6c:	09 f0       	breq	.+2      	; 0xa70 <vfprintf+0x118>
     a6e:	59 c0       	rjmp	.+178    	; 0xb22 <vfprintf+0x1ca>
     a70:	21 c0       	rjmp	.+66     	; 0xab4 <vfprintf+0x15c>
     a72:	f8 01       	movw	r30, r16
     a74:	80 81       	ld	r24, Z
     a76:	89 83       	std	Y+1, r24	; 0x01
     a78:	0e 5f       	subi	r16, 0xFE	; 254
     a7a:	1f 4f       	sbci	r17, 0xFF	; 255
     a7c:	88 24       	eor	r8, r8
     a7e:	83 94       	inc	r8
     a80:	91 2c       	mov	r9, r1
     a82:	53 01       	movw	r10, r6
     a84:	13 c0       	rjmp	.+38     	; 0xaac <vfprintf+0x154>
     a86:	28 01       	movw	r4, r16
     a88:	f2 e0       	ldi	r31, 0x02	; 2
     a8a:	4f 0e       	add	r4, r31
     a8c:	51 1c       	adc	r5, r1
     a8e:	f8 01       	movw	r30, r16
     a90:	a0 80       	ld	r10, Z
     a92:	b1 80       	ldd	r11, Z+1	; 0x01
     a94:	36 fe       	sbrs	r3, 6
     a96:	03 c0       	rjmp	.+6      	; 0xa9e <vfprintf+0x146>
     a98:	69 2d       	mov	r22, r9
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <vfprintf+0x14a>
     a9e:	6f ef       	ldi	r22, 0xFF	; 255
     aa0:	7f ef       	ldi	r23, 0xFF	; 255
     aa2:	c5 01       	movw	r24, r10
     aa4:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <strnlen>
     aa8:	4c 01       	movw	r8, r24
     aaa:	82 01       	movw	r16, r4
     aac:	f3 2d       	mov	r31, r3
     aae:	ff 77       	andi	r31, 0x7F	; 127
     ab0:	3f 2e       	mov	r3, r31
     ab2:	16 c0       	rjmp	.+44     	; 0xae0 <vfprintf+0x188>
     ab4:	28 01       	movw	r4, r16
     ab6:	22 e0       	ldi	r18, 0x02	; 2
     ab8:	42 0e       	add	r4, r18
     aba:	51 1c       	adc	r5, r1
     abc:	f8 01       	movw	r30, r16
     abe:	a0 80       	ld	r10, Z
     ac0:	b1 80       	ldd	r11, Z+1	; 0x01
     ac2:	36 fe       	sbrs	r3, 6
     ac4:	03 c0       	rjmp	.+6      	; 0xacc <vfprintf+0x174>
     ac6:	69 2d       	mov	r22, r9
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	02 c0       	rjmp	.+4      	; 0xad0 <vfprintf+0x178>
     acc:	6f ef       	ldi	r22, 0xFF	; 255
     ace:	7f ef       	ldi	r23, 0xFF	; 255
     ad0:	c5 01       	movw	r24, r10
     ad2:	0e 94 ca 07 	call	0xf94	; 0xf94 <strnlen_P>
     ad6:	4c 01       	movw	r8, r24
     ad8:	f3 2d       	mov	r31, r3
     ada:	f0 68       	ori	r31, 0x80	; 128
     adc:	3f 2e       	mov	r3, r31
     ade:	82 01       	movw	r16, r4
     ae0:	33 fc       	sbrc	r3, 3
     ae2:	1b c0       	rjmp	.+54     	; 0xb1a <vfprintf+0x1c2>
     ae4:	82 2d       	mov	r24, r2
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	88 16       	cp	r8, r24
     aea:	99 06       	cpc	r9, r25
     aec:	b0 f4       	brcc	.+44     	; 0xb1a <vfprintf+0x1c2>
     aee:	b6 01       	movw	r22, r12
     af0:	80 e2       	ldi	r24, 0x20	; 32
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     af8:	2a 94       	dec	r2
     afa:	f4 cf       	rjmp	.-24     	; 0xae4 <vfprintf+0x18c>
     afc:	f5 01       	movw	r30, r10
     afe:	37 fc       	sbrc	r3, 7
     b00:	85 91       	lpm	r24, Z+
     b02:	37 fe       	sbrs	r3, 7
     b04:	81 91       	ld	r24, Z+
     b06:	5f 01       	movw	r10, r30
     b08:	b6 01       	movw	r22, r12
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     b10:	21 10       	cpse	r2, r1
     b12:	2a 94       	dec	r2
     b14:	21 e0       	ldi	r18, 0x01	; 1
     b16:	82 1a       	sub	r8, r18
     b18:	91 08       	sbc	r9, r1
     b1a:	81 14       	cp	r8, r1
     b1c:	91 04       	cpc	r9, r1
     b1e:	71 f7       	brne	.-36     	; 0xafc <vfprintf+0x1a4>
     b20:	e8 c0       	rjmp	.+464    	; 0xcf2 <vfprintf+0x39a>
     b22:	84 36       	cpi	r24, 0x64	; 100
     b24:	11 f0       	breq	.+4      	; 0xb2a <vfprintf+0x1d2>
     b26:	89 36       	cpi	r24, 0x69	; 105
     b28:	41 f5       	brne	.+80     	; 0xb7a <vfprintf+0x222>
     b2a:	f8 01       	movw	r30, r16
     b2c:	37 fe       	sbrs	r3, 7
     b2e:	07 c0       	rjmp	.+14     	; 0xb3e <vfprintf+0x1e6>
     b30:	60 81       	ld	r22, Z
     b32:	71 81       	ldd	r23, Z+1	; 0x01
     b34:	82 81       	ldd	r24, Z+2	; 0x02
     b36:	93 81       	ldd	r25, Z+3	; 0x03
     b38:	0c 5f       	subi	r16, 0xFC	; 252
     b3a:	1f 4f       	sbci	r17, 0xFF	; 255
     b3c:	08 c0       	rjmp	.+16     	; 0xb4e <vfprintf+0x1f6>
     b3e:	60 81       	ld	r22, Z
     b40:	71 81       	ldd	r23, Z+1	; 0x01
     b42:	07 2e       	mov	r0, r23
     b44:	00 0c       	add	r0, r0
     b46:	88 0b       	sbc	r24, r24
     b48:	99 0b       	sbc	r25, r25
     b4a:	0e 5f       	subi	r16, 0xFE	; 254
     b4c:	1f 4f       	sbci	r17, 0xFF	; 255
     b4e:	f3 2d       	mov	r31, r3
     b50:	ff 76       	andi	r31, 0x6F	; 111
     b52:	3f 2e       	mov	r3, r31
     b54:	97 ff       	sbrs	r25, 7
     b56:	09 c0       	rjmp	.+18     	; 0xb6a <vfprintf+0x212>
     b58:	90 95       	com	r25
     b5a:	80 95       	com	r24
     b5c:	70 95       	com	r23
     b5e:	61 95       	neg	r22
     b60:	7f 4f       	sbci	r23, 0xFF	; 255
     b62:	8f 4f       	sbci	r24, 0xFF	; 255
     b64:	9f 4f       	sbci	r25, 0xFF	; 255
     b66:	f0 68       	ori	r31, 0x80	; 128
     b68:	3f 2e       	mov	r3, r31
     b6a:	2a e0       	ldi	r18, 0x0A	; 10
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	a3 01       	movw	r20, r6
     b70:	0e 94 23 08 	call	0x1046	; 0x1046 <__ultoa_invert>
     b74:	88 2e       	mov	r8, r24
     b76:	86 18       	sub	r8, r6
     b78:	45 c0       	rjmp	.+138    	; 0xc04 <vfprintf+0x2ac>
     b7a:	85 37       	cpi	r24, 0x75	; 117
     b7c:	31 f4       	brne	.+12     	; 0xb8a <vfprintf+0x232>
     b7e:	23 2d       	mov	r18, r3
     b80:	2f 7e       	andi	r18, 0xEF	; 239
     b82:	b2 2e       	mov	r11, r18
     b84:	2a e0       	ldi	r18, 0x0A	; 10
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	25 c0       	rjmp	.+74     	; 0xbd4 <vfprintf+0x27c>
     b8a:	93 2d       	mov	r25, r3
     b8c:	99 7f       	andi	r25, 0xF9	; 249
     b8e:	b9 2e       	mov	r11, r25
     b90:	8f 36       	cpi	r24, 0x6F	; 111
     b92:	c1 f0       	breq	.+48     	; 0xbc4 <vfprintf+0x26c>
     b94:	18 f4       	brcc	.+6      	; 0xb9c <vfprintf+0x244>
     b96:	88 35       	cpi	r24, 0x58	; 88
     b98:	79 f0       	breq	.+30     	; 0xbb8 <vfprintf+0x260>
     b9a:	b5 c0       	rjmp	.+362    	; 0xd06 <vfprintf+0x3ae>
     b9c:	80 37       	cpi	r24, 0x70	; 112
     b9e:	19 f0       	breq	.+6      	; 0xba6 <vfprintf+0x24e>
     ba0:	88 37       	cpi	r24, 0x78	; 120
     ba2:	21 f0       	breq	.+8      	; 0xbac <vfprintf+0x254>
     ba4:	b0 c0       	rjmp	.+352    	; 0xd06 <vfprintf+0x3ae>
     ba6:	e9 2f       	mov	r30, r25
     ba8:	e0 61       	ori	r30, 0x10	; 16
     baa:	be 2e       	mov	r11, r30
     bac:	b4 fe       	sbrs	r11, 4
     bae:	0d c0       	rjmp	.+26     	; 0xbca <vfprintf+0x272>
     bb0:	fb 2d       	mov	r31, r11
     bb2:	f4 60       	ori	r31, 0x04	; 4
     bb4:	bf 2e       	mov	r11, r31
     bb6:	09 c0       	rjmp	.+18     	; 0xbca <vfprintf+0x272>
     bb8:	34 fe       	sbrs	r3, 4
     bba:	0a c0       	rjmp	.+20     	; 0xbd0 <vfprintf+0x278>
     bbc:	29 2f       	mov	r18, r25
     bbe:	26 60       	ori	r18, 0x06	; 6
     bc0:	b2 2e       	mov	r11, r18
     bc2:	06 c0       	rjmp	.+12     	; 0xbd0 <vfprintf+0x278>
     bc4:	28 e0       	ldi	r18, 0x08	; 8
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	05 c0       	rjmp	.+10     	; 0xbd4 <vfprintf+0x27c>
     bca:	20 e1       	ldi	r18, 0x10	; 16
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <vfprintf+0x27c>
     bd0:	20 e1       	ldi	r18, 0x10	; 16
     bd2:	32 e0       	ldi	r19, 0x02	; 2
     bd4:	f8 01       	movw	r30, r16
     bd6:	b7 fe       	sbrs	r11, 7
     bd8:	07 c0       	rjmp	.+14     	; 0xbe8 <vfprintf+0x290>
     bda:	60 81       	ld	r22, Z
     bdc:	71 81       	ldd	r23, Z+1	; 0x01
     bde:	82 81       	ldd	r24, Z+2	; 0x02
     be0:	93 81       	ldd	r25, Z+3	; 0x03
     be2:	0c 5f       	subi	r16, 0xFC	; 252
     be4:	1f 4f       	sbci	r17, 0xFF	; 255
     be6:	06 c0       	rjmp	.+12     	; 0xbf4 <vfprintf+0x29c>
     be8:	60 81       	ld	r22, Z
     bea:	71 81       	ldd	r23, Z+1	; 0x01
     bec:	80 e0       	ldi	r24, 0x00	; 0
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0e 5f       	subi	r16, 0xFE	; 254
     bf2:	1f 4f       	sbci	r17, 0xFF	; 255
     bf4:	a3 01       	movw	r20, r6
     bf6:	0e 94 23 08 	call	0x1046	; 0x1046 <__ultoa_invert>
     bfa:	88 2e       	mov	r8, r24
     bfc:	86 18       	sub	r8, r6
     bfe:	fb 2d       	mov	r31, r11
     c00:	ff 77       	andi	r31, 0x7F	; 127
     c02:	3f 2e       	mov	r3, r31
     c04:	36 fe       	sbrs	r3, 6
     c06:	0d c0       	rjmp	.+26     	; 0xc22 <vfprintf+0x2ca>
     c08:	23 2d       	mov	r18, r3
     c0a:	2e 7f       	andi	r18, 0xFE	; 254
     c0c:	a2 2e       	mov	r10, r18
     c0e:	89 14       	cp	r8, r9
     c10:	58 f4       	brcc	.+22     	; 0xc28 <vfprintf+0x2d0>
     c12:	34 fe       	sbrs	r3, 4
     c14:	0b c0       	rjmp	.+22     	; 0xc2c <vfprintf+0x2d4>
     c16:	32 fc       	sbrc	r3, 2
     c18:	09 c0       	rjmp	.+18     	; 0xc2c <vfprintf+0x2d4>
     c1a:	83 2d       	mov	r24, r3
     c1c:	8e 7e       	andi	r24, 0xEE	; 238
     c1e:	a8 2e       	mov	r10, r24
     c20:	05 c0       	rjmp	.+10     	; 0xc2c <vfprintf+0x2d4>
     c22:	b8 2c       	mov	r11, r8
     c24:	a3 2c       	mov	r10, r3
     c26:	03 c0       	rjmp	.+6      	; 0xc2e <vfprintf+0x2d6>
     c28:	b8 2c       	mov	r11, r8
     c2a:	01 c0       	rjmp	.+2      	; 0xc2e <vfprintf+0x2d6>
     c2c:	b9 2c       	mov	r11, r9
     c2e:	a4 fe       	sbrs	r10, 4
     c30:	0f c0       	rjmp	.+30     	; 0xc50 <vfprintf+0x2f8>
     c32:	fe 01       	movw	r30, r28
     c34:	e8 0d       	add	r30, r8
     c36:	f1 1d       	adc	r31, r1
     c38:	80 81       	ld	r24, Z
     c3a:	80 33       	cpi	r24, 0x30	; 48
     c3c:	21 f4       	brne	.+8      	; 0xc46 <vfprintf+0x2ee>
     c3e:	9a 2d       	mov	r25, r10
     c40:	99 7e       	andi	r25, 0xE9	; 233
     c42:	a9 2e       	mov	r10, r25
     c44:	09 c0       	rjmp	.+18     	; 0xc58 <vfprintf+0x300>
     c46:	a2 fe       	sbrs	r10, 2
     c48:	06 c0       	rjmp	.+12     	; 0xc56 <vfprintf+0x2fe>
     c4a:	b3 94       	inc	r11
     c4c:	b3 94       	inc	r11
     c4e:	04 c0       	rjmp	.+8      	; 0xc58 <vfprintf+0x300>
     c50:	8a 2d       	mov	r24, r10
     c52:	86 78       	andi	r24, 0x86	; 134
     c54:	09 f0       	breq	.+2      	; 0xc58 <vfprintf+0x300>
     c56:	b3 94       	inc	r11
     c58:	a3 fc       	sbrc	r10, 3
     c5a:	11 c0       	rjmp	.+34     	; 0xc7e <vfprintf+0x326>
     c5c:	a0 fe       	sbrs	r10, 0
     c5e:	06 c0       	rjmp	.+12     	; 0xc6c <vfprintf+0x314>
     c60:	b2 14       	cp	r11, r2
     c62:	88 f4       	brcc	.+34     	; 0xc86 <vfprintf+0x32e>
     c64:	28 0c       	add	r2, r8
     c66:	92 2c       	mov	r9, r2
     c68:	9b 18       	sub	r9, r11
     c6a:	0e c0       	rjmp	.+28     	; 0xc88 <vfprintf+0x330>
     c6c:	b2 14       	cp	r11, r2
     c6e:	60 f4       	brcc	.+24     	; 0xc88 <vfprintf+0x330>
     c70:	b6 01       	movw	r22, r12
     c72:	80 e2       	ldi	r24, 0x20	; 32
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     c7a:	b3 94       	inc	r11
     c7c:	f7 cf       	rjmp	.-18     	; 0xc6c <vfprintf+0x314>
     c7e:	b2 14       	cp	r11, r2
     c80:	18 f4       	brcc	.+6      	; 0xc88 <vfprintf+0x330>
     c82:	2b 18       	sub	r2, r11
     c84:	02 c0       	rjmp	.+4      	; 0xc8a <vfprintf+0x332>
     c86:	98 2c       	mov	r9, r8
     c88:	21 2c       	mov	r2, r1
     c8a:	a4 fe       	sbrs	r10, 4
     c8c:	10 c0       	rjmp	.+32     	; 0xcae <vfprintf+0x356>
     c8e:	b6 01       	movw	r22, r12
     c90:	80 e3       	ldi	r24, 0x30	; 48
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     c98:	a2 fe       	sbrs	r10, 2
     c9a:	17 c0       	rjmp	.+46     	; 0xcca <vfprintf+0x372>
     c9c:	a1 fc       	sbrc	r10, 1
     c9e:	03 c0       	rjmp	.+6      	; 0xca6 <vfprintf+0x34e>
     ca0:	88 e7       	ldi	r24, 0x78	; 120
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <vfprintf+0x352>
     ca6:	88 e5       	ldi	r24, 0x58	; 88
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	b6 01       	movw	r22, r12
     cac:	0c c0       	rjmp	.+24     	; 0xcc6 <vfprintf+0x36e>
     cae:	8a 2d       	mov	r24, r10
     cb0:	86 78       	andi	r24, 0x86	; 134
     cb2:	59 f0       	breq	.+22     	; 0xcca <vfprintf+0x372>
     cb4:	a1 fe       	sbrs	r10, 1
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x364>
     cb8:	8b e2       	ldi	r24, 0x2B	; 43
     cba:	01 c0       	rjmp	.+2      	; 0xcbe <vfprintf+0x366>
     cbc:	80 e2       	ldi	r24, 0x20	; 32
     cbe:	a7 fc       	sbrc	r10, 7
     cc0:	8d e2       	ldi	r24, 0x2D	; 45
     cc2:	b6 01       	movw	r22, r12
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     cca:	89 14       	cp	r8, r9
     ccc:	38 f4       	brcc	.+14     	; 0xcdc <vfprintf+0x384>
     cce:	b6 01       	movw	r22, r12
     cd0:	80 e3       	ldi	r24, 0x30	; 48
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     cd8:	9a 94       	dec	r9
     cda:	f7 cf       	rjmp	.-18     	; 0xcca <vfprintf+0x372>
     cdc:	8a 94       	dec	r8
     cde:	f3 01       	movw	r30, r6
     ce0:	e8 0d       	add	r30, r8
     ce2:	f1 1d       	adc	r31, r1
     ce4:	80 81       	ld	r24, Z
     ce6:	b6 01       	movw	r22, r12
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     cee:	81 10       	cpse	r8, r1
     cf0:	f5 cf       	rjmp	.-22     	; 0xcdc <vfprintf+0x384>
     cf2:	22 20       	and	r2, r2
     cf4:	09 f4       	brne	.+2      	; 0xcf8 <vfprintf+0x3a0>
     cf6:	42 ce       	rjmp	.-892    	; 0x97c <vfprintf+0x24>
     cf8:	b6 01       	movw	r22, r12
     cfa:	80 e2       	ldi	r24, 0x20	; 32
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	0e 94 e7 07 	call	0xfce	; 0xfce <fputc>
     d02:	2a 94       	dec	r2
     d04:	f6 cf       	rjmp	.-20     	; 0xcf2 <vfprintf+0x39a>
     d06:	f6 01       	movw	r30, r12
     d08:	86 81       	ldd	r24, Z+6	; 0x06
     d0a:	97 81       	ldd	r25, Z+7	; 0x07
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <vfprintf+0x3ba>
     d0e:	8f ef       	ldi	r24, 0xFF	; 255
     d10:	9f ef       	ldi	r25, 0xFF	; 255
     d12:	2b 96       	adiw	r28, 0x0b	; 11
     d14:	e2 e1       	ldi	r30, 0x12	; 18
     d16:	0c 94 9d 08 	jmp	0x113a	; 0x113a <__epilogue_restores__>

00000d1a <calloc>:
     d1a:	0f 93       	push	r16
     d1c:	1f 93       	push	r17
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29
     d22:	86 9f       	mul	r24, r22
     d24:	80 01       	movw	r16, r0
     d26:	87 9f       	mul	r24, r23
     d28:	10 0d       	add	r17, r0
     d2a:	96 9f       	mul	r25, r22
     d2c:	10 0d       	add	r17, r0
     d2e:	11 24       	eor	r1, r1
     d30:	c8 01       	movw	r24, r16
     d32:	0e 94 a9 06 	call	0xd52	; 0xd52 <malloc>
     d36:	ec 01       	movw	r28, r24
     d38:	00 97       	sbiw	r24, 0x00	; 0
     d3a:	29 f0       	breq	.+10     	; 0xd46 <calloc+0x2c>
     d3c:	a8 01       	movw	r20, r16
     d3e:	60 e0       	ldi	r22, 0x00	; 0
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	0e 94 d5 07 	call	0xfaa	; 0xfaa <memset>
     d46:	ce 01       	movw	r24, r28
     d48:	df 91       	pop	r29
     d4a:	cf 91       	pop	r28
     d4c:	1f 91       	pop	r17
     d4e:	0f 91       	pop	r16
     d50:	08 95       	ret

00000d52 <malloc>:
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	cf 93       	push	r28
     d58:	df 93       	push	r29
     d5a:	82 30       	cpi	r24, 0x02	; 2
     d5c:	91 05       	cpc	r25, r1
     d5e:	10 f4       	brcc	.+4      	; 0xd64 <malloc+0x12>
     d60:	82 e0       	ldi	r24, 0x02	; 2
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	e0 91 a3 01 	lds	r30, 0x01A3	; 0x8001a3 <__flp>
     d68:	f0 91 a4 01 	lds	r31, 0x01A4	; 0x8001a4 <__flp+0x1>
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	a0 e0       	ldi	r26, 0x00	; 0
     d72:	b0 e0       	ldi	r27, 0x00	; 0
     d74:	30 97       	sbiw	r30, 0x00	; 0
     d76:	19 f1       	breq	.+70     	; 0xdbe <malloc+0x6c>
     d78:	40 81       	ld	r20, Z
     d7a:	51 81       	ldd	r21, Z+1	; 0x01
     d7c:	02 81       	ldd	r16, Z+2	; 0x02
     d7e:	13 81       	ldd	r17, Z+3	; 0x03
     d80:	48 17       	cp	r20, r24
     d82:	59 07       	cpc	r21, r25
     d84:	c8 f0       	brcs	.+50     	; 0xdb8 <malloc+0x66>
     d86:	84 17       	cp	r24, r20
     d88:	95 07       	cpc	r25, r21
     d8a:	69 f4       	brne	.+26     	; 0xda6 <malloc+0x54>
     d8c:	10 97       	sbiw	r26, 0x00	; 0
     d8e:	31 f0       	breq	.+12     	; 0xd9c <malloc+0x4a>
     d90:	12 96       	adiw	r26, 0x02	; 2
     d92:	0c 93       	st	X, r16
     d94:	12 97       	sbiw	r26, 0x02	; 2
     d96:	13 96       	adiw	r26, 0x03	; 3
     d98:	1c 93       	st	X, r17
     d9a:	27 c0       	rjmp	.+78     	; 0xdea <malloc+0x98>
     d9c:	00 93 a3 01 	sts	0x01A3, r16	; 0x8001a3 <__flp>
     da0:	10 93 a4 01 	sts	0x01A4, r17	; 0x8001a4 <__flp+0x1>
     da4:	22 c0       	rjmp	.+68     	; 0xdea <malloc+0x98>
     da6:	21 15       	cp	r18, r1
     da8:	31 05       	cpc	r19, r1
     daa:	19 f0       	breq	.+6      	; 0xdb2 <malloc+0x60>
     dac:	42 17       	cp	r20, r18
     dae:	53 07       	cpc	r21, r19
     db0:	18 f4       	brcc	.+6      	; 0xdb8 <malloc+0x66>
     db2:	9a 01       	movw	r18, r20
     db4:	bd 01       	movw	r22, r26
     db6:	ef 01       	movw	r28, r30
     db8:	df 01       	movw	r26, r30
     dba:	f8 01       	movw	r30, r16
     dbc:	db cf       	rjmp	.-74     	; 0xd74 <malloc+0x22>
     dbe:	21 15       	cp	r18, r1
     dc0:	31 05       	cpc	r19, r1
     dc2:	f9 f0       	breq	.+62     	; 0xe02 <malloc+0xb0>
     dc4:	28 1b       	sub	r18, r24
     dc6:	39 0b       	sbc	r19, r25
     dc8:	24 30       	cpi	r18, 0x04	; 4
     dca:	31 05       	cpc	r19, r1
     dcc:	80 f4       	brcc	.+32     	; 0xdee <malloc+0x9c>
     dce:	8a 81       	ldd	r24, Y+2	; 0x02
     dd0:	9b 81       	ldd	r25, Y+3	; 0x03
     dd2:	61 15       	cp	r22, r1
     dd4:	71 05       	cpc	r23, r1
     dd6:	21 f0       	breq	.+8      	; 0xde0 <malloc+0x8e>
     dd8:	fb 01       	movw	r30, r22
     dda:	93 83       	std	Z+3, r25	; 0x03
     ddc:	82 83       	std	Z+2, r24	; 0x02
     dde:	04 c0       	rjmp	.+8      	; 0xde8 <malloc+0x96>
     de0:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <__flp+0x1>
     de4:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <__flp>
     de8:	fe 01       	movw	r30, r28
     dea:	32 96       	adiw	r30, 0x02	; 2
     dec:	44 c0       	rjmp	.+136    	; 0xe76 <malloc+0x124>
     dee:	fe 01       	movw	r30, r28
     df0:	e2 0f       	add	r30, r18
     df2:	f3 1f       	adc	r31, r19
     df4:	81 93       	st	Z+, r24
     df6:	91 93       	st	Z+, r25
     df8:	22 50       	subi	r18, 0x02	; 2
     dfa:	31 09       	sbc	r19, r1
     dfc:	39 83       	std	Y+1, r19	; 0x01
     dfe:	28 83       	st	Y, r18
     e00:	3a c0       	rjmp	.+116    	; 0xe76 <malloc+0x124>
     e02:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <__brkval>
     e06:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <__brkval+0x1>
     e0a:	23 2b       	or	r18, r19
     e0c:	41 f4       	brne	.+16     	; 0xe1e <malloc+0xcc>
     e0e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     e12:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     e16:	30 93 a2 01 	sts	0x01A2, r19	; 0x8001a2 <__brkval+0x1>
     e1a:	20 93 a1 01 	sts	0x01A1, r18	; 0x8001a1 <__brkval>
     e1e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     e22:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     e26:	21 15       	cp	r18, r1
     e28:	31 05       	cpc	r19, r1
     e2a:	41 f4       	brne	.+16     	; 0xe3c <malloc+0xea>
     e2c:	2d b7       	in	r18, 0x3d	; 61
     e2e:	3e b7       	in	r19, 0x3e	; 62
     e30:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     e34:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     e38:	24 1b       	sub	r18, r20
     e3a:	35 0b       	sbc	r19, r21
     e3c:	e0 91 a1 01 	lds	r30, 0x01A1	; 0x8001a1 <__brkval>
     e40:	f0 91 a2 01 	lds	r31, 0x01A2	; 0x8001a2 <__brkval+0x1>
     e44:	e2 17       	cp	r30, r18
     e46:	f3 07       	cpc	r31, r19
     e48:	a0 f4       	brcc	.+40     	; 0xe72 <malloc+0x120>
     e4a:	2e 1b       	sub	r18, r30
     e4c:	3f 0b       	sbc	r19, r31
     e4e:	28 17       	cp	r18, r24
     e50:	39 07       	cpc	r19, r25
     e52:	78 f0       	brcs	.+30     	; 0xe72 <malloc+0x120>
     e54:	ac 01       	movw	r20, r24
     e56:	4e 5f       	subi	r20, 0xFE	; 254
     e58:	5f 4f       	sbci	r21, 0xFF	; 255
     e5a:	24 17       	cp	r18, r20
     e5c:	35 07       	cpc	r19, r21
     e5e:	48 f0       	brcs	.+18     	; 0xe72 <malloc+0x120>
     e60:	4e 0f       	add	r20, r30
     e62:	5f 1f       	adc	r21, r31
     e64:	50 93 a2 01 	sts	0x01A2, r21	; 0x8001a2 <__brkval+0x1>
     e68:	40 93 a1 01 	sts	0x01A1, r20	; 0x8001a1 <__brkval>
     e6c:	81 93       	st	Z+, r24
     e6e:	91 93       	st	Z+, r25
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <malloc+0x124>
     e72:	e0 e0       	ldi	r30, 0x00	; 0
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	cf 01       	movw	r24, r30
     e78:	df 91       	pop	r29
     e7a:	cf 91       	pop	r28
     e7c:	1f 91       	pop	r17
     e7e:	0f 91       	pop	r16
     e80:	08 95       	ret

00000e82 <free>:
     e82:	cf 93       	push	r28
     e84:	df 93       	push	r29
     e86:	00 97       	sbiw	r24, 0x00	; 0
     e88:	09 f4       	brne	.+2      	; 0xe8c <free+0xa>
     e8a:	81 c0       	rjmp	.+258    	; 0xf8e <free+0x10c>
     e8c:	fc 01       	movw	r30, r24
     e8e:	32 97       	sbiw	r30, 0x02	; 2
     e90:	13 82       	std	Z+3, r1	; 0x03
     e92:	12 82       	std	Z+2, r1	; 0x02
     e94:	a0 91 a3 01 	lds	r26, 0x01A3	; 0x8001a3 <__flp>
     e98:	b0 91 a4 01 	lds	r27, 0x01A4	; 0x8001a4 <__flp+0x1>
     e9c:	10 97       	sbiw	r26, 0x00	; 0
     e9e:	81 f4       	brne	.+32     	; 0xec0 <free+0x3e>
     ea0:	20 81       	ld	r18, Z
     ea2:	31 81       	ldd	r19, Z+1	; 0x01
     ea4:	82 0f       	add	r24, r18
     ea6:	93 1f       	adc	r25, r19
     ea8:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <__brkval>
     eac:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <__brkval+0x1>
     eb0:	28 17       	cp	r18, r24
     eb2:	39 07       	cpc	r19, r25
     eb4:	51 f5       	brne	.+84     	; 0xf0a <free+0x88>
     eb6:	f0 93 a2 01 	sts	0x01A2, r31	; 0x8001a2 <__brkval+0x1>
     eba:	e0 93 a1 01 	sts	0x01A1, r30	; 0x8001a1 <__brkval>
     ebe:	67 c0       	rjmp	.+206    	; 0xf8e <free+0x10c>
     ec0:	ed 01       	movw	r28, r26
     ec2:	20 e0       	ldi	r18, 0x00	; 0
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	ce 17       	cp	r28, r30
     ec8:	df 07       	cpc	r29, r31
     eca:	40 f4       	brcc	.+16     	; 0xedc <free+0x5a>
     ecc:	4a 81       	ldd	r20, Y+2	; 0x02
     ece:	5b 81       	ldd	r21, Y+3	; 0x03
     ed0:	9e 01       	movw	r18, r28
     ed2:	41 15       	cp	r20, r1
     ed4:	51 05       	cpc	r21, r1
     ed6:	f1 f0       	breq	.+60     	; 0xf14 <free+0x92>
     ed8:	ea 01       	movw	r28, r20
     eda:	f5 cf       	rjmp	.-22     	; 0xec6 <free+0x44>
     edc:	d3 83       	std	Z+3, r29	; 0x03
     ede:	c2 83       	std	Z+2, r28	; 0x02
     ee0:	40 81       	ld	r20, Z
     ee2:	51 81       	ldd	r21, Z+1	; 0x01
     ee4:	84 0f       	add	r24, r20
     ee6:	95 1f       	adc	r25, r21
     ee8:	c8 17       	cp	r28, r24
     eea:	d9 07       	cpc	r29, r25
     eec:	59 f4       	brne	.+22     	; 0xf04 <free+0x82>
     eee:	88 81       	ld	r24, Y
     ef0:	99 81       	ldd	r25, Y+1	; 0x01
     ef2:	84 0f       	add	r24, r20
     ef4:	95 1f       	adc	r25, r21
     ef6:	02 96       	adiw	r24, 0x02	; 2
     ef8:	91 83       	std	Z+1, r25	; 0x01
     efa:	80 83       	st	Z, r24
     efc:	8a 81       	ldd	r24, Y+2	; 0x02
     efe:	9b 81       	ldd	r25, Y+3	; 0x03
     f00:	93 83       	std	Z+3, r25	; 0x03
     f02:	82 83       	std	Z+2, r24	; 0x02
     f04:	21 15       	cp	r18, r1
     f06:	31 05       	cpc	r19, r1
     f08:	29 f4       	brne	.+10     	; 0xf14 <free+0x92>
     f0a:	f0 93 a4 01 	sts	0x01A4, r31	; 0x8001a4 <__flp+0x1>
     f0e:	e0 93 a3 01 	sts	0x01A3, r30	; 0x8001a3 <__flp>
     f12:	3d c0       	rjmp	.+122    	; 0xf8e <free+0x10c>
     f14:	e9 01       	movw	r28, r18
     f16:	fb 83       	std	Y+3, r31	; 0x03
     f18:	ea 83       	std	Y+2, r30	; 0x02
     f1a:	49 91       	ld	r20, Y+
     f1c:	59 91       	ld	r21, Y+
     f1e:	c4 0f       	add	r28, r20
     f20:	d5 1f       	adc	r29, r21
     f22:	ec 17       	cp	r30, r28
     f24:	fd 07       	cpc	r31, r29
     f26:	61 f4       	brne	.+24     	; 0xf40 <free+0xbe>
     f28:	80 81       	ld	r24, Z
     f2a:	91 81       	ldd	r25, Z+1	; 0x01
     f2c:	84 0f       	add	r24, r20
     f2e:	95 1f       	adc	r25, r21
     f30:	02 96       	adiw	r24, 0x02	; 2
     f32:	e9 01       	movw	r28, r18
     f34:	99 83       	std	Y+1, r25	; 0x01
     f36:	88 83       	st	Y, r24
     f38:	82 81       	ldd	r24, Z+2	; 0x02
     f3a:	93 81       	ldd	r25, Z+3	; 0x03
     f3c:	9b 83       	std	Y+3, r25	; 0x03
     f3e:	8a 83       	std	Y+2, r24	; 0x02
     f40:	e0 e0       	ldi	r30, 0x00	; 0
     f42:	f0 e0       	ldi	r31, 0x00	; 0
     f44:	12 96       	adiw	r26, 0x02	; 2
     f46:	8d 91       	ld	r24, X+
     f48:	9c 91       	ld	r25, X
     f4a:	13 97       	sbiw	r26, 0x03	; 3
     f4c:	00 97       	sbiw	r24, 0x00	; 0
     f4e:	19 f0       	breq	.+6      	; 0xf56 <free+0xd4>
     f50:	fd 01       	movw	r30, r26
     f52:	dc 01       	movw	r26, r24
     f54:	f7 cf       	rjmp	.-18     	; 0xf44 <free+0xc2>
     f56:	8d 91       	ld	r24, X+
     f58:	9c 91       	ld	r25, X
     f5a:	11 97       	sbiw	r26, 0x01	; 1
     f5c:	9d 01       	movw	r18, r26
     f5e:	2e 5f       	subi	r18, 0xFE	; 254
     f60:	3f 4f       	sbci	r19, 0xFF	; 255
     f62:	82 0f       	add	r24, r18
     f64:	93 1f       	adc	r25, r19
     f66:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <__brkval>
     f6a:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <__brkval+0x1>
     f6e:	28 17       	cp	r18, r24
     f70:	39 07       	cpc	r19, r25
     f72:	69 f4       	brne	.+26     	; 0xf8e <free+0x10c>
     f74:	30 97       	sbiw	r30, 0x00	; 0
     f76:	29 f4       	brne	.+10     	; 0xf82 <free+0x100>
     f78:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <__flp+0x1>
     f7c:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <__flp>
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <free+0x104>
     f82:	13 82       	std	Z+3, r1	; 0x03
     f84:	12 82       	std	Z+2, r1	; 0x02
     f86:	b0 93 a2 01 	sts	0x01A2, r27	; 0x8001a2 <__brkval+0x1>
     f8a:	a0 93 a1 01 	sts	0x01A1, r26	; 0x8001a1 <__brkval>
     f8e:	df 91       	pop	r29
     f90:	cf 91       	pop	r28
     f92:	08 95       	ret

00000f94 <strnlen_P>:
     f94:	fc 01       	movw	r30, r24
     f96:	05 90       	lpm	r0, Z+
     f98:	61 50       	subi	r22, 0x01	; 1
     f9a:	70 40       	sbci	r23, 0x00	; 0
     f9c:	01 10       	cpse	r0, r1
     f9e:	d8 f7       	brcc	.-10     	; 0xf96 <strnlen_P+0x2>
     fa0:	80 95       	com	r24
     fa2:	90 95       	com	r25
     fa4:	8e 0f       	add	r24, r30
     fa6:	9f 1f       	adc	r25, r31
     fa8:	08 95       	ret

00000faa <memset>:
     faa:	dc 01       	movw	r26, r24
     fac:	01 c0       	rjmp	.+2      	; 0xfb0 <memset+0x6>
     fae:	6d 93       	st	X+, r22
     fb0:	41 50       	subi	r20, 0x01	; 1
     fb2:	50 40       	sbci	r21, 0x00	; 0
     fb4:	e0 f7       	brcc	.-8      	; 0xfae <memset+0x4>
     fb6:	08 95       	ret

00000fb8 <strnlen>:
     fb8:	fc 01       	movw	r30, r24
     fba:	61 50       	subi	r22, 0x01	; 1
     fbc:	70 40       	sbci	r23, 0x00	; 0
     fbe:	01 90       	ld	r0, Z+
     fc0:	01 10       	cpse	r0, r1
     fc2:	d8 f7       	brcc	.-10     	; 0xfba <strnlen+0x2>
     fc4:	80 95       	com	r24
     fc6:	90 95       	com	r25
     fc8:	8e 0f       	add	r24, r30
     fca:	9f 1f       	adc	r25, r31
     fcc:	08 95       	ret

00000fce <fputc>:
     fce:	0f 93       	push	r16
     fd0:	1f 93       	push	r17
     fd2:	cf 93       	push	r28
     fd4:	df 93       	push	r29
     fd6:	fb 01       	movw	r30, r22
     fd8:	23 81       	ldd	r18, Z+3	; 0x03
     fda:	21 fd       	sbrc	r18, 1
     fdc:	03 c0       	rjmp	.+6      	; 0xfe4 <fputc+0x16>
     fde:	8f ef       	ldi	r24, 0xFF	; 255
     fe0:	9f ef       	ldi	r25, 0xFF	; 255
     fe2:	2c c0       	rjmp	.+88     	; 0x103c <fputc+0x6e>
     fe4:	22 ff       	sbrs	r18, 2
     fe6:	16 c0       	rjmp	.+44     	; 0x1014 <fputc+0x46>
     fe8:	46 81       	ldd	r20, Z+6	; 0x06
     fea:	57 81       	ldd	r21, Z+7	; 0x07
     fec:	24 81       	ldd	r18, Z+4	; 0x04
     fee:	35 81       	ldd	r19, Z+5	; 0x05
     ff0:	42 17       	cp	r20, r18
     ff2:	53 07       	cpc	r21, r19
     ff4:	44 f4       	brge	.+16     	; 0x1006 <fputc+0x38>
     ff6:	a0 81       	ld	r26, Z
     ff8:	b1 81       	ldd	r27, Z+1	; 0x01
     ffa:	9d 01       	movw	r18, r26
     ffc:	2f 5f       	subi	r18, 0xFF	; 255
     ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    1000:	31 83       	std	Z+1, r19	; 0x01
    1002:	20 83       	st	Z, r18
    1004:	8c 93       	st	X, r24
    1006:	26 81       	ldd	r18, Z+6	; 0x06
    1008:	37 81       	ldd	r19, Z+7	; 0x07
    100a:	2f 5f       	subi	r18, 0xFF	; 255
    100c:	3f 4f       	sbci	r19, 0xFF	; 255
    100e:	37 83       	std	Z+7, r19	; 0x07
    1010:	26 83       	std	Z+6, r18	; 0x06
    1012:	14 c0       	rjmp	.+40     	; 0x103c <fputc+0x6e>
    1014:	8b 01       	movw	r16, r22
    1016:	ec 01       	movw	r28, r24
    1018:	fb 01       	movw	r30, r22
    101a:	00 84       	ldd	r0, Z+8	; 0x08
    101c:	f1 85       	ldd	r31, Z+9	; 0x09
    101e:	e0 2d       	mov	r30, r0
    1020:	09 95       	icall
    1022:	89 2b       	or	r24, r25
    1024:	e1 f6       	brne	.-72     	; 0xfde <fputc+0x10>
    1026:	d8 01       	movw	r26, r16
    1028:	16 96       	adiw	r26, 0x06	; 6
    102a:	8d 91       	ld	r24, X+
    102c:	9c 91       	ld	r25, X
    102e:	17 97       	sbiw	r26, 0x07	; 7
    1030:	01 96       	adiw	r24, 0x01	; 1
    1032:	17 96       	adiw	r26, 0x07	; 7
    1034:	9c 93       	st	X, r25
    1036:	8e 93       	st	-X, r24
    1038:	16 97       	sbiw	r26, 0x06	; 6
    103a:	ce 01       	movw	r24, r28
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	1f 91       	pop	r17
    1042:	0f 91       	pop	r16
    1044:	08 95       	ret

00001046 <__ultoa_invert>:
    1046:	fa 01       	movw	r30, r20
    1048:	aa 27       	eor	r26, r26
    104a:	28 30       	cpi	r18, 0x08	; 8
    104c:	51 f1       	breq	.+84     	; 0x10a2 <__ultoa_invert+0x5c>
    104e:	20 31       	cpi	r18, 0x10	; 16
    1050:	81 f1       	breq	.+96     	; 0x10b2 <__ultoa_invert+0x6c>
    1052:	e8 94       	clt
    1054:	6f 93       	push	r22
    1056:	6e 7f       	andi	r22, 0xFE	; 254
    1058:	6e 5f       	subi	r22, 0xFE	; 254
    105a:	7f 4f       	sbci	r23, 0xFF	; 255
    105c:	8f 4f       	sbci	r24, 0xFF	; 255
    105e:	9f 4f       	sbci	r25, 0xFF	; 255
    1060:	af 4f       	sbci	r26, 0xFF	; 255
    1062:	b1 e0       	ldi	r27, 0x01	; 1
    1064:	3e d0       	rcall	.+124    	; 0x10e2 <__ultoa_invert+0x9c>
    1066:	b4 e0       	ldi	r27, 0x04	; 4
    1068:	3c d0       	rcall	.+120    	; 0x10e2 <__ultoa_invert+0x9c>
    106a:	67 0f       	add	r22, r23
    106c:	78 1f       	adc	r23, r24
    106e:	89 1f       	adc	r24, r25
    1070:	9a 1f       	adc	r25, r26
    1072:	a1 1d       	adc	r26, r1
    1074:	68 0f       	add	r22, r24
    1076:	79 1f       	adc	r23, r25
    1078:	8a 1f       	adc	r24, r26
    107a:	91 1d       	adc	r25, r1
    107c:	a1 1d       	adc	r26, r1
    107e:	6a 0f       	add	r22, r26
    1080:	71 1d       	adc	r23, r1
    1082:	81 1d       	adc	r24, r1
    1084:	91 1d       	adc	r25, r1
    1086:	a1 1d       	adc	r26, r1
    1088:	20 d0       	rcall	.+64     	; 0x10ca <__ultoa_invert+0x84>
    108a:	09 f4       	brne	.+2      	; 0x108e <__ultoa_invert+0x48>
    108c:	68 94       	set
    108e:	3f 91       	pop	r19
    1090:	2a e0       	ldi	r18, 0x0A	; 10
    1092:	26 9f       	mul	r18, r22
    1094:	11 24       	eor	r1, r1
    1096:	30 19       	sub	r19, r0
    1098:	30 5d       	subi	r19, 0xD0	; 208
    109a:	31 93       	st	Z+, r19
    109c:	de f6       	brtc	.-74     	; 0x1054 <__ultoa_invert+0xe>
    109e:	cf 01       	movw	r24, r30
    10a0:	08 95       	ret
    10a2:	46 2f       	mov	r20, r22
    10a4:	47 70       	andi	r20, 0x07	; 7
    10a6:	40 5d       	subi	r20, 0xD0	; 208
    10a8:	41 93       	st	Z+, r20
    10aa:	b3 e0       	ldi	r27, 0x03	; 3
    10ac:	0f d0       	rcall	.+30     	; 0x10cc <__ultoa_invert+0x86>
    10ae:	c9 f7       	brne	.-14     	; 0x10a2 <__ultoa_invert+0x5c>
    10b0:	f6 cf       	rjmp	.-20     	; 0x109e <__ultoa_invert+0x58>
    10b2:	46 2f       	mov	r20, r22
    10b4:	4f 70       	andi	r20, 0x0F	; 15
    10b6:	40 5d       	subi	r20, 0xD0	; 208
    10b8:	4a 33       	cpi	r20, 0x3A	; 58
    10ba:	18 f0       	brcs	.+6      	; 0x10c2 <__ultoa_invert+0x7c>
    10bc:	49 5d       	subi	r20, 0xD9	; 217
    10be:	31 fd       	sbrc	r19, 1
    10c0:	40 52       	subi	r20, 0x20	; 32
    10c2:	41 93       	st	Z+, r20
    10c4:	02 d0       	rcall	.+4      	; 0x10ca <__ultoa_invert+0x84>
    10c6:	a9 f7       	brne	.-22     	; 0x10b2 <__ultoa_invert+0x6c>
    10c8:	ea cf       	rjmp	.-44     	; 0x109e <__ultoa_invert+0x58>
    10ca:	b4 e0       	ldi	r27, 0x04	; 4
    10cc:	a6 95       	lsr	r26
    10ce:	97 95       	ror	r25
    10d0:	87 95       	ror	r24
    10d2:	77 95       	ror	r23
    10d4:	67 95       	ror	r22
    10d6:	ba 95       	dec	r27
    10d8:	c9 f7       	brne	.-14     	; 0x10cc <__ultoa_invert+0x86>
    10da:	00 97       	sbiw	r24, 0x00	; 0
    10dc:	61 05       	cpc	r22, r1
    10de:	71 05       	cpc	r23, r1
    10e0:	08 95       	ret
    10e2:	9b 01       	movw	r18, r22
    10e4:	ac 01       	movw	r20, r24
    10e6:	0a 2e       	mov	r0, r26
    10e8:	06 94       	lsr	r0
    10ea:	57 95       	ror	r21
    10ec:	47 95       	ror	r20
    10ee:	37 95       	ror	r19
    10f0:	27 95       	ror	r18
    10f2:	ba 95       	dec	r27
    10f4:	c9 f7       	brne	.-14     	; 0x10e8 <__ultoa_invert+0xa2>
    10f6:	62 0f       	add	r22, r18
    10f8:	73 1f       	adc	r23, r19
    10fa:	84 1f       	adc	r24, r20
    10fc:	95 1f       	adc	r25, r21
    10fe:	a0 1d       	adc	r26, r0
    1100:	08 95       	ret

00001102 <__prologue_saves__>:
    1102:	2f 92       	push	r2
    1104:	3f 92       	push	r3
    1106:	4f 92       	push	r4
    1108:	5f 92       	push	r5
    110a:	6f 92       	push	r6
    110c:	7f 92       	push	r7
    110e:	8f 92       	push	r8
    1110:	9f 92       	push	r9
    1112:	af 92       	push	r10
    1114:	bf 92       	push	r11
    1116:	cf 92       	push	r12
    1118:	df 92       	push	r13
    111a:	ef 92       	push	r14
    111c:	ff 92       	push	r15
    111e:	0f 93       	push	r16
    1120:	1f 93       	push	r17
    1122:	cf 93       	push	r28
    1124:	df 93       	push	r29
    1126:	cd b7       	in	r28, 0x3d	; 61
    1128:	de b7       	in	r29, 0x3e	; 62
    112a:	ca 1b       	sub	r28, r26
    112c:	db 0b       	sbc	r29, r27
    112e:	0f b6       	in	r0, 0x3f	; 63
    1130:	f8 94       	cli
    1132:	de bf       	out	0x3e, r29	; 62
    1134:	0f be       	out	0x3f, r0	; 63
    1136:	cd bf       	out	0x3d, r28	; 61
    1138:	09 94       	ijmp

0000113a <__epilogue_restores__>:
    113a:	2a 88       	ldd	r2, Y+18	; 0x12
    113c:	39 88       	ldd	r3, Y+17	; 0x11
    113e:	48 88       	ldd	r4, Y+16	; 0x10
    1140:	5f 84       	ldd	r5, Y+15	; 0x0f
    1142:	6e 84       	ldd	r6, Y+14	; 0x0e
    1144:	7d 84       	ldd	r7, Y+13	; 0x0d
    1146:	8c 84       	ldd	r8, Y+12	; 0x0c
    1148:	9b 84       	ldd	r9, Y+11	; 0x0b
    114a:	aa 84       	ldd	r10, Y+10	; 0x0a
    114c:	b9 84       	ldd	r11, Y+9	; 0x09
    114e:	c8 84       	ldd	r12, Y+8	; 0x08
    1150:	df 80       	ldd	r13, Y+7	; 0x07
    1152:	ee 80       	ldd	r14, Y+6	; 0x06
    1154:	fd 80       	ldd	r15, Y+5	; 0x05
    1156:	0c 81       	ldd	r16, Y+4	; 0x04
    1158:	1b 81       	ldd	r17, Y+3	; 0x03
    115a:	aa 81       	ldd	r26, Y+2	; 0x02
    115c:	b9 81       	ldd	r27, Y+1	; 0x01
    115e:	ce 0f       	add	r28, r30
    1160:	d1 1d       	adc	r29, r1
    1162:	0f b6       	in	r0, 0x3f	; 63
    1164:	f8 94       	cli
    1166:	de bf       	out	0x3e, r29	; 62
    1168:	0f be       	out	0x3f, r0	; 63
    116a:	cd bf       	out	0x3d, r28	; 61
    116c:	ed 01       	movw	r28, r26
    116e:	08 95       	ret

00001170 <_exit>:
    1170:	f8 94       	cli

00001172 <__stop_program>:
    1172:	ff cf       	rjmp	.-2      	; 0x1172 <__stop_program>
