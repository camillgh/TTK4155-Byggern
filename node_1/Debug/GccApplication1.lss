
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  00000dce  00000e62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  0080017e  0080017e  00000ee0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ee0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001aaf  00000000  00000000  00001138  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001067  00000000  00000000  00002be7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fcb  00000000  00000000  00003c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a8  00000000  00000000  00004c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000757  00000000  00000000  00004fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ba  00000000  00000000  0000571b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  000060d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee ec       	ldi	r30, 0xCE	; 206
  84:	fd e0       	ldi	r31, 0x0D	; 13
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 37       	cpi	r26, 0x7E	; 126
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ae e7       	ldi	r26, 0x7E	; 126
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ad 3b       	cpi	r26, 0xBD	; 189
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  a6:	0c 94 e5 06 	jmp	0xdca	; 0xdca <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
}

void adc_write(uint8_t data, uint16_t addr)
{
	volatile char *ext_ram = (char *) 0x1400;
	ext_ram[addr] = data;
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
  ba:	30 98       	cbi	0x06, 0	; 6
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <adc_clock_signal>:
  c2:	b8 9a       	sbi	0x17, 0	; 23
  c4:	83 b7       	in	r24, 0x33	; 51
  c6:	88 60       	ori	r24, 0x08	; 8
  c8:	83 bf       	out	0x33, r24	; 51
  ca:	83 b7       	in	r24, 0x33	; 51
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	83 bf       	out	0x33, r24	; 51
  d0:	83 b7       	in	r24, 0x33	; 51
  d2:	80 61       	ori	r24, 0x10	; 16
  d4:	83 bf       	out	0x33, r24	; 51
  d6:	83 b7       	in	r24, 0x33	; 51
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	83 bf       	out	0x33, r24	; 51
  dc:	8a e0       	ldi	r24, 0x0A	; 10
  de:	81 bf       	out	0x31, r24	; 49
  e0:	08 95       	ret

000000e2 <adc_read>:

uint8_t adc_read(uint8_t channel){
	volatile char *adc = (char *) 0x1400;
	uint8_t data;
	
	adc[0] = 0b10000000 | channel;
  e2:	80 68       	ori	r24, 0x80	; 128
  e4:	e0 e0       	ldi	r30, 0x00	; 0
  e6:	f4 e1       	ldi	r31, 0x14	; 20
  e8:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ea:	84 ea       	ldi	r24, 0xA4	; 164
  ec:	8a 95       	dec	r24
  ee:	f1 f7       	brne	.-4      	; 0xec <adc_read+0xa>

	_delay_us(100);
	
	data = adc[0];
  f0:	80 81       	ld	r24, Z
	
	return data;
}
  f2:	08 95       	ret

000000f4 <joystick_calibration>:
	printf("Dir: %d", position.position_y);
	return position;
	
};*/

void joystick_calibration(void){
  f4:	cf 93       	push	r28
	
	uint8_t x,y;
	
	x = adc_read(0);
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
  fe:	c8 2f       	mov	r28, r24
	y = adc_read(1);
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 71 00 	call	0xe2	; 0xe2 <adc_read>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 108:	ec ec       	ldi	r30, 0xCC	; 204
 10a:	f4 e0       	ldi	r31, 0x04	; 4
 10c:	31 97       	sbiw	r30, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <joystick_calibration+0x18>
 110:	00 c0       	rjmp	.+0      	; 0x112 <joystick_calibration+0x1e>
 112:	00 00       	nop
	_delay_ms(1);
	x_mid = x;
 114:	c0 93 7f 01 	sts	0x017F, r28	; 0x80017f <x_mid>
	y_mid = y;
 118:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__data_end>
}
 11c:	cf 91       	pop	r28
 11e:	08 95       	ret

00000120 <joystick_init>:
	
	// Initialize external units
	//adc_init();
	
	// Set PINB1, PINB2 and PINB3 as inputs
	DDRB &= ~(1<<PINB1) & ~(1<<PINB2) & ~(1<<PINB3);
 120:	87 b3       	in	r24, 0x17	; 23
 122:	81 7f       	andi	r24, 0xF1	; 241
 124:	87 bb       	out	0x17, r24	; 23
	
	// Calibrate joystick
	joystick_calibration();
 126:	0e 94 7a 00 	call	0xf4	; 0xf4 <joystick_calibration>
 12a:	08 95       	ret

0000012c <main>:

void main(void){

	joystick_position j_position;
	slider_position s_position;
	adc_init();
 12c:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	USART_init(MYUBRR);
 130:	8f e1       	ldi	r24, 0x1F	; 31
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <USART_init>
	adc_clock_signal();
 138:	0e 94 61 00 	call	0xc2	; 0xc2 <adc_clock_signal>
	joystick_init();
 13c:	0e 94 90 00 	call	0x120	; 0x120 <joystick_init>
	SRAM_init();
 140:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <SRAM_init>

	oled_init();
 144:	0e 94 92 01 	call	0x324	; 0x324 <oled_init>
	oled_reset();
 148:	0e 94 86 01 	call	0x30c	; 0x30c <oled_reset>
	oled_pos(0,0);	
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	0e 94 31 02 	call	0x462	; 0x462 <oled_pos>
	
	spi_init();
 154:	0e 94 4a 02 	call	0x494	; 0x494 <spi_init>

	menu_init();
 158:	0e 94 da 00 	call	0x1b4	; 0x1b4 <menu_init>
	

	//update_currentmenu();
	//SRAM_test();
	
	spi_send(MCP_WRITE);
 15c:	82 e0       	ldi	r24, 0x02	; 2
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
	spi_send(MCP_CANCTRL);
 164:	8f e0       	ldi	r24, 0x0F	; 15
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
	spi_send(MODE_LOOPBACK);
 16c:	80 e4       	ldi	r24, 0x40	; 64
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
		spi_send(MODE_LOOPBACK);
		
		char data;
		spi_send(170);
		data = spi_receive();
		printf("%d \n \r", data);
 174:	ca e0       	ldi	r28, 0x0A	; 10
 176:	d1 e0       	ldi	r29, 0x01	; 1

		_delay_ms(1000); */
		
		// Assignment 5
		
		spi_send(MCP_WRITE);
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
		spi_send(MCP_CANCTRL);
 180:	8f e0       	ldi	r24, 0x0F	; 15
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
		spi_send(MODE_LOOPBACK);
 188:	80 e4       	ldi	r24, 0x40	; 64
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
		
		char data;
		spi_send(170);
 190:	8a ea       	ldi	r24, 0xAA	; 170
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
		data = spi_receive();
 198:	0e 94 54 02 	call	0x4a8	; 0x4a8 <spi_receive>
		printf("%d \n \r", data);
 19c:	99 27       	eor	r25, r25
 19e:	9f 93       	push	r25
 1a0:	8f 93       	push	r24
 1a2:	df 93       	push	r29
 1a4:	cf 93       	push	r28
 1a6:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	e2 cf       	rjmp	.-60     	; 0x178 <main+0x4c>

000001b4 <menu_init>:
#include <util/delay.h>

menu main, start_game, options, high_score;
uint8_t cursor_page;

void menu_init(void){
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
	main.name = "Main Menu";
 1b8:	ec e2       	ldi	r30, 0x2C	; 44
 1ba:	f1 e0       	ldi	r31, 0x01	; 1
 1bc:	81 e1       	ldi	r24, 0x11	; 17
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	91 83       	std	Z+1, r25	; 0x01
 1c2:	80 83       	st	Z, r24
	main.parent = NULL;
 1c4:	13 82       	std	Z+3, r1	; 0x03
 1c6:	12 82       	std	Z+2, r1	; 0x02
	main.children[0] = &start_game;
 1c8:	88 e9       	ldi	r24, 0x98	; 152
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	95 83       	std	Z+5, r25	; 0x05
 1ce:	84 83       	std	Z+4, r24	; 0x04
	main.children[1] = &options;
 1d0:	c4 ea       	ldi	r28, 0xA4	; 164
 1d2:	d1 e0       	ldi	r29, 0x01	; 1
 1d4:	d7 83       	std	Z+7, r29	; 0x07
 1d6:	c6 83       	std	Z+6, r28	; 0x06
	main.children[2] = &high_score;
 1d8:	4c e8       	ldi	r20, 0x8C	; 140
 1da:	51 e0       	ldi	r21, 0x01	; 1
 1dc:	51 87       	std	Z+9, r21	; 0x09
 1de:	40 87       	std	Z+8, r20	; 0x08
	main.children[3] = NULL;
 1e0:	13 86       	std	Z+11, r1	; 0x0b
 1e2:	12 86       	std	Z+10, r1	; 0x0a

	start_game.name = "Start Game";
 1e4:	2b e1       	ldi	r18, 0x1B	; 27
 1e6:	31 e0       	ldi	r19, 0x01	; 1
 1e8:	dc 01       	movw	r26, r24
 1ea:	11 96       	adiw	r26, 0x01	; 1
 1ec:	3c 93       	st	X, r19
 1ee:	2e 93       	st	-X, r18
	start_game.parent = &main;
 1f0:	13 96       	adiw	r26, 0x03	; 3
 1f2:	fc 93       	st	X, r31
 1f4:	ee 93       	st	-X, r30
 1f6:	12 97       	sbiw	r26, 0x02	; 2
	start_game.children[0] = NULL;
 1f8:	15 96       	adiw	r26, 0x05	; 5
 1fa:	1c 92       	st	X, r1
 1fc:	1e 92       	st	-X, r1
 1fe:	14 97       	sbiw	r26, 0x04	; 4
	start_game.children[1] = NULL;
 200:	17 96       	adiw	r26, 0x07	; 7
 202:	1c 92       	st	X, r1
 204:	1e 92       	st	-X, r1
 206:	16 97       	sbiw	r26, 0x06	; 6
	start_game.children[2] = NULL;
 208:	19 96       	adiw	r26, 0x09	; 9
 20a:	1c 92       	st	X, r1
 20c:	1e 92       	st	-X, r1
 20e:	18 97       	sbiw	r26, 0x08	; 8

	options.name = "Options";
 210:	86 e2       	ldi	r24, 0x26	; 38
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	99 83       	std	Y+1, r25	; 0x01
 216:	88 83       	st	Y, r24
	options.parent = &main;
 218:	fb 83       	std	Y+3, r31	; 0x03
 21a:	ea 83       	std	Y+2, r30	; 0x02
	options.children[0] = NULL;
 21c:	1d 82       	std	Y+5, r1	; 0x05
 21e:	1c 82       	std	Y+4, r1	; 0x04
	options.children[1] = NULL;
 220:	1f 82       	std	Y+7, r1	; 0x07
 222:	1e 82       	std	Y+6, r1	; 0x06
	options.children[2] = NULL;
 224:	19 86       	std	Y+9, r1	; 0x09
 226:	18 86       	std	Y+8, r1	; 0x08

	high_score.name = "High Scores";
 228:	8e e2       	ldi	r24, 0x2E	; 46
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	da 01       	movw	r26, r20
 22e:	11 96       	adiw	r26, 0x01	; 1
 230:	9c 93       	st	X, r25
 232:	8e 93       	st	-X, r24
	high_score.parent = &main;
 234:	13 96       	adiw	r26, 0x03	; 3
 236:	fc 93       	st	X, r31
 238:	ee 93       	st	-X, r30
 23a:	12 97       	sbiw	r26, 0x02	; 2
	high_score.children[0] = NULL;
 23c:	15 96       	adiw	r26, 0x05	; 5
 23e:	1c 92       	st	X, r1
 240:	1e 92       	st	-X, r1
 242:	14 97       	sbiw	r26, 0x04	; 4
	high_score.children[1] = NULL;
 244:	17 96       	adiw	r26, 0x07	; 7
 246:	1c 92       	st	X, r1
 248:	1e 92       	st	-X, r1
 24a:	16 97       	sbiw	r26, 0x06	; 6
	high_score.children[2] = NULL;
 24c:	19 96       	adiw	r26, 0x09	; 9
 24e:	1c 92       	st	X, r1
 250:	1e 92       	st	-X, r1
 252:	18 97       	sbiw	r26, 0x08	; 8
	
	current_menu = main;
 254:	8c e0       	ldi	r24, 0x0C	; 12
 256:	a0 e8       	ldi	r26, 0x80	; 128
 258:	b1 e0       	ldi	r27, 0x01	; 1
 25a:	01 90       	ld	r0, Z+
 25c:	0d 92       	st	X+, r0
 25e:	8a 95       	dec	r24
 260:	e1 f7       	brne	.-8      	; 0x25a <menu_init+0xa6>
	cursor_page = 2;
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <cursor_page>
};
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	08 95       	ret

0000026e <oled_home>:
}

int oled_home(void) {

	//Reset the global variables page and column
	page = 0;
 26e:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <page>
	col = 0;
 272:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <col>
	
	//Set the cursor to the start of the oled display:

	//Setup column start and end address
	*oled_command = 0x21;
 276:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 27a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 27e:	81 e2       	ldi	r24, 0x21	; 33
 280:	80 83       	st	Z, r24
	*oled_command = 0x00;
 282:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 286:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 28a:	10 82       	st	Z, r1
	*oled_command = 0x7F;
 28c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 290:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 294:	8f e7       	ldi	r24, 0x7F	; 127
 296:	80 83       	st	Z, r24
	
	// Setup page start and end address
	*oled_command = 0x22;
 298:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 29c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 2a0:	82 e2       	ldi	r24, 0x22	; 34
 2a2:	80 83       	st	Z, r24
	*oled_command = 0x00;
 2a4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 2a8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 2ac:	10 82       	st	Z, r1
	*oled_command = 0x7;
 2ae:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 2b2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 2b6:	87 e0       	ldi	r24, 0x07	; 7
 2b8:	80 83       	st	Z, r24
	
	return 0;
	
}
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	08 95       	ret

000002c0 <oled_goto_line>:


int oled_goto_line(uint8_t line) {
	
	//Set the global variable page 
	page = line;
 2c0:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <page>

	//Set lower column address
	*oled_command = 0x00;
 2c4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 2c8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 2cc:	10 82       	st	Z, r1
	
	//Set higher column address
	*oled_command = 0x10;
 2ce:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 2d2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 2d6:	90 e1       	ldi	r25, 0x10	; 16
 2d8:	90 83       	st	Z, r25
	
	//Set page address
	*oled_command = 0xB0 + line;
 2da:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 2de:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 2e2:	80 55       	subi	r24, 0x50	; 80
 2e4:	80 83       	st	Z, r24

	return 0;
}
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	08 95       	ret

000002ec <oled_clear_line>:
}

// Function to clear a line on oled
int oled_clear_line(uint8_t line) {

	oled_goto_line(line);
 2ec:	0e 94 60 01 	call	0x2c0	; 0x2c0 <oled_goto_line>
 2f0:	80 e8       	ldi	r24, 0x80	; 128
 2f2:	90 e0       	ldi	r25, 0x00	; 0
	
	//Clear the line
	for (int i = 0; i < 128; i++) {
		*oled_data=0x00;
 2f4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_data>
 2f8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_data+0x1>
 2fc:	10 82       	st	Z, r1
 2fe:	01 97       	sbiw	r24, 0x01	; 1
int oled_clear_line(uint8_t line) {

	oled_goto_line(line);
	
	//Clear the line
	for (int i = 0; i < 128; i++) {
 300:	c9 f7       	brne	.-14     	; 0x2f4 <oled_clear_line+0x8>
		*oled_data=0x00;
	}
	
	// Set cursor to the start of the screen
	oled_home();
 302:	0e 94 37 01 	call	0x26e	; 0x26e <oled_home>

	return 0;

}
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	08 95       	ret

0000030c <oled_reset>:
	return 0;
	
}

// Function to reset every line
int oled_reset(void) {
 30c:	cf 93       	push	r28
 30e:	c0 e0       	ldi	r28, 0x00	; 0

	int line = 8;
	
	for (uint8_t i = 0; i < line; i++) {
		oled_clear_line(i);
 310:	8c 2f       	mov	r24, r28
 312:	0e 94 76 01 	call	0x2ec	; 0x2ec <oled_clear_line>
// Function to reset every line
int oled_reset(void) {

	int line = 8;
	
	for (uint8_t i = 0; i < line; i++) {
 316:	cf 5f       	subi	r28, 0xFF	; 255
 318:	c8 30       	cpi	r28, 0x08	; 8
 31a:	d1 f7       	brne	.-12     	; 0x310 <oled_reset+0x4>
		oled_clear_line(i);
	}
	return 0;
}
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	cf 91       	pop	r28
 322:	08 95       	ret

00000324 <oled_init>:
uint8_t col, page;


void oled_init(void){
	// Enable external memory
	MCUCR |= (1 << SRE);
 324:	85 b7       	in	r24, 0x35	; 53
 326:	80 68       	ori	r24, 0x80	; 128
 328:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);
 32a:	80 b7       	in	r24, 0x30	; 48
 32c:	80 62       	ori	r24, 0x20	; 32
 32e:	80 bf       	out	0x30, r24	; 48
	
	// Display off
	*oled_command = 0xAE;
 330:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 334:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 338:	8e ea       	ldi	r24, 0xAE	; 174
 33a:	80 83       	st	Z, r24
	
	//Segment remap
	*oled_command = 0xA1;
 33c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 340:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 344:	81 ea       	ldi	r24, 0xA1	; 161
 346:	80 83       	st	Z, r24
	
	//Common pads hardware: alternative
	*oled_command = 0xDA;
 348:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 34c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 350:	8a ed       	ldi	r24, 0xDA	; 218
 352:	80 83       	st	Z, r24
	*oled_command = 0x12;
 354:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 358:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 35c:	82 e1       	ldi	r24, 0x12	; 18
 35e:	80 83       	st	Z, r24
	
	// Common output scan direction: com63~com0
	*oled_command = 0xC8;
 360:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 364:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 368:	88 ec       	ldi	r24, 0xC8	; 200
 36a:	80 83       	st	Z, r24
	
	// Mulitplex ration mode: 63
	*oled_command = 0xA8;
 36c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 370:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 374:	88 ea       	ldi	r24, 0xA8	; 168
 376:	80 83       	st	Z, r24
	*oled_command = 0x3F;
 378:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 37c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 380:	8f e3       	ldi	r24, 0x3F	; 63
 382:	80 83       	st	Z, r24
	
	// Display divide ratio/osc. freq. mode
	*oled_command = 0xD5;
 384:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 388:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 38c:	85 ed       	ldi	r24, 0xD5	; 213
 38e:	80 83       	st	Z, r24
	*oled_command = 0x80;
 390:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 394:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 398:	80 e8       	ldi	r24, 0x80	; 128
 39a:	80 83       	st	Z, r24
	
	// Contrast control
	*oled_command = 0x81;
 39c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3a0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3a4:	81 e8       	ldi	r24, 0x81	; 129
 3a6:	80 83       	st	Z, r24
	*oled_command = 0x50;
 3a8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3ac:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3b0:	80 e5       	ldi	r24, 0x50	; 80
 3b2:	80 83       	st	Z, r24
	
	// Set pre-charged period
	*oled_command = 0xD9;
 3b4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3b8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3bc:	89 ed       	ldi	r24, 0xD9	; 217
 3be:	80 83       	st	Z, r24
	*oled_command = 0x21;
 3c0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3c4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3c8:	81 e2       	ldi	r24, 0x21	; 33
 3ca:	80 83       	st	Z, r24
	
	// Set Memory Adressing mode
	*oled_command = 0x20;
 3cc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3d0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3d4:	80 e2       	ldi	r24, 0x20	; 32
 3d6:	80 83       	st	Z, r24
	*oled_command = 0x02;
 3d8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3dc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3e0:	82 e0       	ldi	r24, 0x02	; 2
 3e2:	80 83       	st	Z, r24
	
	// VCOM deselect level mode
	*oled_command = 0xDB;
 3e4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3e8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3ec:	8b ed       	ldi	r24, 0xDB	; 219
 3ee:	80 83       	st	Z, r24
	*oled_command = 0x30;
 3f0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 3f4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 3f8:	80 e3       	ldi	r24, 0x30	; 48
 3fa:	80 83       	st	Z, r24
	
	// Master configuration 
	*oled_command = 0xAD;
 3fc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 400:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 404:	8d ea       	ldi	r24, 0xAD	; 173
 406:	80 83       	st	Z, r24
	*oled_command = 0x00;
 408:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 40c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 410:	10 82       	st	Z, r1
	
	// Out follows RAM content
	*oled_command = 0xA4;
 412:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 416:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 41a:	84 ea       	ldi	r24, 0xA4	; 164
 41c:	80 83       	st	Z, r24
	
	// Set normal display 
	*oled_command = 0xA6;
 41e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 422:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 426:	86 ea       	ldi	r24, 0xA6	; 166
 428:	80 83       	st	Z, r24
	
	// Display On
	*oled_command = 0xAF;
 42a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 42e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 432:	8f ea       	ldi	r24, 0xAF	; 175
 434:	80 83       	st	Z, r24
	
	//Set page start address
	*oled_command = 0xB0;
 436:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 43a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 43e:	80 eb       	ldi	r24, 0xB0	; 176
 440:	80 83       	st	Z, r24
	//Set lower column start address
	*oled_command = 0x00;
 442:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 446:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 44a:	10 82       	st	Z, r1
	//Set higher column start address
	*oled_command = 0x10;
 44c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 450:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 454:	80 e1       	ldi	r24, 0x10	; 16
 456:	80 83       	st	Z, r24
	
	// Clear screen
	oled_reset();
 458:	0e 94 86 01 	call	0x30c	; 0x30c <oled_reset>

	// Set cursor to the start of the screen
	oled_home();
 45c:	0e 94 37 01 	call	0x26e	; 0x26e <oled_home>
 460:	08 95       	ret

00000462 <oled_pos>:
	*oled_command = 0xB0 + line;

	return 0;
}

int oled_pos(uint8_t line, uint8_t column) {
 462:	cf 93       	push	r28
 464:	c6 2f       	mov	r28, r22
	
	oled_goto_line(line);
 466:	0e 94 60 01 	call	0x2c0	; 0x2c0 <oled_goto_line>
	
	//Set the global variable col
	col = column;
 46a:	c0 93 b1 01 	sts	0x01B1, r28	; 0x8001b1 <col>

	//Set lower column start address
	*oled_command = 0x00 + ((column*FONTWIDTH)>>4);
 46e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 472:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 476:	6c 2f       	mov	r22, r28
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	76 95       	lsr	r23
 47c:	67 95       	ror	r22
 47e:	60 83       	st	Z, r22
		
	//Set higher column start address
	*oled_command = 0x10 + ((column*FONTWIDTH)>>4);
 480:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
 484:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
 488:	60 5f       	subi	r22, 0xF0	; 240
 48a:	60 83       	st	Z, r22
	
	return 0;
}
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	cf 91       	pop	r28
 492:	08 95       	ret

00000494 <spi_init>:
#include <avr/pgmspace.h>

void spi_init(void){
	
	/* Set MOSI, SCK and SS output, all others input */
	DDRB = (1<<PB5)|(1<<PB7)|(1<<PB4);
 494:	80 eb       	ldi	r24, 0xB0	; 176
 496:	87 bb       	out	0x17, r24	; 23
	
	DDRB &= ~(1<<PB6);
 498:	be 98       	cbi	0x17, 6	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 49a:	81 e5       	ldi	r24, 0x51	; 81
 49c:	8d b9       	out	0x0d, r24	; 13
 49e:	08 95       	ret

000004a0 <spi_send>:

void spi_send(char cData){
	
	
	/* Start transmission */
	SPDR = cData;
 4a0:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for the transmission complete */
	while (!(SPSR & (1<<SPIF))){
 4a2:	77 9b       	sbis	0x0e, 7	; 14
 4a4:	fe cf       	rjmp	.-4      	; 0x4a2 <spi_send+0x2>
		;}
}
 4a6:	08 95       	ret

000004a8 <spi_receive>:

char spi_receive(void)
{
	
	spi_send(0);
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	0e 94 50 02 	call	0x4a0	; 0x4a0 <spi_send>
	
	/* Wait for reception complete */
	while (!(SPSR & (1<<SPIF))){
 4ae:	77 9b       	sbis	0x0e, 7	; 14
 4b0:	fe cf       	rjmp	.-4      	; 0x4ae <spi_receive+0x6>
		;
	}
	
	/* Return data register */
	return SPDR;
 4b2:	8f b1       	in	r24, 0x0f	; 15
 4b4:	08 95       	ret

000004b6 <SRAM_init>:
#include <avr/io.h>
#include <stdlib.h>
#include <stdint.h>

void SRAM_init(void){
	MCUCR |= (1 << SRE);
 4b6:	85 b7       	in	r24, 0x35	; 53
 4b8:	80 68       	ori	r24, 0x80	; 128
 4ba:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2);
 4bc:	80 b7       	in	r24, 0x30	; 48
 4be:	80 62       	ori	r24, 0x20	; 32
 4c0:	80 bf       	out	0x30, r24	; 48
 4c2:	08 95       	ret

000004c4 <USART_transmit>:

	fdevopen(USART_transmit, USART_receive);
}

void USART_transmit(unsigned char data){
	while(!(UCSR0A & (1<<UDRE0)));
 4c4:	5d 9b       	sbis	0x0b, 5	; 11
 4c6:	fe cf       	rjmp	.-4      	; 0x4c4 <USART_transmit>
	UDR0 = data;
 4c8:	8c b9       	out	0x0c, r24	; 12
 4ca:	08 95       	ret

000004cc <USART_receive>:
}

int USART_receive(void){
	while(!(UCSR0A & (1<<RXC0)));
 4cc:	5f 9b       	sbis	0x0b, 7	; 11
 4ce:	fe cf       	rjmp	.-4      	; 0x4cc <USART_receive>

	return UDR0;
 4d0:	8c b1       	in	r24, 0x0c	; 12
}
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	08 95       	ret

000004d6 <USART_init>:
#define set_bit(reg, bit) (reg |= (1<< bit))

void USART_init(unsigned int ubrr){
	
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 4d6:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;			
 4d8:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 4da:	88 e1       	ldi	r24, 0x18	; 24
 4dc:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 4de:	8e e8       	ldi	r24, 0x8E	; 142
 4e0:	80 bd       	out	0x20, r24	; 32

	fdevopen(USART_transmit, USART_receive);
 4e2:	66 e6       	ldi	r22, 0x66	; 102
 4e4:	72 e0       	ldi	r23, 0x02	; 2
 4e6:	82 e6       	ldi	r24, 0x62	; 98
 4e8:	92 e0       	ldi	r25, 0x02	; 2
 4ea:	0e 94 78 02 	call	0x4f0	; 0x4f0 <fdevopen>
 4ee:	08 95       	ret

000004f0 <fdevopen>:
 4f0:	0f 93       	push	r16
 4f2:	1f 93       	push	r17
 4f4:	cf 93       	push	r28
 4f6:	df 93       	push	r29
 4f8:	00 97       	sbiw	r24, 0x00	; 0
 4fa:	31 f4       	brne	.+12     	; 0x508 <__stack+0x9>
 4fc:	61 15       	cp	r22, r1
 4fe:	71 05       	cpc	r23, r1
 500:	19 f4       	brne	.+6      	; 0x508 <__stack+0x9>
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	3a c0       	rjmp	.+116    	; 0x57c <__stack+0x7d>
 508:	8b 01       	movw	r16, r22
 50a:	ec 01       	movw	r28, r24
 50c:	6e e0       	ldi	r22, 0x0E	; 14
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 94 ba 04 	call	0x974	; 0x974 <calloc>
 518:	fc 01       	movw	r30, r24
 51a:	89 2b       	or	r24, r25
 51c:	91 f3       	breq	.-28     	; 0x502 <__stack+0x3>
 51e:	80 e8       	ldi	r24, 0x80	; 128
 520:	83 83       	std	Z+3, r24	; 0x03
 522:	01 15       	cp	r16, r1
 524:	11 05       	cpc	r17, r1
 526:	71 f0       	breq	.+28     	; 0x544 <__stack+0x45>
 528:	13 87       	std	Z+11, r17	; 0x0b
 52a:	02 87       	std	Z+10, r16	; 0x0a
 52c:	81 e8       	ldi	r24, 0x81	; 129
 52e:	83 83       	std	Z+3, r24	; 0x03
 530:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <__iob>
 534:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <__iob+0x1>
 538:	89 2b       	or	r24, r25
 53a:	21 f4       	brne	.+8      	; 0x544 <__stack+0x45>
 53c:	f0 93 b4 01 	sts	0x01B4, r31	; 0x8001b4 <__iob+0x1>
 540:	e0 93 b3 01 	sts	0x01B3, r30	; 0x8001b3 <__iob>
 544:	20 97       	sbiw	r28, 0x00	; 0
 546:	c9 f0       	breq	.+50     	; 0x57a <__stack+0x7b>
 548:	d1 87       	std	Z+9, r29	; 0x09
 54a:	c0 87       	std	Z+8, r28	; 0x08
 54c:	83 81       	ldd	r24, Z+3	; 0x03
 54e:	82 60       	ori	r24, 0x02	; 2
 550:	83 83       	std	Z+3, r24	; 0x03
 552:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <__iob+0x2>
 556:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <__iob+0x3>
 55a:	89 2b       	or	r24, r25
 55c:	71 f4       	brne	.+28     	; 0x57a <__stack+0x7b>
 55e:	f0 93 b6 01 	sts	0x01B6, r31	; 0x8001b6 <__iob+0x3>
 562:	e0 93 b5 01 	sts	0x01B5, r30	; 0x8001b5 <__iob+0x2>
 566:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <__iob+0x4>
 56a:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <__iob+0x5>
 56e:	89 2b       	or	r24, r25
 570:	21 f4       	brne	.+8      	; 0x57a <__stack+0x7b>
 572:	f0 93 b8 01 	sts	0x01B8, r31	; 0x8001b8 <__iob+0x5>
 576:	e0 93 b7 01 	sts	0x01B7, r30	; 0x8001b7 <__iob+0x4>
 57a:	cf 01       	movw	r24, r30
 57c:	df 91       	pop	r29
 57e:	cf 91       	pop	r28
 580:	1f 91       	pop	r17
 582:	0f 91       	pop	r16
 584:	08 95       	ret

00000586 <printf>:
 586:	a0 e0       	ldi	r26, 0x00	; 0
 588:	b0 e0       	ldi	r27, 0x00	; 0
 58a:	e9 ec       	ldi	r30, 0xC9	; 201
 58c:	f2 e0       	ldi	r31, 0x02	; 2
 58e:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__prologue_saves__+0x20>
 592:	ae 01       	movw	r20, r28
 594:	4b 5f       	subi	r20, 0xFB	; 251
 596:	5f 4f       	sbci	r21, 0xFF	; 255
 598:	fa 01       	movw	r30, r20
 59a:	61 91       	ld	r22, Z+
 59c:	71 91       	ld	r23, Z+
 59e:	af 01       	movw	r20, r30
 5a0:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <__iob+0x2>
 5a4:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <__iob+0x3>
 5a8:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <vfprintf>
 5ac:	e2 e0       	ldi	r30, 0x02	; 2
 5ae:	0c 94 da 06 	jmp	0xdb4	; 0xdb4 <__epilogue_restores__+0x20>

000005b2 <vfprintf>:
 5b2:	ab e0       	ldi	r26, 0x0B	; 11
 5b4:	b0 e0       	ldi	r27, 0x00	; 0
 5b6:	ef ed       	ldi	r30, 0xDF	; 223
 5b8:	f2 e0       	ldi	r31, 0x02	; 2
 5ba:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__prologue_saves__>
 5be:	6c 01       	movw	r12, r24
 5c0:	7b 01       	movw	r14, r22
 5c2:	8a 01       	movw	r16, r20
 5c4:	fc 01       	movw	r30, r24
 5c6:	17 82       	std	Z+7, r1	; 0x07
 5c8:	16 82       	std	Z+6, r1	; 0x06
 5ca:	83 81       	ldd	r24, Z+3	; 0x03
 5cc:	81 ff       	sbrs	r24, 1
 5ce:	cc c1       	rjmp	.+920    	; 0x968 <vfprintf+0x3b6>
 5d0:	ce 01       	movw	r24, r28
 5d2:	01 96       	adiw	r24, 0x01	; 1
 5d4:	3c 01       	movw	r6, r24
 5d6:	f6 01       	movw	r30, r12
 5d8:	93 81       	ldd	r25, Z+3	; 0x03
 5da:	f7 01       	movw	r30, r14
 5dc:	93 fd       	sbrc	r25, 3
 5de:	85 91       	lpm	r24, Z+
 5e0:	93 ff       	sbrs	r25, 3
 5e2:	81 91       	ld	r24, Z+
 5e4:	7f 01       	movw	r14, r30
 5e6:	88 23       	and	r24, r24
 5e8:	09 f4       	brne	.+2      	; 0x5ec <vfprintf+0x3a>
 5ea:	ba c1       	rjmp	.+884    	; 0x960 <vfprintf+0x3ae>
 5ec:	85 32       	cpi	r24, 0x25	; 37
 5ee:	39 f4       	brne	.+14     	; 0x5fe <vfprintf+0x4c>
 5f0:	93 fd       	sbrc	r25, 3
 5f2:	85 91       	lpm	r24, Z+
 5f4:	93 ff       	sbrs	r25, 3
 5f6:	81 91       	ld	r24, Z+
 5f8:	7f 01       	movw	r14, r30
 5fa:	85 32       	cpi	r24, 0x25	; 37
 5fc:	29 f4       	brne	.+10     	; 0x608 <vfprintf+0x56>
 5fe:	b6 01       	movw	r22, r12
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 606:	e7 cf       	rjmp	.-50     	; 0x5d6 <vfprintf+0x24>
 608:	91 2c       	mov	r9, r1
 60a:	21 2c       	mov	r2, r1
 60c:	31 2c       	mov	r3, r1
 60e:	ff e1       	ldi	r31, 0x1F	; 31
 610:	f3 15       	cp	r31, r3
 612:	d8 f0       	brcs	.+54     	; 0x64a <vfprintf+0x98>
 614:	8b 32       	cpi	r24, 0x2B	; 43
 616:	79 f0       	breq	.+30     	; 0x636 <vfprintf+0x84>
 618:	38 f4       	brcc	.+14     	; 0x628 <vfprintf+0x76>
 61a:	80 32       	cpi	r24, 0x20	; 32
 61c:	79 f0       	breq	.+30     	; 0x63c <vfprintf+0x8a>
 61e:	83 32       	cpi	r24, 0x23	; 35
 620:	a1 f4       	brne	.+40     	; 0x64a <vfprintf+0x98>
 622:	23 2d       	mov	r18, r3
 624:	20 61       	ori	r18, 0x10	; 16
 626:	1d c0       	rjmp	.+58     	; 0x662 <vfprintf+0xb0>
 628:	8d 32       	cpi	r24, 0x2D	; 45
 62a:	61 f0       	breq	.+24     	; 0x644 <vfprintf+0x92>
 62c:	80 33       	cpi	r24, 0x30	; 48
 62e:	69 f4       	brne	.+26     	; 0x64a <vfprintf+0x98>
 630:	23 2d       	mov	r18, r3
 632:	21 60       	ori	r18, 0x01	; 1
 634:	16 c0       	rjmp	.+44     	; 0x662 <vfprintf+0xb0>
 636:	83 2d       	mov	r24, r3
 638:	82 60       	ori	r24, 0x02	; 2
 63a:	38 2e       	mov	r3, r24
 63c:	e3 2d       	mov	r30, r3
 63e:	e4 60       	ori	r30, 0x04	; 4
 640:	3e 2e       	mov	r3, r30
 642:	2a c0       	rjmp	.+84     	; 0x698 <vfprintf+0xe6>
 644:	f3 2d       	mov	r31, r3
 646:	f8 60       	ori	r31, 0x08	; 8
 648:	1d c0       	rjmp	.+58     	; 0x684 <vfprintf+0xd2>
 64a:	37 fc       	sbrc	r3, 7
 64c:	2d c0       	rjmp	.+90     	; 0x6a8 <vfprintf+0xf6>
 64e:	20 ed       	ldi	r18, 0xD0	; 208
 650:	28 0f       	add	r18, r24
 652:	2a 30       	cpi	r18, 0x0A	; 10
 654:	40 f0       	brcs	.+16     	; 0x666 <vfprintf+0xb4>
 656:	8e 32       	cpi	r24, 0x2E	; 46
 658:	b9 f4       	brne	.+46     	; 0x688 <vfprintf+0xd6>
 65a:	36 fc       	sbrc	r3, 6
 65c:	81 c1       	rjmp	.+770    	; 0x960 <vfprintf+0x3ae>
 65e:	23 2d       	mov	r18, r3
 660:	20 64       	ori	r18, 0x40	; 64
 662:	32 2e       	mov	r3, r18
 664:	19 c0       	rjmp	.+50     	; 0x698 <vfprintf+0xe6>
 666:	36 fe       	sbrs	r3, 6
 668:	06 c0       	rjmp	.+12     	; 0x676 <vfprintf+0xc4>
 66a:	8a e0       	ldi	r24, 0x0A	; 10
 66c:	98 9e       	mul	r9, r24
 66e:	20 0d       	add	r18, r0
 670:	11 24       	eor	r1, r1
 672:	92 2e       	mov	r9, r18
 674:	11 c0       	rjmp	.+34     	; 0x698 <vfprintf+0xe6>
 676:	ea e0       	ldi	r30, 0x0A	; 10
 678:	2e 9e       	mul	r2, r30
 67a:	20 0d       	add	r18, r0
 67c:	11 24       	eor	r1, r1
 67e:	22 2e       	mov	r2, r18
 680:	f3 2d       	mov	r31, r3
 682:	f0 62       	ori	r31, 0x20	; 32
 684:	3f 2e       	mov	r3, r31
 686:	08 c0       	rjmp	.+16     	; 0x698 <vfprintf+0xe6>
 688:	8c 36       	cpi	r24, 0x6C	; 108
 68a:	21 f4       	brne	.+8      	; 0x694 <vfprintf+0xe2>
 68c:	83 2d       	mov	r24, r3
 68e:	80 68       	ori	r24, 0x80	; 128
 690:	38 2e       	mov	r3, r24
 692:	02 c0       	rjmp	.+4      	; 0x698 <vfprintf+0xe6>
 694:	88 36       	cpi	r24, 0x68	; 104
 696:	41 f4       	brne	.+16     	; 0x6a8 <vfprintf+0xf6>
 698:	f7 01       	movw	r30, r14
 69a:	93 fd       	sbrc	r25, 3
 69c:	85 91       	lpm	r24, Z+
 69e:	93 ff       	sbrs	r25, 3
 6a0:	81 91       	ld	r24, Z+
 6a2:	7f 01       	movw	r14, r30
 6a4:	81 11       	cpse	r24, r1
 6a6:	b3 cf       	rjmp	.-154    	; 0x60e <vfprintf+0x5c>
 6a8:	98 2f       	mov	r25, r24
 6aa:	9f 7d       	andi	r25, 0xDF	; 223
 6ac:	95 54       	subi	r25, 0x45	; 69
 6ae:	93 30       	cpi	r25, 0x03	; 3
 6b0:	28 f4       	brcc	.+10     	; 0x6bc <vfprintf+0x10a>
 6b2:	0c 5f       	subi	r16, 0xFC	; 252
 6b4:	1f 4f       	sbci	r17, 0xFF	; 255
 6b6:	9f e3       	ldi	r25, 0x3F	; 63
 6b8:	99 83       	std	Y+1, r25	; 0x01
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <vfprintf+0x124>
 6bc:	83 36       	cpi	r24, 0x63	; 99
 6be:	31 f0       	breq	.+12     	; 0x6cc <vfprintf+0x11a>
 6c0:	83 37       	cpi	r24, 0x73	; 115
 6c2:	71 f0       	breq	.+28     	; 0x6e0 <vfprintf+0x12e>
 6c4:	83 35       	cpi	r24, 0x53	; 83
 6c6:	09 f0       	breq	.+2      	; 0x6ca <vfprintf+0x118>
 6c8:	59 c0       	rjmp	.+178    	; 0x77c <vfprintf+0x1ca>
 6ca:	21 c0       	rjmp	.+66     	; 0x70e <vfprintf+0x15c>
 6cc:	f8 01       	movw	r30, r16
 6ce:	80 81       	ld	r24, Z
 6d0:	89 83       	std	Y+1, r24	; 0x01
 6d2:	0e 5f       	subi	r16, 0xFE	; 254
 6d4:	1f 4f       	sbci	r17, 0xFF	; 255
 6d6:	88 24       	eor	r8, r8
 6d8:	83 94       	inc	r8
 6da:	91 2c       	mov	r9, r1
 6dc:	53 01       	movw	r10, r6
 6de:	13 c0       	rjmp	.+38     	; 0x706 <vfprintf+0x154>
 6e0:	28 01       	movw	r4, r16
 6e2:	f2 e0       	ldi	r31, 0x02	; 2
 6e4:	4f 0e       	add	r4, r31
 6e6:	51 1c       	adc	r5, r1
 6e8:	f8 01       	movw	r30, r16
 6ea:	a0 80       	ld	r10, Z
 6ec:	b1 80       	ldd	r11, Z+1	; 0x01
 6ee:	36 fe       	sbrs	r3, 6
 6f0:	03 c0       	rjmp	.+6      	; 0x6f8 <vfprintf+0x146>
 6f2:	69 2d       	mov	r22, r9
 6f4:	70 e0       	ldi	r23, 0x00	; 0
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <vfprintf+0x14a>
 6f8:	6f ef       	ldi	r22, 0xFF	; 255
 6fa:	7f ef       	ldi	r23, 0xFF	; 255
 6fc:	c5 01       	movw	r24, r10
 6fe:	0e 94 09 06 	call	0xc12	; 0xc12 <strnlen>
 702:	4c 01       	movw	r8, r24
 704:	82 01       	movw	r16, r4
 706:	f3 2d       	mov	r31, r3
 708:	ff 77       	andi	r31, 0x7F	; 127
 70a:	3f 2e       	mov	r3, r31
 70c:	16 c0       	rjmp	.+44     	; 0x73a <vfprintf+0x188>
 70e:	28 01       	movw	r4, r16
 710:	22 e0       	ldi	r18, 0x02	; 2
 712:	42 0e       	add	r4, r18
 714:	51 1c       	adc	r5, r1
 716:	f8 01       	movw	r30, r16
 718:	a0 80       	ld	r10, Z
 71a:	b1 80       	ldd	r11, Z+1	; 0x01
 71c:	36 fe       	sbrs	r3, 6
 71e:	03 c0       	rjmp	.+6      	; 0x726 <vfprintf+0x174>
 720:	69 2d       	mov	r22, r9
 722:	70 e0       	ldi	r23, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <vfprintf+0x178>
 726:	6f ef       	ldi	r22, 0xFF	; 255
 728:	7f ef       	ldi	r23, 0xFF	; 255
 72a:	c5 01       	movw	r24, r10
 72c:	0e 94 f7 05 	call	0xbee	; 0xbee <strnlen_P>
 730:	4c 01       	movw	r8, r24
 732:	f3 2d       	mov	r31, r3
 734:	f0 68       	ori	r31, 0x80	; 128
 736:	3f 2e       	mov	r3, r31
 738:	82 01       	movw	r16, r4
 73a:	33 fc       	sbrc	r3, 3
 73c:	1b c0       	rjmp	.+54     	; 0x774 <vfprintf+0x1c2>
 73e:	82 2d       	mov	r24, r2
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	88 16       	cp	r8, r24
 744:	99 06       	cpc	r9, r25
 746:	b0 f4       	brcc	.+44     	; 0x774 <vfprintf+0x1c2>
 748:	b6 01       	movw	r22, r12
 74a:	80 e2       	ldi	r24, 0x20	; 32
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 752:	2a 94       	dec	r2
 754:	f4 cf       	rjmp	.-24     	; 0x73e <vfprintf+0x18c>
 756:	f5 01       	movw	r30, r10
 758:	37 fc       	sbrc	r3, 7
 75a:	85 91       	lpm	r24, Z+
 75c:	37 fe       	sbrs	r3, 7
 75e:	81 91       	ld	r24, Z+
 760:	5f 01       	movw	r10, r30
 762:	b6 01       	movw	r22, r12
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 76a:	21 10       	cpse	r2, r1
 76c:	2a 94       	dec	r2
 76e:	21 e0       	ldi	r18, 0x01	; 1
 770:	82 1a       	sub	r8, r18
 772:	91 08       	sbc	r9, r1
 774:	81 14       	cp	r8, r1
 776:	91 04       	cpc	r9, r1
 778:	71 f7       	brne	.-36     	; 0x756 <vfprintf+0x1a4>
 77a:	e8 c0       	rjmp	.+464    	; 0x94c <vfprintf+0x39a>
 77c:	84 36       	cpi	r24, 0x64	; 100
 77e:	11 f0       	breq	.+4      	; 0x784 <vfprintf+0x1d2>
 780:	89 36       	cpi	r24, 0x69	; 105
 782:	41 f5       	brne	.+80     	; 0x7d4 <vfprintf+0x222>
 784:	f8 01       	movw	r30, r16
 786:	37 fe       	sbrs	r3, 7
 788:	07 c0       	rjmp	.+14     	; 0x798 <vfprintf+0x1e6>
 78a:	60 81       	ld	r22, Z
 78c:	71 81       	ldd	r23, Z+1	; 0x01
 78e:	82 81       	ldd	r24, Z+2	; 0x02
 790:	93 81       	ldd	r25, Z+3	; 0x03
 792:	0c 5f       	subi	r16, 0xFC	; 252
 794:	1f 4f       	sbci	r17, 0xFF	; 255
 796:	08 c0       	rjmp	.+16     	; 0x7a8 <vfprintf+0x1f6>
 798:	60 81       	ld	r22, Z
 79a:	71 81       	ldd	r23, Z+1	; 0x01
 79c:	07 2e       	mov	r0, r23
 79e:	00 0c       	add	r0, r0
 7a0:	88 0b       	sbc	r24, r24
 7a2:	99 0b       	sbc	r25, r25
 7a4:	0e 5f       	subi	r16, 0xFE	; 254
 7a6:	1f 4f       	sbci	r17, 0xFF	; 255
 7a8:	f3 2d       	mov	r31, r3
 7aa:	ff 76       	andi	r31, 0x6F	; 111
 7ac:	3f 2e       	mov	r3, r31
 7ae:	97 ff       	sbrs	r25, 7
 7b0:	09 c0       	rjmp	.+18     	; 0x7c4 <vfprintf+0x212>
 7b2:	90 95       	com	r25
 7b4:	80 95       	com	r24
 7b6:	70 95       	com	r23
 7b8:	61 95       	neg	r22
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	f0 68       	ori	r31, 0x80	; 128
 7c2:	3f 2e       	mov	r3, r31
 7c4:	2a e0       	ldi	r18, 0x0A	; 10
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	a3 01       	movw	r20, r6
 7ca:	0e 94 50 06 	call	0xca0	; 0xca0 <__ultoa_invert>
 7ce:	88 2e       	mov	r8, r24
 7d0:	86 18       	sub	r8, r6
 7d2:	45 c0       	rjmp	.+138    	; 0x85e <vfprintf+0x2ac>
 7d4:	85 37       	cpi	r24, 0x75	; 117
 7d6:	31 f4       	brne	.+12     	; 0x7e4 <vfprintf+0x232>
 7d8:	23 2d       	mov	r18, r3
 7da:	2f 7e       	andi	r18, 0xEF	; 239
 7dc:	b2 2e       	mov	r11, r18
 7de:	2a e0       	ldi	r18, 0x0A	; 10
 7e0:	30 e0       	ldi	r19, 0x00	; 0
 7e2:	25 c0       	rjmp	.+74     	; 0x82e <vfprintf+0x27c>
 7e4:	93 2d       	mov	r25, r3
 7e6:	99 7f       	andi	r25, 0xF9	; 249
 7e8:	b9 2e       	mov	r11, r25
 7ea:	8f 36       	cpi	r24, 0x6F	; 111
 7ec:	c1 f0       	breq	.+48     	; 0x81e <vfprintf+0x26c>
 7ee:	18 f4       	brcc	.+6      	; 0x7f6 <vfprintf+0x244>
 7f0:	88 35       	cpi	r24, 0x58	; 88
 7f2:	79 f0       	breq	.+30     	; 0x812 <vfprintf+0x260>
 7f4:	b5 c0       	rjmp	.+362    	; 0x960 <vfprintf+0x3ae>
 7f6:	80 37       	cpi	r24, 0x70	; 112
 7f8:	19 f0       	breq	.+6      	; 0x800 <vfprintf+0x24e>
 7fa:	88 37       	cpi	r24, 0x78	; 120
 7fc:	21 f0       	breq	.+8      	; 0x806 <vfprintf+0x254>
 7fe:	b0 c0       	rjmp	.+352    	; 0x960 <vfprintf+0x3ae>
 800:	e9 2f       	mov	r30, r25
 802:	e0 61       	ori	r30, 0x10	; 16
 804:	be 2e       	mov	r11, r30
 806:	b4 fe       	sbrs	r11, 4
 808:	0d c0       	rjmp	.+26     	; 0x824 <vfprintf+0x272>
 80a:	fb 2d       	mov	r31, r11
 80c:	f4 60       	ori	r31, 0x04	; 4
 80e:	bf 2e       	mov	r11, r31
 810:	09 c0       	rjmp	.+18     	; 0x824 <vfprintf+0x272>
 812:	34 fe       	sbrs	r3, 4
 814:	0a c0       	rjmp	.+20     	; 0x82a <vfprintf+0x278>
 816:	29 2f       	mov	r18, r25
 818:	26 60       	ori	r18, 0x06	; 6
 81a:	b2 2e       	mov	r11, r18
 81c:	06 c0       	rjmp	.+12     	; 0x82a <vfprintf+0x278>
 81e:	28 e0       	ldi	r18, 0x08	; 8
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	05 c0       	rjmp	.+10     	; 0x82e <vfprintf+0x27c>
 824:	20 e1       	ldi	r18, 0x10	; 16
 826:	30 e0       	ldi	r19, 0x00	; 0
 828:	02 c0       	rjmp	.+4      	; 0x82e <vfprintf+0x27c>
 82a:	20 e1       	ldi	r18, 0x10	; 16
 82c:	32 e0       	ldi	r19, 0x02	; 2
 82e:	f8 01       	movw	r30, r16
 830:	b7 fe       	sbrs	r11, 7
 832:	07 c0       	rjmp	.+14     	; 0x842 <vfprintf+0x290>
 834:	60 81       	ld	r22, Z
 836:	71 81       	ldd	r23, Z+1	; 0x01
 838:	82 81       	ldd	r24, Z+2	; 0x02
 83a:	93 81       	ldd	r25, Z+3	; 0x03
 83c:	0c 5f       	subi	r16, 0xFC	; 252
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	06 c0       	rjmp	.+12     	; 0x84e <vfprintf+0x29c>
 842:	60 81       	ld	r22, Z
 844:	71 81       	ldd	r23, Z+1	; 0x01
 846:	80 e0       	ldi	r24, 0x00	; 0
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	0e 5f       	subi	r16, 0xFE	; 254
 84c:	1f 4f       	sbci	r17, 0xFF	; 255
 84e:	a3 01       	movw	r20, r6
 850:	0e 94 50 06 	call	0xca0	; 0xca0 <__ultoa_invert>
 854:	88 2e       	mov	r8, r24
 856:	86 18       	sub	r8, r6
 858:	fb 2d       	mov	r31, r11
 85a:	ff 77       	andi	r31, 0x7F	; 127
 85c:	3f 2e       	mov	r3, r31
 85e:	36 fe       	sbrs	r3, 6
 860:	0d c0       	rjmp	.+26     	; 0x87c <vfprintf+0x2ca>
 862:	23 2d       	mov	r18, r3
 864:	2e 7f       	andi	r18, 0xFE	; 254
 866:	a2 2e       	mov	r10, r18
 868:	89 14       	cp	r8, r9
 86a:	58 f4       	brcc	.+22     	; 0x882 <vfprintf+0x2d0>
 86c:	34 fe       	sbrs	r3, 4
 86e:	0b c0       	rjmp	.+22     	; 0x886 <vfprintf+0x2d4>
 870:	32 fc       	sbrc	r3, 2
 872:	09 c0       	rjmp	.+18     	; 0x886 <vfprintf+0x2d4>
 874:	83 2d       	mov	r24, r3
 876:	8e 7e       	andi	r24, 0xEE	; 238
 878:	a8 2e       	mov	r10, r24
 87a:	05 c0       	rjmp	.+10     	; 0x886 <vfprintf+0x2d4>
 87c:	b8 2c       	mov	r11, r8
 87e:	a3 2c       	mov	r10, r3
 880:	03 c0       	rjmp	.+6      	; 0x888 <vfprintf+0x2d6>
 882:	b8 2c       	mov	r11, r8
 884:	01 c0       	rjmp	.+2      	; 0x888 <vfprintf+0x2d6>
 886:	b9 2c       	mov	r11, r9
 888:	a4 fe       	sbrs	r10, 4
 88a:	0f c0       	rjmp	.+30     	; 0x8aa <vfprintf+0x2f8>
 88c:	fe 01       	movw	r30, r28
 88e:	e8 0d       	add	r30, r8
 890:	f1 1d       	adc	r31, r1
 892:	80 81       	ld	r24, Z
 894:	80 33       	cpi	r24, 0x30	; 48
 896:	21 f4       	brne	.+8      	; 0x8a0 <vfprintf+0x2ee>
 898:	9a 2d       	mov	r25, r10
 89a:	99 7e       	andi	r25, 0xE9	; 233
 89c:	a9 2e       	mov	r10, r25
 89e:	09 c0       	rjmp	.+18     	; 0x8b2 <vfprintf+0x300>
 8a0:	a2 fe       	sbrs	r10, 2
 8a2:	06 c0       	rjmp	.+12     	; 0x8b0 <vfprintf+0x2fe>
 8a4:	b3 94       	inc	r11
 8a6:	b3 94       	inc	r11
 8a8:	04 c0       	rjmp	.+8      	; 0x8b2 <vfprintf+0x300>
 8aa:	8a 2d       	mov	r24, r10
 8ac:	86 78       	andi	r24, 0x86	; 134
 8ae:	09 f0       	breq	.+2      	; 0x8b2 <vfprintf+0x300>
 8b0:	b3 94       	inc	r11
 8b2:	a3 fc       	sbrc	r10, 3
 8b4:	11 c0       	rjmp	.+34     	; 0x8d8 <vfprintf+0x326>
 8b6:	a0 fe       	sbrs	r10, 0
 8b8:	06 c0       	rjmp	.+12     	; 0x8c6 <vfprintf+0x314>
 8ba:	b2 14       	cp	r11, r2
 8bc:	88 f4       	brcc	.+34     	; 0x8e0 <vfprintf+0x32e>
 8be:	28 0c       	add	r2, r8
 8c0:	92 2c       	mov	r9, r2
 8c2:	9b 18       	sub	r9, r11
 8c4:	0e c0       	rjmp	.+28     	; 0x8e2 <vfprintf+0x330>
 8c6:	b2 14       	cp	r11, r2
 8c8:	60 f4       	brcc	.+24     	; 0x8e2 <vfprintf+0x330>
 8ca:	b6 01       	movw	r22, r12
 8cc:	80 e2       	ldi	r24, 0x20	; 32
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 8d4:	b3 94       	inc	r11
 8d6:	f7 cf       	rjmp	.-18     	; 0x8c6 <vfprintf+0x314>
 8d8:	b2 14       	cp	r11, r2
 8da:	18 f4       	brcc	.+6      	; 0x8e2 <vfprintf+0x330>
 8dc:	2b 18       	sub	r2, r11
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <vfprintf+0x332>
 8e0:	98 2c       	mov	r9, r8
 8e2:	21 2c       	mov	r2, r1
 8e4:	a4 fe       	sbrs	r10, 4
 8e6:	10 c0       	rjmp	.+32     	; 0x908 <vfprintf+0x356>
 8e8:	b6 01       	movw	r22, r12
 8ea:	80 e3       	ldi	r24, 0x30	; 48
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 8f2:	a2 fe       	sbrs	r10, 2
 8f4:	17 c0       	rjmp	.+46     	; 0x924 <vfprintf+0x372>
 8f6:	a1 fc       	sbrc	r10, 1
 8f8:	03 c0       	rjmp	.+6      	; 0x900 <vfprintf+0x34e>
 8fa:	88 e7       	ldi	r24, 0x78	; 120
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	02 c0       	rjmp	.+4      	; 0x904 <vfprintf+0x352>
 900:	88 e5       	ldi	r24, 0x58	; 88
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	b6 01       	movw	r22, r12
 906:	0c c0       	rjmp	.+24     	; 0x920 <vfprintf+0x36e>
 908:	8a 2d       	mov	r24, r10
 90a:	86 78       	andi	r24, 0x86	; 134
 90c:	59 f0       	breq	.+22     	; 0x924 <vfprintf+0x372>
 90e:	a1 fe       	sbrs	r10, 1
 910:	02 c0       	rjmp	.+4      	; 0x916 <vfprintf+0x364>
 912:	8b e2       	ldi	r24, 0x2B	; 43
 914:	01 c0       	rjmp	.+2      	; 0x918 <vfprintf+0x366>
 916:	80 e2       	ldi	r24, 0x20	; 32
 918:	a7 fc       	sbrc	r10, 7
 91a:	8d e2       	ldi	r24, 0x2D	; 45
 91c:	b6 01       	movw	r22, r12
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 924:	89 14       	cp	r8, r9
 926:	38 f4       	brcc	.+14     	; 0x936 <vfprintf+0x384>
 928:	b6 01       	movw	r22, r12
 92a:	80 e3       	ldi	r24, 0x30	; 48
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 932:	9a 94       	dec	r9
 934:	f7 cf       	rjmp	.-18     	; 0x924 <vfprintf+0x372>
 936:	8a 94       	dec	r8
 938:	f3 01       	movw	r30, r6
 93a:	e8 0d       	add	r30, r8
 93c:	f1 1d       	adc	r31, r1
 93e:	80 81       	ld	r24, Z
 940:	b6 01       	movw	r22, r12
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 948:	81 10       	cpse	r8, r1
 94a:	f5 cf       	rjmp	.-22     	; 0x936 <vfprintf+0x384>
 94c:	22 20       	and	r2, r2
 94e:	09 f4       	brne	.+2      	; 0x952 <vfprintf+0x3a0>
 950:	42 ce       	rjmp	.-892    	; 0x5d6 <vfprintf+0x24>
 952:	b6 01       	movw	r22, r12
 954:	80 e2       	ldi	r24, 0x20	; 32
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 94 14 06 	call	0xc28	; 0xc28 <fputc>
 95c:	2a 94       	dec	r2
 95e:	f6 cf       	rjmp	.-20     	; 0x94c <vfprintf+0x39a>
 960:	f6 01       	movw	r30, r12
 962:	86 81       	ldd	r24, Z+6	; 0x06
 964:	97 81       	ldd	r25, Z+7	; 0x07
 966:	02 c0       	rjmp	.+4      	; 0x96c <vfprintf+0x3ba>
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	9f ef       	ldi	r25, 0xFF	; 255
 96c:	2b 96       	adiw	r28, 0x0b	; 11
 96e:	e2 e1       	ldi	r30, 0x12	; 18
 970:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__epilogue_restores__>

00000974 <calloc>:
 974:	0f 93       	push	r16
 976:	1f 93       	push	r17
 978:	cf 93       	push	r28
 97a:	df 93       	push	r29
 97c:	86 9f       	mul	r24, r22
 97e:	80 01       	movw	r16, r0
 980:	87 9f       	mul	r24, r23
 982:	10 0d       	add	r17, r0
 984:	96 9f       	mul	r25, r22
 986:	10 0d       	add	r17, r0
 988:	11 24       	eor	r1, r1
 98a:	c8 01       	movw	r24, r16
 98c:	0e 94 d6 04 	call	0x9ac	; 0x9ac <malloc>
 990:	ec 01       	movw	r28, r24
 992:	00 97       	sbiw	r24, 0x00	; 0
 994:	29 f0       	breq	.+10     	; 0x9a0 <calloc+0x2c>
 996:	a8 01       	movw	r20, r16
 998:	60 e0       	ldi	r22, 0x00	; 0
 99a:	70 e0       	ldi	r23, 0x00	; 0
 99c:	0e 94 02 06 	call	0xc04	; 0xc04 <memset>
 9a0:	ce 01       	movw	r24, r28
 9a2:	df 91       	pop	r29
 9a4:	cf 91       	pop	r28
 9a6:	1f 91       	pop	r17
 9a8:	0f 91       	pop	r16
 9aa:	08 95       	ret

000009ac <malloc>:
 9ac:	0f 93       	push	r16
 9ae:	1f 93       	push	r17
 9b0:	cf 93       	push	r28
 9b2:	df 93       	push	r29
 9b4:	82 30       	cpi	r24, 0x02	; 2
 9b6:	91 05       	cpc	r25, r1
 9b8:	10 f4       	brcc	.+4      	; 0x9be <malloc+0x12>
 9ba:	82 e0       	ldi	r24, 0x02	; 2
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	e0 91 bb 01 	lds	r30, 0x01BB	; 0x8001bb <__flp>
 9c2:	f0 91 bc 01 	lds	r31, 0x01BC	; 0x8001bc <__flp+0x1>
 9c6:	20 e0       	ldi	r18, 0x00	; 0
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	a0 e0       	ldi	r26, 0x00	; 0
 9cc:	b0 e0       	ldi	r27, 0x00	; 0
 9ce:	30 97       	sbiw	r30, 0x00	; 0
 9d0:	19 f1       	breq	.+70     	; 0xa18 <malloc+0x6c>
 9d2:	40 81       	ld	r20, Z
 9d4:	51 81       	ldd	r21, Z+1	; 0x01
 9d6:	02 81       	ldd	r16, Z+2	; 0x02
 9d8:	13 81       	ldd	r17, Z+3	; 0x03
 9da:	48 17       	cp	r20, r24
 9dc:	59 07       	cpc	r21, r25
 9de:	c8 f0       	brcs	.+50     	; 0xa12 <malloc+0x66>
 9e0:	84 17       	cp	r24, r20
 9e2:	95 07       	cpc	r25, r21
 9e4:	69 f4       	brne	.+26     	; 0xa00 <malloc+0x54>
 9e6:	10 97       	sbiw	r26, 0x00	; 0
 9e8:	31 f0       	breq	.+12     	; 0x9f6 <malloc+0x4a>
 9ea:	12 96       	adiw	r26, 0x02	; 2
 9ec:	0c 93       	st	X, r16
 9ee:	12 97       	sbiw	r26, 0x02	; 2
 9f0:	13 96       	adiw	r26, 0x03	; 3
 9f2:	1c 93       	st	X, r17
 9f4:	27 c0       	rjmp	.+78     	; 0xa44 <malloc+0x98>
 9f6:	00 93 bb 01 	sts	0x01BB, r16	; 0x8001bb <__flp>
 9fa:	10 93 bc 01 	sts	0x01BC, r17	; 0x8001bc <__flp+0x1>
 9fe:	22 c0       	rjmp	.+68     	; 0xa44 <malloc+0x98>
 a00:	21 15       	cp	r18, r1
 a02:	31 05       	cpc	r19, r1
 a04:	19 f0       	breq	.+6      	; 0xa0c <malloc+0x60>
 a06:	42 17       	cp	r20, r18
 a08:	53 07       	cpc	r21, r19
 a0a:	18 f4       	brcc	.+6      	; 0xa12 <malloc+0x66>
 a0c:	9a 01       	movw	r18, r20
 a0e:	bd 01       	movw	r22, r26
 a10:	ef 01       	movw	r28, r30
 a12:	df 01       	movw	r26, r30
 a14:	f8 01       	movw	r30, r16
 a16:	db cf       	rjmp	.-74     	; 0x9ce <malloc+0x22>
 a18:	21 15       	cp	r18, r1
 a1a:	31 05       	cpc	r19, r1
 a1c:	f9 f0       	breq	.+62     	; 0xa5c <malloc+0xb0>
 a1e:	28 1b       	sub	r18, r24
 a20:	39 0b       	sbc	r19, r25
 a22:	24 30       	cpi	r18, 0x04	; 4
 a24:	31 05       	cpc	r19, r1
 a26:	80 f4       	brcc	.+32     	; 0xa48 <malloc+0x9c>
 a28:	8a 81       	ldd	r24, Y+2	; 0x02
 a2a:	9b 81       	ldd	r25, Y+3	; 0x03
 a2c:	61 15       	cp	r22, r1
 a2e:	71 05       	cpc	r23, r1
 a30:	21 f0       	breq	.+8      	; 0xa3a <malloc+0x8e>
 a32:	fb 01       	movw	r30, r22
 a34:	93 83       	std	Z+3, r25	; 0x03
 a36:	82 83       	std	Z+2, r24	; 0x02
 a38:	04 c0       	rjmp	.+8      	; 0xa42 <malloc+0x96>
 a3a:	90 93 bc 01 	sts	0x01BC, r25	; 0x8001bc <__flp+0x1>
 a3e:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <__flp>
 a42:	fe 01       	movw	r30, r28
 a44:	32 96       	adiw	r30, 0x02	; 2
 a46:	44 c0       	rjmp	.+136    	; 0xad0 <malloc+0x124>
 a48:	fe 01       	movw	r30, r28
 a4a:	e2 0f       	add	r30, r18
 a4c:	f3 1f       	adc	r31, r19
 a4e:	81 93       	st	Z+, r24
 a50:	91 93       	st	Z+, r25
 a52:	22 50       	subi	r18, 0x02	; 2
 a54:	31 09       	sbc	r19, r1
 a56:	39 83       	std	Y+1, r19	; 0x01
 a58:	28 83       	st	Y, r18
 a5a:	3a c0       	rjmp	.+116    	; 0xad0 <malloc+0x124>
 a5c:	20 91 b9 01 	lds	r18, 0x01B9	; 0x8001b9 <__brkval>
 a60:	30 91 ba 01 	lds	r19, 0x01BA	; 0x8001ba <__brkval+0x1>
 a64:	23 2b       	or	r18, r19
 a66:	41 f4       	brne	.+16     	; 0xa78 <malloc+0xcc>
 a68:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 a6c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 a70:	30 93 ba 01 	sts	0x01BA, r19	; 0x8001ba <__brkval+0x1>
 a74:	20 93 b9 01 	sts	0x01B9, r18	; 0x8001b9 <__brkval>
 a78:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 a7c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 a80:	21 15       	cp	r18, r1
 a82:	31 05       	cpc	r19, r1
 a84:	41 f4       	brne	.+16     	; 0xa96 <malloc+0xea>
 a86:	2d b7       	in	r18, 0x3d	; 61
 a88:	3e b7       	in	r19, 0x3e	; 62
 a8a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 a8e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 a92:	24 1b       	sub	r18, r20
 a94:	35 0b       	sbc	r19, r21
 a96:	e0 91 b9 01 	lds	r30, 0x01B9	; 0x8001b9 <__brkval>
 a9a:	f0 91 ba 01 	lds	r31, 0x01BA	; 0x8001ba <__brkval+0x1>
 a9e:	e2 17       	cp	r30, r18
 aa0:	f3 07       	cpc	r31, r19
 aa2:	a0 f4       	brcc	.+40     	; 0xacc <malloc+0x120>
 aa4:	2e 1b       	sub	r18, r30
 aa6:	3f 0b       	sbc	r19, r31
 aa8:	28 17       	cp	r18, r24
 aaa:	39 07       	cpc	r19, r25
 aac:	78 f0       	brcs	.+30     	; 0xacc <malloc+0x120>
 aae:	ac 01       	movw	r20, r24
 ab0:	4e 5f       	subi	r20, 0xFE	; 254
 ab2:	5f 4f       	sbci	r21, 0xFF	; 255
 ab4:	24 17       	cp	r18, r20
 ab6:	35 07       	cpc	r19, r21
 ab8:	48 f0       	brcs	.+18     	; 0xacc <malloc+0x120>
 aba:	4e 0f       	add	r20, r30
 abc:	5f 1f       	adc	r21, r31
 abe:	50 93 ba 01 	sts	0x01BA, r21	; 0x8001ba <__brkval+0x1>
 ac2:	40 93 b9 01 	sts	0x01B9, r20	; 0x8001b9 <__brkval>
 ac6:	81 93       	st	Z+, r24
 ac8:	91 93       	st	Z+, r25
 aca:	02 c0       	rjmp	.+4      	; 0xad0 <malloc+0x124>
 acc:	e0 e0       	ldi	r30, 0x00	; 0
 ace:	f0 e0       	ldi	r31, 0x00	; 0
 ad0:	cf 01       	movw	r24, r30
 ad2:	df 91       	pop	r29
 ad4:	cf 91       	pop	r28
 ad6:	1f 91       	pop	r17
 ad8:	0f 91       	pop	r16
 ada:	08 95       	ret

00000adc <free>:
 adc:	cf 93       	push	r28
 ade:	df 93       	push	r29
 ae0:	00 97       	sbiw	r24, 0x00	; 0
 ae2:	09 f4       	brne	.+2      	; 0xae6 <free+0xa>
 ae4:	81 c0       	rjmp	.+258    	; 0xbe8 <free+0x10c>
 ae6:	fc 01       	movw	r30, r24
 ae8:	32 97       	sbiw	r30, 0x02	; 2
 aea:	13 82       	std	Z+3, r1	; 0x03
 aec:	12 82       	std	Z+2, r1	; 0x02
 aee:	a0 91 bb 01 	lds	r26, 0x01BB	; 0x8001bb <__flp>
 af2:	b0 91 bc 01 	lds	r27, 0x01BC	; 0x8001bc <__flp+0x1>
 af6:	10 97       	sbiw	r26, 0x00	; 0
 af8:	81 f4       	brne	.+32     	; 0xb1a <free+0x3e>
 afa:	20 81       	ld	r18, Z
 afc:	31 81       	ldd	r19, Z+1	; 0x01
 afe:	82 0f       	add	r24, r18
 b00:	93 1f       	adc	r25, r19
 b02:	20 91 b9 01 	lds	r18, 0x01B9	; 0x8001b9 <__brkval>
 b06:	30 91 ba 01 	lds	r19, 0x01BA	; 0x8001ba <__brkval+0x1>
 b0a:	28 17       	cp	r18, r24
 b0c:	39 07       	cpc	r19, r25
 b0e:	51 f5       	brne	.+84     	; 0xb64 <free+0x88>
 b10:	f0 93 ba 01 	sts	0x01BA, r31	; 0x8001ba <__brkval+0x1>
 b14:	e0 93 b9 01 	sts	0x01B9, r30	; 0x8001b9 <__brkval>
 b18:	67 c0       	rjmp	.+206    	; 0xbe8 <free+0x10c>
 b1a:	ed 01       	movw	r28, r26
 b1c:	20 e0       	ldi	r18, 0x00	; 0
 b1e:	30 e0       	ldi	r19, 0x00	; 0
 b20:	ce 17       	cp	r28, r30
 b22:	df 07       	cpc	r29, r31
 b24:	40 f4       	brcc	.+16     	; 0xb36 <free+0x5a>
 b26:	4a 81       	ldd	r20, Y+2	; 0x02
 b28:	5b 81       	ldd	r21, Y+3	; 0x03
 b2a:	9e 01       	movw	r18, r28
 b2c:	41 15       	cp	r20, r1
 b2e:	51 05       	cpc	r21, r1
 b30:	f1 f0       	breq	.+60     	; 0xb6e <free+0x92>
 b32:	ea 01       	movw	r28, r20
 b34:	f5 cf       	rjmp	.-22     	; 0xb20 <free+0x44>
 b36:	d3 83       	std	Z+3, r29	; 0x03
 b38:	c2 83       	std	Z+2, r28	; 0x02
 b3a:	40 81       	ld	r20, Z
 b3c:	51 81       	ldd	r21, Z+1	; 0x01
 b3e:	84 0f       	add	r24, r20
 b40:	95 1f       	adc	r25, r21
 b42:	c8 17       	cp	r28, r24
 b44:	d9 07       	cpc	r29, r25
 b46:	59 f4       	brne	.+22     	; 0xb5e <free+0x82>
 b48:	88 81       	ld	r24, Y
 b4a:	99 81       	ldd	r25, Y+1	; 0x01
 b4c:	84 0f       	add	r24, r20
 b4e:	95 1f       	adc	r25, r21
 b50:	02 96       	adiw	r24, 0x02	; 2
 b52:	91 83       	std	Z+1, r25	; 0x01
 b54:	80 83       	st	Z, r24
 b56:	8a 81       	ldd	r24, Y+2	; 0x02
 b58:	9b 81       	ldd	r25, Y+3	; 0x03
 b5a:	93 83       	std	Z+3, r25	; 0x03
 b5c:	82 83       	std	Z+2, r24	; 0x02
 b5e:	21 15       	cp	r18, r1
 b60:	31 05       	cpc	r19, r1
 b62:	29 f4       	brne	.+10     	; 0xb6e <free+0x92>
 b64:	f0 93 bc 01 	sts	0x01BC, r31	; 0x8001bc <__flp+0x1>
 b68:	e0 93 bb 01 	sts	0x01BB, r30	; 0x8001bb <__flp>
 b6c:	3d c0       	rjmp	.+122    	; 0xbe8 <free+0x10c>
 b6e:	e9 01       	movw	r28, r18
 b70:	fb 83       	std	Y+3, r31	; 0x03
 b72:	ea 83       	std	Y+2, r30	; 0x02
 b74:	49 91       	ld	r20, Y+
 b76:	59 91       	ld	r21, Y+
 b78:	c4 0f       	add	r28, r20
 b7a:	d5 1f       	adc	r29, r21
 b7c:	ec 17       	cp	r30, r28
 b7e:	fd 07       	cpc	r31, r29
 b80:	61 f4       	brne	.+24     	; 0xb9a <free+0xbe>
 b82:	80 81       	ld	r24, Z
 b84:	91 81       	ldd	r25, Z+1	; 0x01
 b86:	84 0f       	add	r24, r20
 b88:	95 1f       	adc	r25, r21
 b8a:	02 96       	adiw	r24, 0x02	; 2
 b8c:	e9 01       	movw	r28, r18
 b8e:	99 83       	std	Y+1, r25	; 0x01
 b90:	88 83       	st	Y, r24
 b92:	82 81       	ldd	r24, Z+2	; 0x02
 b94:	93 81       	ldd	r25, Z+3	; 0x03
 b96:	9b 83       	std	Y+3, r25	; 0x03
 b98:	8a 83       	std	Y+2, r24	; 0x02
 b9a:	e0 e0       	ldi	r30, 0x00	; 0
 b9c:	f0 e0       	ldi	r31, 0x00	; 0
 b9e:	12 96       	adiw	r26, 0x02	; 2
 ba0:	8d 91       	ld	r24, X+
 ba2:	9c 91       	ld	r25, X
 ba4:	13 97       	sbiw	r26, 0x03	; 3
 ba6:	00 97       	sbiw	r24, 0x00	; 0
 ba8:	19 f0       	breq	.+6      	; 0xbb0 <free+0xd4>
 baa:	fd 01       	movw	r30, r26
 bac:	dc 01       	movw	r26, r24
 bae:	f7 cf       	rjmp	.-18     	; 0xb9e <free+0xc2>
 bb0:	8d 91       	ld	r24, X+
 bb2:	9c 91       	ld	r25, X
 bb4:	11 97       	sbiw	r26, 0x01	; 1
 bb6:	9d 01       	movw	r18, r26
 bb8:	2e 5f       	subi	r18, 0xFE	; 254
 bba:	3f 4f       	sbci	r19, 0xFF	; 255
 bbc:	82 0f       	add	r24, r18
 bbe:	93 1f       	adc	r25, r19
 bc0:	20 91 b9 01 	lds	r18, 0x01B9	; 0x8001b9 <__brkval>
 bc4:	30 91 ba 01 	lds	r19, 0x01BA	; 0x8001ba <__brkval+0x1>
 bc8:	28 17       	cp	r18, r24
 bca:	39 07       	cpc	r19, r25
 bcc:	69 f4       	brne	.+26     	; 0xbe8 <free+0x10c>
 bce:	30 97       	sbiw	r30, 0x00	; 0
 bd0:	29 f4       	brne	.+10     	; 0xbdc <free+0x100>
 bd2:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <__flp+0x1>
 bd6:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <__flp>
 bda:	02 c0       	rjmp	.+4      	; 0xbe0 <free+0x104>
 bdc:	13 82       	std	Z+3, r1	; 0x03
 bde:	12 82       	std	Z+2, r1	; 0x02
 be0:	b0 93 ba 01 	sts	0x01BA, r27	; 0x8001ba <__brkval+0x1>
 be4:	a0 93 b9 01 	sts	0x01B9, r26	; 0x8001b9 <__brkval>
 be8:	df 91       	pop	r29
 bea:	cf 91       	pop	r28
 bec:	08 95       	ret

00000bee <strnlen_P>:
 bee:	fc 01       	movw	r30, r24
 bf0:	05 90       	lpm	r0, Z+
 bf2:	61 50       	subi	r22, 0x01	; 1
 bf4:	70 40       	sbci	r23, 0x00	; 0
 bf6:	01 10       	cpse	r0, r1
 bf8:	d8 f7       	brcc	.-10     	; 0xbf0 <strnlen_P+0x2>
 bfa:	80 95       	com	r24
 bfc:	90 95       	com	r25
 bfe:	8e 0f       	add	r24, r30
 c00:	9f 1f       	adc	r25, r31
 c02:	08 95       	ret

00000c04 <memset>:
 c04:	dc 01       	movw	r26, r24
 c06:	01 c0       	rjmp	.+2      	; 0xc0a <memset+0x6>
 c08:	6d 93       	st	X+, r22
 c0a:	41 50       	subi	r20, 0x01	; 1
 c0c:	50 40       	sbci	r21, 0x00	; 0
 c0e:	e0 f7       	brcc	.-8      	; 0xc08 <memset+0x4>
 c10:	08 95       	ret

00000c12 <strnlen>:
 c12:	fc 01       	movw	r30, r24
 c14:	61 50       	subi	r22, 0x01	; 1
 c16:	70 40       	sbci	r23, 0x00	; 0
 c18:	01 90       	ld	r0, Z+
 c1a:	01 10       	cpse	r0, r1
 c1c:	d8 f7       	brcc	.-10     	; 0xc14 <strnlen+0x2>
 c1e:	80 95       	com	r24
 c20:	90 95       	com	r25
 c22:	8e 0f       	add	r24, r30
 c24:	9f 1f       	adc	r25, r31
 c26:	08 95       	ret

00000c28 <fputc>:
 c28:	0f 93       	push	r16
 c2a:	1f 93       	push	r17
 c2c:	cf 93       	push	r28
 c2e:	df 93       	push	r29
 c30:	fb 01       	movw	r30, r22
 c32:	23 81       	ldd	r18, Z+3	; 0x03
 c34:	21 fd       	sbrc	r18, 1
 c36:	03 c0       	rjmp	.+6      	; 0xc3e <fputc+0x16>
 c38:	8f ef       	ldi	r24, 0xFF	; 255
 c3a:	9f ef       	ldi	r25, 0xFF	; 255
 c3c:	2c c0       	rjmp	.+88     	; 0xc96 <fputc+0x6e>
 c3e:	22 ff       	sbrs	r18, 2
 c40:	16 c0       	rjmp	.+44     	; 0xc6e <fputc+0x46>
 c42:	46 81       	ldd	r20, Z+6	; 0x06
 c44:	57 81       	ldd	r21, Z+7	; 0x07
 c46:	24 81       	ldd	r18, Z+4	; 0x04
 c48:	35 81       	ldd	r19, Z+5	; 0x05
 c4a:	42 17       	cp	r20, r18
 c4c:	53 07       	cpc	r21, r19
 c4e:	44 f4       	brge	.+16     	; 0xc60 <fputc+0x38>
 c50:	a0 81       	ld	r26, Z
 c52:	b1 81       	ldd	r27, Z+1	; 0x01
 c54:	9d 01       	movw	r18, r26
 c56:	2f 5f       	subi	r18, 0xFF	; 255
 c58:	3f 4f       	sbci	r19, 0xFF	; 255
 c5a:	31 83       	std	Z+1, r19	; 0x01
 c5c:	20 83       	st	Z, r18
 c5e:	8c 93       	st	X, r24
 c60:	26 81       	ldd	r18, Z+6	; 0x06
 c62:	37 81       	ldd	r19, Z+7	; 0x07
 c64:	2f 5f       	subi	r18, 0xFF	; 255
 c66:	3f 4f       	sbci	r19, 0xFF	; 255
 c68:	37 83       	std	Z+7, r19	; 0x07
 c6a:	26 83       	std	Z+6, r18	; 0x06
 c6c:	14 c0       	rjmp	.+40     	; 0xc96 <fputc+0x6e>
 c6e:	8b 01       	movw	r16, r22
 c70:	ec 01       	movw	r28, r24
 c72:	fb 01       	movw	r30, r22
 c74:	00 84       	ldd	r0, Z+8	; 0x08
 c76:	f1 85       	ldd	r31, Z+9	; 0x09
 c78:	e0 2d       	mov	r30, r0
 c7a:	09 95       	icall
 c7c:	89 2b       	or	r24, r25
 c7e:	e1 f6       	brne	.-72     	; 0xc38 <fputc+0x10>
 c80:	d8 01       	movw	r26, r16
 c82:	16 96       	adiw	r26, 0x06	; 6
 c84:	8d 91       	ld	r24, X+
 c86:	9c 91       	ld	r25, X
 c88:	17 97       	sbiw	r26, 0x07	; 7
 c8a:	01 96       	adiw	r24, 0x01	; 1
 c8c:	17 96       	adiw	r26, 0x07	; 7
 c8e:	9c 93       	st	X, r25
 c90:	8e 93       	st	-X, r24
 c92:	16 97       	sbiw	r26, 0x06	; 6
 c94:	ce 01       	movw	r24, r28
 c96:	df 91       	pop	r29
 c98:	cf 91       	pop	r28
 c9a:	1f 91       	pop	r17
 c9c:	0f 91       	pop	r16
 c9e:	08 95       	ret

00000ca0 <__ultoa_invert>:
 ca0:	fa 01       	movw	r30, r20
 ca2:	aa 27       	eor	r26, r26
 ca4:	28 30       	cpi	r18, 0x08	; 8
 ca6:	51 f1       	breq	.+84     	; 0xcfc <__ultoa_invert+0x5c>
 ca8:	20 31       	cpi	r18, 0x10	; 16
 caa:	81 f1       	breq	.+96     	; 0xd0c <__ultoa_invert+0x6c>
 cac:	e8 94       	clt
 cae:	6f 93       	push	r22
 cb0:	6e 7f       	andi	r22, 0xFE	; 254
 cb2:	6e 5f       	subi	r22, 0xFE	; 254
 cb4:	7f 4f       	sbci	r23, 0xFF	; 255
 cb6:	8f 4f       	sbci	r24, 0xFF	; 255
 cb8:	9f 4f       	sbci	r25, 0xFF	; 255
 cba:	af 4f       	sbci	r26, 0xFF	; 255
 cbc:	b1 e0       	ldi	r27, 0x01	; 1
 cbe:	3e d0       	rcall	.+124    	; 0xd3c <__ultoa_invert+0x9c>
 cc0:	b4 e0       	ldi	r27, 0x04	; 4
 cc2:	3c d0       	rcall	.+120    	; 0xd3c <__ultoa_invert+0x9c>
 cc4:	67 0f       	add	r22, r23
 cc6:	78 1f       	adc	r23, r24
 cc8:	89 1f       	adc	r24, r25
 cca:	9a 1f       	adc	r25, r26
 ccc:	a1 1d       	adc	r26, r1
 cce:	68 0f       	add	r22, r24
 cd0:	79 1f       	adc	r23, r25
 cd2:	8a 1f       	adc	r24, r26
 cd4:	91 1d       	adc	r25, r1
 cd6:	a1 1d       	adc	r26, r1
 cd8:	6a 0f       	add	r22, r26
 cda:	71 1d       	adc	r23, r1
 cdc:	81 1d       	adc	r24, r1
 cde:	91 1d       	adc	r25, r1
 ce0:	a1 1d       	adc	r26, r1
 ce2:	20 d0       	rcall	.+64     	; 0xd24 <__ultoa_invert+0x84>
 ce4:	09 f4       	brne	.+2      	; 0xce8 <__ultoa_invert+0x48>
 ce6:	68 94       	set
 ce8:	3f 91       	pop	r19
 cea:	2a e0       	ldi	r18, 0x0A	; 10
 cec:	26 9f       	mul	r18, r22
 cee:	11 24       	eor	r1, r1
 cf0:	30 19       	sub	r19, r0
 cf2:	30 5d       	subi	r19, 0xD0	; 208
 cf4:	31 93       	st	Z+, r19
 cf6:	de f6       	brtc	.-74     	; 0xcae <__ultoa_invert+0xe>
 cf8:	cf 01       	movw	r24, r30
 cfa:	08 95       	ret
 cfc:	46 2f       	mov	r20, r22
 cfe:	47 70       	andi	r20, 0x07	; 7
 d00:	40 5d       	subi	r20, 0xD0	; 208
 d02:	41 93       	st	Z+, r20
 d04:	b3 e0       	ldi	r27, 0x03	; 3
 d06:	0f d0       	rcall	.+30     	; 0xd26 <__ultoa_invert+0x86>
 d08:	c9 f7       	brne	.-14     	; 0xcfc <__ultoa_invert+0x5c>
 d0a:	f6 cf       	rjmp	.-20     	; 0xcf8 <__ultoa_invert+0x58>
 d0c:	46 2f       	mov	r20, r22
 d0e:	4f 70       	andi	r20, 0x0F	; 15
 d10:	40 5d       	subi	r20, 0xD0	; 208
 d12:	4a 33       	cpi	r20, 0x3A	; 58
 d14:	18 f0       	brcs	.+6      	; 0xd1c <__ultoa_invert+0x7c>
 d16:	49 5d       	subi	r20, 0xD9	; 217
 d18:	31 fd       	sbrc	r19, 1
 d1a:	40 52       	subi	r20, 0x20	; 32
 d1c:	41 93       	st	Z+, r20
 d1e:	02 d0       	rcall	.+4      	; 0xd24 <__ultoa_invert+0x84>
 d20:	a9 f7       	brne	.-22     	; 0xd0c <__ultoa_invert+0x6c>
 d22:	ea cf       	rjmp	.-44     	; 0xcf8 <__ultoa_invert+0x58>
 d24:	b4 e0       	ldi	r27, 0x04	; 4
 d26:	a6 95       	lsr	r26
 d28:	97 95       	ror	r25
 d2a:	87 95       	ror	r24
 d2c:	77 95       	ror	r23
 d2e:	67 95       	ror	r22
 d30:	ba 95       	dec	r27
 d32:	c9 f7       	brne	.-14     	; 0xd26 <__ultoa_invert+0x86>
 d34:	00 97       	sbiw	r24, 0x00	; 0
 d36:	61 05       	cpc	r22, r1
 d38:	71 05       	cpc	r23, r1
 d3a:	08 95       	ret
 d3c:	9b 01       	movw	r18, r22
 d3e:	ac 01       	movw	r20, r24
 d40:	0a 2e       	mov	r0, r26
 d42:	06 94       	lsr	r0
 d44:	57 95       	ror	r21
 d46:	47 95       	ror	r20
 d48:	37 95       	ror	r19
 d4a:	27 95       	ror	r18
 d4c:	ba 95       	dec	r27
 d4e:	c9 f7       	brne	.-14     	; 0xd42 <__ultoa_invert+0xa2>
 d50:	62 0f       	add	r22, r18
 d52:	73 1f       	adc	r23, r19
 d54:	84 1f       	adc	r24, r20
 d56:	95 1f       	adc	r25, r21
 d58:	a0 1d       	adc	r26, r0
 d5a:	08 95       	ret

00000d5c <__prologue_saves__>:
 d5c:	2f 92       	push	r2
 d5e:	3f 92       	push	r3
 d60:	4f 92       	push	r4
 d62:	5f 92       	push	r5
 d64:	6f 92       	push	r6
 d66:	7f 92       	push	r7
 d68:	8f 92       	push	r8
 d6a:	9f 92       	push	r9
 d6c:	af 92       	push	r10
 d6e:	bf 92       	push	r11
 d70:	cf 92       	push	r12
 d72:	df 92       	push	r13
 d74:	ef 92       	push	r14
 d76:	ff 92       	push	r15
 d78:	0f 93       	push	r16
 d7a:	1f 93       	push	r17
 d7c:	cf 93       	push	r28
 d7e:	df 93       	push	r29
 d80:	cd b7       	in	r28, 0x3d	; 61
 d82:	de b7       	in	r29, 0x3e	; 62
 d84:	ca 1b       	sub	r28, r26
 d86:	db 0b       	sbc	r29, r27
 d88:	0f b6       	in	r0, 0x3f	; 63
 d8a:	f8 94       	cli
 d8c:	de bf       	out	0x3e, r29	; 62
 d8e:	0f be       	out	0x3f, r0	; 63
 d90:	cd bf       	out	0x3d, r28	; 61
 d92:	09 94       	ijmp

00000d94 <__epilogue_restores__>:
 d94:	2a 88       	ldd	r2, Y+18	; 0x12
 d96:	39 88       	ldd	r3, Y+17	; 0x11
 d98:	48 88       	ldd	r4, Y+16	; 0x10
 d9a:	5f 84       	ldd	r5, Y+15	; 0x0f
 d9c:	6e 84       	ldd	r6, Y+14	; 0x0e
 d9e:	7d 84       	ldd	r7, Y+13	; 0x0d
 da0:	8c 84       	ldd	r8, Y+12	; 0x0c
 da2:	9b 84       	ldd	r9, Y+11	; 0x0b
 da4:	aa 84       	ldd	r10, Y+10	; 0x0a
 da6:	b9 84       	ldd	r11, Y+9	; 0x09
 da8:	c8 84       	ldd	r12, Y+8	; 0x08
 daa:	df 80       	ldd	r13, Y+7	; 0x07
 dac:	ee 80       	ldd	r14, Y+6	; 0x06
 dae:	fd 80       	ldd	r15, Y+5	; 0x05
 db0:	0c 81       	ldd	r16, Y+4	; 0x04
 db2:	1b 81       	ldd	r17, Y+3	; 0x03
 db4:	aa 81       	ldd	r26, Y+2	; 0x02
 db6:	b9 81       	ldd	r27, Y+1	; 0x01
 db8:	ce 0f       	add	r28, r30
 dba:	d1 1d       	adc	r29, r1
 dbc:	0f b6       	in	r0, 0x3f	; 63
 dbe:	f8 94       	cli
 dc0:	de bf       	out	0x3e, r29	; 62
 dc2:	0f be       	out	0x3f, r0	; 63
 dc4:	cd bf       	out	0x3d, r28	; 61
 dc6:	ed 01       	movw	r28, r26
 dc8:	08 95       	ret

00000dca <_exit>:
 dca:	f8 94       	cli

00000dcc <__stop_program>:
 dcc:	ff cf       	rjmp	.-2      	; 0xdcc <__stop_program>
