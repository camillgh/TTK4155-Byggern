
GccApplication2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013e0  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  000813e0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000094  20000434  00081814  00020434  2**2
                  ALLOC
  3 .stack        00000400  200004c8  000818a8  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008c8  00081ca8  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00004f98  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000dab  00000000  00000000  0002544e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00001055  00000000  00000000  000261f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000180  00000000  00000000  0002724e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  000273ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00011d90  00000000  00000000  00027516  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000037ee  00000000  00000000  000392a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000543a9  00000000  00000000  0003ca94  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000005e8  00000000  00000000  00090e40  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	c8 08 00 20 95 03 08 00 91 03 08 00 91 03 08 00     ... ............
   80010:	91 03 08 00 91 03 08 00 91 03 08 00 00 00 00 00     ................
	...
   8002c:	91 03 08 00 91 03 08 00 00 00 00 00 91 03 08 00     ................
   8003c:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   8004c:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   8005c:	91 03 08 00 71 09 08 00 91 03 08 00 00 00 00 00     ....q...........
   8006c:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
	...
   80084:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   80094:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   800a4:	00 00 00 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   800b4:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   800c4:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   800d4:	91 03 08 00 91 03 08 00 91 03 08 00 91 03 08 00     ................
   800e4:	91 03 08 00 91 03 08 00 d5 02 08 00 91 03 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	000813e0 	.word	0x000813e0

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000813e0 	.word	0x000813e0
   80154:	20000438 	.word	0x20000438
   80158:	000813e0 	.word	0x000813e0
   8015c:	00000000 	.word	0x00000000

00080160 <can_init>:
   80160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   80164:	1855      	adds	r5, r2, r1
   80166:	2908      	cmp	r1, #8
   80168:	bf98      	it	ls
   8016a:	2a08      	cmpls	r2, #8
   8016c:	d864      	bhi.n	80238 <can_init+0xd8>
   8016e:	460e      	mov	r6, r1
   80170:	2d08      	cmp	r5, #8
   80172:	dc61      	bgt.n	80238 <can_init+0xd8>
   80174:	4a32      	ldr	r2, [pc, #200]	; (80240 <can_init+0xe0>)
   80176:	6813      	ldr	r3, [r2, #0]
   80178:	f023 0301 	bic.w	r3, r3, #1
   8017c:	6013      	str	r3, [r2, #0]
   8017e:	6913      	ldr	r3, [r2, #16]
   80180:	4b30      	ldr	r3, [pc, #192]	; (80244 <can_init+0xe4>)
   80182:	f44f 7440 	mov.w	r4, #768	; 0x300
   80186:	645c      	str	r4, [r3, #68]	; 0x44
   80188:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   8018a:	f024 0403 	bic.w	r4, r4, #3
   8018e:	671c      	str	r4, [r3, #112]	; 0x70
   80190:	2403      	movs	r4, #3
   80192:	605c      	str	r4, [r3, #4]
   80194:	665c      	str	r4, [r3, #100]	; 0x64
   80196:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8019a:	4c2b      	ldr	r4, [pc, #172]	; (80248 <can_init+0xe8>)
   8019c:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   801a0:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801a4:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801a8:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   801ac:	6150      	str	r0, [r2, #20]
   801ae:	42a9      	cmp	r1, r5
   801b0:	dc40      	bgt.n	80234 <can_init+0xd4>
   801b2:	460a      	mov	r2, r1
   801b4:	2400      	movs	r4, #0
   801b6:	46a1      	mov	r9, r4
   801b8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80240 <can_init+0xe0>
   801bc:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
   801c0:	f04f 7e80 	mov.w	lr, #16777216	; 0x1000000
   801c4:	2701      	movs	r7, #1
   801c6:	0153      	lsls	r3, r2, #5
   801c8:	f103 2040 	add.w	r0, r3, #1073758208	; 0x40004000
   801cc:	f500 2030 	add.w	r0, r0, #720896	; 0xb0000
   801d0:	f8c0 9204 	str.w	r9, [r0, #516]	; 0x204
   801d4:	4443      	add	r3, r8
   801d6:	f8c3 c208 	str.w	ip, [r3, #520]	; 0x208
   801da:	f8c0 e200 	str.w	lr, [r0, #512]	; 0x200
   801de:	f8d3 021c 	ldr.w	r0, [r3, #540]	; 0x21c
   801e2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   801e6:	f8c3 021c 	str.w	r0, [r3, #540]	; 0x21c
   801ea:	fa07 f302 	lsl.w	r3, r7, r2
   801ee:	431c      	orrs	r4, r3
   801f0:	3201      	adds	r2, #1
   801f2:	4295      	cmp	r5, r2
   801f4:	dae7      	bge.n	801c6 <can_init+0x66>
   801f6:	b181      	cbz	r1, 8021a <can_init+0xba>
   801f8:	2300      	movs	r3, #0
   801fa:	4911      	ldr	r1, [pc, #68]	; (80240 <can_init+0xe0>)
   801fc:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
   80200:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80204:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   80208:	f8c2 5208 	str.w	r5, [r2, #520]	; 0x208
   8020c:	f103 0210 	add.w	r2, r3, #16
   80210:	0152      	lsls	r2, r2, #5
   80212:	5088      	str	r0, [r1, r2]
   80214:	3301      	adds	r3, #1
   80216:	429e      	cmp	r6, r3
   80218:	d1f4      	bne.n	80204 <can_init+0xa4>
   8021a:	4b09      	ldr	r3, [pc, #36]	; (80240 <can_init+0xe0>)
   8021c:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   8021e:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80222:	4a0a      	ldr	r2, [pc, #40]	; (8024c <can_init+0xec>)
   80224:	6051      	str	r1, [r2, #4]
   80226:	681a      	ldr	r2, [r3, #0]
   80228:	f042 0201 	orr.w	r2, r2, #1
   8022c:	601a      	str	r2, [r3, #0]
   8022e:	2000      	movs	r0, #0
   80230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   80234:	2400      	movs	r4, #0
   80236:	e7de      	b.n	801f6 <can_init+0x96>
   80238:	2001      	movs	r0, #1
   8023a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8023e:	bf00      	nop
   80240:	400b4000 	.word	0x400b4000
   80244:	400e0e00 	.word	0x400e0e00
   80248:	1000102b 	.word	0x1000102b
   8024c:	e000e100 	.word	0xe000e100

00080250 <can_receive>:
   80250:	014b      	lsls	r3, r1, #5
   80252:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80256:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8025a:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8025e:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80262:	d033      	beq.n	802cc <can_receive+0x7c>
   80264:	b430      	push	{r4, r5}
   80266:	014b      	lsls	r3, r1, #5
   80268:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8026c:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   80270:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
   80274:	f8d3 4218 	ldr.w	r4, [r3, #536]	; 0x218
   80278:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   8027c:	f3c5 458a 	ubfx	r5, r5, #18, #11
   80280:	8005      	strh	r5, [r0, #0]
   80282:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   80286:	f3c3 4303 	ubfx	r3, r3, #16, #4
   8028a:	7083      	strb	r3, [r0, #2]
   8028c:	461d      	mov	r5, r3
   8028e:	b15b      	cbz	r3, 802a8 <can_receive+0x58>
   80290:	3003      	adds	r0, #3
   80292:	2300      	movs	r3, #0
   80294:	2b03      	cmp	r3, #3
   80296:	bfd9      	ittee	le
   80298:	7002      	strble	r2, [r0, #0]
   8029a:	0a12      	lsrle	r2, r2, #8
   8029c:	7004      	strbgt	r4, [r0, #0]
   8029e:	0a24      	lsrgt	r4, r4, #8
   802a0:	3301      	adds	r3, #1
   802a2:	3001      	adds	r0, #1
   802a4:	42ab      	cmp	r3, r5
   802a6:	d1f5      	bne.n	80294 <can_receive+0x44>
   802a8:	4b09      	ldr	r3, [pc, #36]	; (802d0 <can_receive+0x80>)
   802aa:	f101 0210 	add.w	r2, r1, #16
   802ae:	0152      	lsls	r2, r2, #5
   802b0:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   802b4:	5098      	str	r0, [r3, r2]
   802b6:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   802ba:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   802be:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802c2:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   802c6:	2000      	movs	r0, #0
   802c8:	bc30      	pop	{r4, r5}
   802ca:	4770      	bx	lr
   802cc:	2001      	movs	r0, #1
   802ce:	4770      	bx	lr
   802d0:	400b4000 	.word	0x400b4000

000802d4 <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   802d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   802d8:	b084      	sub	sp, #16
	if(DEBUG_INTERRUPT)printf("CAN0 interrupt\n\r");
   802da:	4823      	ldr	r0, [pc, #140]	; (80368 <CAN0_Handler+0x94>)
   802dc:	4b23      	ldr	r3, [pc, #140]	; (8036c <CAN0_Handler+0x98>)
   802de:	4798      	blx	r3
	char can_sr = CAN0->CAN_SR; 
   802e0:	4b23      	ldr	r3, [pc, #140]	; (80370 <CAN0_Handler+0x9c>)
   802e2:	f8d3 8010 	ldr.w	r8, [r3, #16]
	
    //printf("can_sr: %d\n\r",can_sr); 
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   802e6:	f018 0f06 	tst.w	r8, #6
   802ea:	d026      	beq.n	8033a <CAN0_Handler+0x66>

	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   802ec:	f018 0f02 	tst.w	r8, #2
   802f0:	d131      	bne.n	80356 <CAN0_Handler+0x82>
		{
			can_receive(&message, 1);

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   802f2:	f018 0f04 	tst.w	r8, #4
   802f6:	d033      	beq.n	80360 <CAN0_Handler+0x8c>
		
		{
			can_receive(&message, 2);
   802f8:	2102      	movs	r1, #2
   802fa:	a801      	add	r0, sp, #4
   802fc:	4b1d      	ldr	r3, [pc, #116]	; (80374 <CAN0_Handler+0xa0>)
   802fe:	4798      	blx	r3
		else
		{
			printf("CAN0 message arrived in non-used mailbox\n\r");
		}

		if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
   80300:	f8bd 1004 	ldrh.w	r1, [sp, #4]
   80304:	481c      	ldr	r0, [pc, #112]	; (80378 <CAN0_Handler+0xa4>)
   80306:	4c19      	ldr	r4, [pc, #100]	; (8036c <CAN0_Handler+0x98>)
   80308:	47a0      	blx	r4
		if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
   8030a:	f89d 1006 	ldrb.w	r1, [sp, #6]
   8030e:	481b      	ldr	r0, [pc, #108]	; (8037c <CAN0_Handler+0xa8>)
   80310:	47a0      	blx	r4
		for (int i = 0; i < message.data_length; i++)
   80312:	f89d 3006 	ldrb.w	r3, [sp, #6]
   80316:	b16b      	cbz	r3, 80334 <CAN0_Handler+0x60>
   80318:	f10d 0507 	add.w	r5, sp, #7
   8031c:	2400      	movs	r4, #0
		{
			if(DEBUG_INTERRUPT)printf("%d ", message.data[i]);
   8031e:	4f18      	ldr	r7, [pc, #96]	; (80380 <CAN0_Handler+0xac>)
   80320:	4e12      	ldr	r6, [pc, #72]	; (8036c <CAN0_Handler+0x98>)
   80322:	f815 1b01 	ldrb.w	r1, [r5], #1
   80326:	4638      	mov	r0, r7
   80328:	47b0      	blx	r6
		for (int i = 0; i < message.data_length; i++)
   8032a:	3401      	adds	r4, #1
   8032c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   80330:	42a3      	cmp	r3, r4
   80332:	dcf6      	bgt.n	80322 <CAN0_Handler+0x4e>
		}
		if(DEBUG_INTERRUPT)printf("\n\r");
   80334:	4813      	ldr	r0, [pc, #76]	; (80384 <CAN0_Handler+0xb0>)
   80336:	4b0d      	ldr	r3, [pc, #52]	; (8036c <CAN0_Handler+0x98>)
   80338:	4798      	blx	r3
	}
	
	if(can_sr & CAN_SR_MB0)
   8033a:	f018 0f01 	tst.w	r8, #1
   8033e:	d002      	beq.n	80346 <CAN0_Handler+0x72>
	{
		if(DEBUG_INTERRUPT);// printf("CAN0 MB0 ready to send \n\r");
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   80340:	2201      	movs	r2, #1
   80342:	4b0b      	ldr	r3, [pc, #44]	; (80370 <CAN0_Handler+0x9c>)
   80344:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   80346:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8034a:	4b0f      	ldr	r3, [pc, #60]	; (80388 <CAN0_Handler+0xb4>)
   8034c:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

	}
	
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/
}
   80350:	b004      	add	sp, #16
   80352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			can_receive(&message, 1);
   80356:	2101      	movs	r1, #1
   80358:	a801      	add	r0, sp, #4
   8035a:	4b06      	ldr	r3, [pc, #24]	; (80374 <CAN0_Handler+0xa0>)
   8035c:	4798      	blx	r3
   8035e:	e7cf      	b.n	80300 <CAN0_Handler+0x2c>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   80360:	480a      	ldr	r0, [pc, #40]	; (8038c <CAN0_Handler+0xb8>)
   80362:	4b02      	ldr	r3, [pc, #8]	; (8036c <CAN0_Handler+0x98>)
   80364:	4798      	blx	r3
   80366:	e7cb      	b.n	80300 <CAN0_Handler+0x2c>
   80368:	0008131c 	.word	0x0008131c
   8036c:	000808c1 	.word	0x000808c1
   80370:	400b4000 	.word	0x400b4000
   80374:	00080251 	.word	0x00080251
   80378:	0008135c 	.word	0x0008135c
   8037c:	00081370 	.word	0x00081370
   80380:	0008138c 	.word	0x0008138c
   80384:	00081358 	.word	0x00081358
   80388:	e000e100 	.word	0xe000e100
   8038c:	00081330 	.word	0x00081330

00080390 <Dummy_Handler>:
   80390:	e7fe      	b.n	80390 <Dummy_Handler>
	...

00080394 <Reset_Handler>:
   80394:	b508      	push	{r3, lr}
   80396:	4b18      	ldr	r3, [pc, #96]	; (803f8 <Reset_Handler+0x64>)
   80398:	4a18      	ldr	r2, [pc, #96]	; (803fc <Reset_Handler+0x68>)
   8039a:	429a      	cmp	r2, r3
   8039c:	d010      	beq.n	803c0 <Reset_Handler+0x2c>
   8039e:	4b18      	ldr	r3, [pc, #96]	; (80400 <Reset_Handler+0x6c>)
   803a0:	4a15      	ldr	r2, [pc, #84]	; (803f8 <Reset_Handler+0x64>)
   803a2:	429a      	cmp	r2, r3
   803a4:	d20c      	bcs.n	803c0 <Reset_Handler+0x2c>
   803a6:	3b01      	subs	r3, #1
   803a8:	1a9b      	subs	r3, r3, r2
   803aa:	f023 0303 	bic.w	r3, r3, #3
   803ae:	3304      	adds	r3, #4
   803b0:	4413      	add	r3, r2
   803b2:	4912      	ldr	r1, [pc, #72]	; (803fc <Reset_Handler+0x68>)
   803b4:	f851 0b04 	ldr.w	r0, [r1], #4
   803b8:	f842 0b04 	str.w	r0, [r2], #4
   803bc:	429a      	cmp	r2, r3
   803be:	d1f9      	bne.n	803b4 <Reset_Handler+0x20>
   803c0:	4b10      	ldr	r3, [pc, #64]	; (80404 <Reset_Handler+0x70>)
   803c2:	4a11      	ldr	r2, [pc, #68]	; (80408 <Reset_Handler+0x74>)
   803c4:	429a      	cmp	r2, r3
   803c6:	d20a      	bcs.n	803de <Reset_Handler+0x4a>
   803c8:	3b01      	subs	r3, #1
   803ca:	1a9b      	subs	r3, r3, r2
   803cc:	f023 0303 	bic.w	r3, r3, #3
   803d0:	3304      	adds	r3, #4
   803d2:	4413      	add	r3, r2
   803d4:	2100      	movs	r1, #0
   803d6:	f842 1b04 	str.w	r1, [r2], #4
   803da:	4293      	cmp	r3, r2
   803dc:	d1fb      	bne.n	803d6 <Reset_Handler+0x42>
   803de:	4b0b      	ldr	r3, [pc, #44]	; (8040c <Reset_Handler+0x78>)
   803e0:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   803e4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   803e8:	4a09      	ldr	r2, [pc, #36]	; (80410 <Reset_Handler+0x7c>)
   803ea:	6093      	str	r3, [r2, #8]
   803ec:	4b09      	ldr	r3, [pc, #36]	; (80414 <Reset_Handler+0x80>)
   803ee:	4798      	blx	r3
   803f0:	4b09      	ldr	r3, [pc, #36]	; (80418 <Reset_Handler+0x84>)
   803f2:	4798      	blx	r3
   803f4:	e7fe      	b.n	803f4 <Reset_Handler+0x60>
   803f6:	bf00      	nop
   803f8:	20000000 	.word	0x20000000
   803fc:	000813e0 	.word	0x000813e0
   80400:	20000434 	.word	0x20000434
   80404:	200004c8 	.word	0x200004c8
   80408:	20000434 	.word	0x20000434
   8040c:	00080000 	.word	0x00080000
   80410:	e000ed00 	.word	0xe000ed00
   80414:	000811ad 	.word	0x000811ad
   80418:	000804c1 	.word	0x000804c1

0008041c <SystemInit>:
   8041c:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80420:	4a20      	ldr	r2, [pc, #128]	; (804a4 <SystemInit+0x88>)
   80422:	6013      	str	r3, [r2, #0]
   80424:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80428:	6013      	str	r3, [r2, #0]
   8042a:	4b1f      	ldr	r3, [pc, #124]	; (804a8 <SystemInit+0x8c>)
   8042c:	6a1b      	ldr	r3, [r3, #32]
   8042e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80432:	d107      	bne.n	80444 <SystemInit+0x28>
   80434:	4a1d      	ldr	r2, [pc, #116]	; (804ac <SystemInit+0x90>)
   80436:	4b1c      	ldr	r3, [pc, #112]	; (804a8 <SystemInit+0x8c>)
   80438:	621a      	str	r2, [r3, #32]
   8043a:	461a      	mov	r2, r3
   8043c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8043e:	f013 0f01 	tst.w	r3, #1
   80442:	d0fb      	beq.n	8043c <SystemInit+0x20>
   80444:	4a1a      	ldr	r2, [pc, #104]	; (804b0 <SystemInit+0x94>)
   80446:	4b18      	ldr	r3, [pc, #96]	; (804a8 <SystemInit+0x8c>)
   80448:	621a      	str	r2, [r3, #32]
   8044a:	461a      	mov	r2, r3
   8044c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8044e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80452:	d0fb      	beq.n	8044c <SystemInit+0x30>
   80454:	4a14      	ldr	r2, [pc, #80]	; (804a8 <SystemInit+0x8c>)
   80456:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80458:	f023 0303 	bic.w	r3, r3, #3
   8045c:	f043 0301 	orr.w	r3, r3, #1
   80460:	6313      	str	r3, [r2, #48]	; 0x30
   80462:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80464:	f013 0f08 	tst.w	r3, #8
   80468:	d0fb      	beq.n	80462 <SystemInit+0x46>
   8046a:	4a12      	ldr	r2, [pc, #72]	; (804b4 <SystemInit+0x98>)
   8046c:	4b0e      	ldr	r3, [pc, #56]	; (804a8 <SystemInit+0x8c>)
   8046e:	629a      	str	r2, [r3, #40]	; 0x28
   80470:	461a      	mov	r2, r3
   80472:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80474:	f013 0f02 	tst.w	r3, #2
   80478:	d0fb      	beq.n	80472 <SystemInit+0x56>
   8047a:	2211      	movs	r2, #17
   8047c:	4b0a      	ldr	r3, [pc, #40]	; (804a8 <SystemInit+0x8c>)
   8047e:	631a      	str	r2, [r3, #48]	; 0x30
   80480:	461a      	mov	r2, r3
   80482:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80484:	f013 0f08 	tst.w	r3, #8
   80488:	d0fb      	beq.n	80482 <SystemInit+0x66>
   8048a:	2212      	movs	r2, #18
   8048c:	4b06      	ldr	r3, [pc, #24]	; (804a8 <SystemInit+0x8c>)
   8048e:	631a      	str	r2, [r3, #48]	; 0x30
   80490:	461a      	mov	r2, r3
   80492:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80494:	f013 0f08 	tst.w	r3, #8
   80498:	d0fb      	beq.n	80492 <SystemInit+0x76>
   8049a:	4a07      	ldr	r2, [pc, #28]	; (804b8 <SystemInit+0x9c>)
   8049c:	4b07      	ldr	r3, [pc, #28]	; (804bc <SystemInit+0xa0>)
   8049e:	601a      	str	r2, [r3, #0]
   804a0:	4770      	bx	lr
   804a2:	bf00      	nop
   804a4:	400e0a00 	.word	0x400e0a00
   804a8:	400e0600 	.word	0x400e0600
   804ac:	00370809 	.word	0x00370809
   804b0:	01370809 	.word	0x01370809
   804b4:	200d3f01 	.word	0x200d3f01
   804b8:	0501bd00 	.word	0x0501bd00
   804bc:	20000000 	.word	0x20000000

000804c0 <main>:
 }

CAN_MESSAGE message;

int main(void)
{
   804c0:	b508      	push	{r3, lr}
	
	// Assignment 6
	SystemInit();
   804c2:	4b0c      	ldr	r3, [pc, #48]	; (804f4 <main+0x34>)
   804c4:	4798      	blx	r3
	configure_uart();
   804c6:	4b0c      	ldr	r3, [pc, #48]	; (804f8 <main+0x38>)
   804c8:	4798      	blx	r3
	can_init(CAN_BR, 1,1);
   804ca:	2201      	movs	r2, #1
   804cc:	4611      	mov	r1, r2
   804ce:	480b      	ldr	r0, [pc, #44]	; (804fc <main+0x3c>)
   804d0:	4b0b      	ldr	r3, [pc, #44]	; (80500 <main+0x40>)
   804d2:	4798      	blx	r3
	//can_init_def_tx_rx_mb(CAN_BR);
	WDT->WDT_MR = WDT_MR_WDDIS;
   804d4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   804d8:	4b0a      	ldr	r3, [pc, #40]	; (80504 <main+0x44>)
   804da:	605a      	str	r2, [r3, #4]
	pwm_timercounter_init();
   804dc:	4b0a      	ldr	r3, [pc, #40]	; (80508 <main+0x48>)
   804de:	4798      	blx	r3
	
	//Assignment 6
	
	while (1)
	{
		can_receive(&message,0);
   804e0:	4c0a      	ldr	r4, [pc, #40]	; (8050c <main+0x4c>)
   804e2:	4e0b      	ldr	r6, [pc, #44]	; (80510 <main+0x50>)
		pwm_update_dutycycle(message.data[0]);
   804e4:	4d0b      	ldr	r5, [pc, #44]	; (80514 <main+0x54>)
		can_receive(&message,0);
   804e6:	2100      	movs	r1, #0
   804e8:	4620      	mov	r0, r4
   804ea:	47b0      	blx	r6
		pwm_update_dutycycle(message.data[0]);
   804ec:	78e0      	ldrb	r0, [r4, #3]
   804ee:	47a8      	blx	r5
   804f0:	e7f9      	b.n	804e6 <main+0x26>
   804f2:	bf00      	nop
   804f4:	0008041d 	.word	0x0008041d
   804f8:	000808e5 	.word	0x000808e5
   804fc:	00290561 	.word	0x00290561
   80500:	00080161 	.word	0x00080161
   80504:	400e1a50 	.word	0x400e1a50
   80508:	00080519 	.word	0x00080519
   8050c:	20000450 	.word	0x20000450
   80510:	00080251 	.word	0x00080251
   80514:	00080581 	.word	0x00080581

00080518 <pwm_timercounter_init>:


void pwm_timercounter_init(void){
	
	// Enable clock on port C
	PMC->PMC_PCER0 |= (1 << ID_PIOC);
   80518:	4b17      	ldr	r3, [pc, #92]	; (80578 <pwm_timercounter_init+0x60>)
   8051a:	691a      	ldr	r2, [r3, #16]
   8051c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80520:	611a      	str	r2, [r3, #16]
	
	// Enable clock
	PMC->PMC_PCER1 |= (1 << ID_PWM-32);
   80522:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   80526:	f042 0210 	orr.w	r2, r2, #16
   8052a:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	
	// Disable input P44, used by PWM
	PIOC->PIO_PDR |= PIO_PDR_P19;
   8052e:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
   80532:	685a      	ldr	r2, [r3, #4]
   80534:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80538:	605a      	str	r2, [r3, #4]
	
	// Set peripheral C on P44
	PIOC->PIO_ABSR |= PIO_ABSR_P19;
   8053a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8053c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80540:	671a      	str	r2, [r3, #112]	; 0x70
	
	// Select CLKA, MCK/2
	PWM->PWM_CLK |= PWM_CLK_DIVA(1) | PWM_CLK_PREA(6);
   80542:	4b0e      	ldr	r3, [pc, #56]	; (8057c <pwm_timercounter_init+0x64>)
   80544:	681a      	ldr	r2, [r3, #0]
   80546:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
   8054a:	f042 0201 	orr.w	r2, r2, #1
   8054e:	601a      	str	r2, [r3, #0]
	
	
	PWM->PWM_CH_NUM[5].PWM_CMR |= (PWM_CMR_CPRE_CLKA);
   80550:	f8d3 22a0 	ldr.w	r2, [r3, #672]	; 0x2a0
   80554:	f042 020b 	orr.w	r2, r2, #11
   80558:	f8c3 22a0 	str.w	r2, [r3, #672]	; 0x2a0
	
	// Set period, 20 ms 
	PWM->PWM_CH_NUM[5].PWM_CPRD = 16*1640;
   8055c:	f44f 42cd 	mov.w	r2, #26240	; 0x6680
   80560:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
	
	// Set start duty cycle, 1.5ms
	PWM->PWM_CH_NUM[5].PWM_CDTY = 1312;
   80564:	f44f 62a4 	mov.w	r2, #1312	; 0x520
   80568:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
	
	// Enable channel
	PWM->PWM_ENA |= (PWM_ENA_CHID5);
   8056c:	685a      	ldr	r2, [r3, #4]
   8056e:	f042 0220 	orr.w	r2, r2, #32
   80572:	605a      	str	r2, [r3, #4]
   80574:	4770      	bx	lr
   80576:	bf00      	nop
   80578:	400e0600 	.word	0x400e0600
   8057c:	40094000 	.word	0x40094000

00080580 <pwm_update_dutycycle>:

}

void pwm_update_dutycycle(int32_t position){
   80580:	b510      	push	{r4, lr}
	if (position < 0) {
		position = 0;
	}

	
	dutycycle = (position/255.0)*diff + min_duty;
   80582:	f380 0008 	usat	r0, #8, r0
   80586:	4b16      	ldr	r3, [pc, #88]	; (805e0 <pwm_update_dutycycle+0x60>)
   80588:	4798      	blx	r3
   8058a:	a30f      	add	r3, pc, #60	; (adr r3, 805c8 <pwm_update_dutycycle+0x48>)
   8058c:	e9d3 2300 	ldrd	r2, r3, [r3]
   80590:	4c14      	ldr	r4, [pc, #80]	; (805e4 <pwm_update_dutycycle+0x64>)
   80592:	47a0      	blx	r4
   80594:	a30e      	add	r3, pc, #56	; (adr r3, 805d0 <pwm_update_dutycycle+0x50>)
   80596:	e9d3 2300 	ldrd	r2, r3, [r3]
   8059a:	4c13      	ldr	r4, [pc, #76]	; (805e8 <pwm_update_dutycycle+0x68>)
   8059c:	47a0      	blx	r4
   8059e:	a30e      	add	r3, pc, #56	; (adr r3, 805d8 <pwm_update_dutycycle+0x58>)
   805a0:	e9d3 2300 	ldrd	r2, r3, [r3]
   805a4:	4c11      	ldr	r4, [pc, #68]	; (805ec <pwm_update_dutycycle+0x6c>)
   805a6:	47a0      	blx	r4
   805a8:	4b11      	ldr	r3, [pc, #68]	; (805f0 <pwm_update_dutycycle+0x70>)
   805aa:	4798      	blx	r3
   805ac:	f640 23c3 	movw	r3, #2755	; 0xac3
   805b0:	4298      	cmp	r0, r3
   805b2:	bf28      	it	cs
   805b4:	4618      	movcs	r0, r3
   805b6:	f240 439d 	movw	r3, #1181	; 0x49d
   805ba:	4298      	cmp	r0, r3
   805bc:	bf38      	it	cc
   805be:	4618      	movcc	r0, r3
	
	if (dutycycle < min_duty){
		dutycycle = min_duty;
	}
	
	PWM->PWM_CH_NUM[5].PWM_CDTYUPD = dutycycle;
   805c0:	4b0c      	ldr	r3, [pc, #48]	; (805f4 <pwm_update_dutycycle+0x74>)
   805c2:	f8c3 02a8 	str.w	r0, [r3, #680]	; 0x2a8
   805c6:	bd10      	pop	{r4, pc}
   805c8:	00000000 	.word	0x00000000
   805cc:	406fe000 	.word	0x406fe000
   805d0:	00000000 	.word	0x00000000
   805d4:	40989800 	.word	0x40989800
   805d8:	00000000 	.word	0x00000000
   805dc:	40927400 	.word	0x40927400
   805e0:	00080c7d 	.word	0x00080c7d
   805e4:	00080f9d 	.word	0x00080f9d
   805e8:	00080d49 	.word	0x00080d49
   805ec:	000809e5 	.word	0x000809e5
   805f0:	0008116d 	.word	0x0008116d
   805f4:	40094000 	.word	0x40094000

000805f8 <prints>:
   805f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   805fc:	460d      	mov	r5, r1
   805fe:	1e16      	subs	r6, r2, #0
   80600:	dd48      	ble.n	80694 <prints+0x9c>
   80602:	780a      	ldrb	r2, [r1, #0]
   80604:	2a00      	cmp	r2, #0
   80606:	d035      	beq.n	80674 <prints+0x7c>
   80608:	460a      	mov	r2, r1
   8060a:	2400      	movs	r4, #0
   8060c:	3401      	adds	r4, #1
   8060e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   80612:	2900      	cmp	r1, #0
   80614:	d1fa      	bne.n	8060c <prints+0x14>
   80616:	42a6      	cmp	r6, r4
   80618:	dc2d      	bgt.n	80676 <prints+0x7e>
   8061a:	2400      	movs	r4, #0
   8061c:	f003 0202 	and.w	r2, r3, #2
   80620:	2a00      	cmp	r2, #0
   80622:	bf0c      	ite	eq
   80624:	f04f 0820 	moveq.w	r8, #32
   80628:	f04f 0830 	movne.w	r8, #48	; 0x30
   8062c:	f013 0301 	ands.w	r3, r3, #1
   80630:	d123      	bne.n	8067a <prints+0x82>
   80632:	2c00      	cmp	r4, #0
   80634:	dd28      	ble.n	80688 <prints+0x90>
   80636:	4626      	mov	r6, r4
   80638:	fa5f f988 	uxtb.w	r9, r8
   8063c:	4f18      	ldr	r7, [pc, #96]	; (806a0 <prints+0xa8>)
   8063e:	4648      	mov	r0, r9
   80640:	47b8      	blx	r7
   80642:	3e01      	subs	r6, #1
   80644:	d1fb      	bne.n	8063e <prints+0x46>
   80646:	7828      	ldrb	r0, [r5, #0]
   80648:	b188      	cbz	r0, 8066e <prints+0x76>
   8064a:	4f15      	ldr	r7, [pc, #84]	; (806a0 <prints+0xa8>)
   8064c:	47b8      	blx	r7
   8064e:	3401      	adds	r4, #1
   80650:	f815 0f01 	ldrb.w	r0, [r5, #1]!
   80654:	2800      	cmp	r0, #0
   80656:	d1f9      	bne.n	8064c <prints+0x54>
   80658:	2e00      	cmp	r6, #0
   8065a:	dd08      	ble.n	8066e <prints+0x76>
   8065c:	4635      	mov	r5, r6
   8065e:	fa5f f888 	uxtb.w	r8, r8
   80662:	4f0f      	ldr	r7, [pc, #60]	; (806a0 <prints+0xa8>)
   80664:	4640      	mov	r0, r8
   80666:	47b8      	blx	r7
   80668:	3d01      	subs	r5, #1
   8066a:	d1fb      	bne.n	80664 <prints+0x6c>
   8066c:	4434      	add	r4, r6
   8066e:	4620      	mov	r0, r4
   80670:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80674:	2400      	movs	r4, #0
   80676:	1b34      	subs	r4, r6, r4
   80678:	e7d0      	b.n	8061c <prints+0x24>
   8067a:	4626      	mov	r6, r4
   8067c:	7828      	ldrb	r0, [r5, #0]
   8067e:	b108      	cbz	r0, 80684 <prints+0x8c>
   80680:	2400      	movs	r4, #0
   80682:	e7e2      	b.n	8064a <prints+0x52>
   80684:	2400      	movs	r4, #0
   80686:	e7e7      	b.n	80658 <prints+0x60>
   80688:	4626      	mov	r6, r4
   8068a:	461c      	mov	r4, r3
   8068c:	e7db      	b.n	80646 <prints+0x4e>
   8068e:	f04f 0820 	mov.w	r8, #32
   80692:	e7d8      	b.n	80646 <prints+0x4e>
   80694:	f013 0401 	ands.w	r4, r3, #1
   80698:	d0f9      	beq.n	8068e <prints+0x96>
   8069a:	f04f 0820 	mov.w	r8, #32
   8069e:	e7ed      	b.n	8067c <prints+0x84>
   806a0:	0008094d 	.word	0x0008094d

000806a4 <printi>:
   806a4:	b5f0      	push	{r4, r5, r6, r7, lr}
   806a6:	b085      	sub	sp, #20
   806a8:	4607      	mov	r7, r0
   806aa:	b381      	cbz	r1, 8070e <printi+0x6a>
   806ac:	460c      	mov	r4, r1
   806ae:	b10b      	cbz	r3, 806b4 <printi+0x10>
   806b0:	2a0a      	cmp	r2, #10
   806b2:	d038      	beq.n	80726 <printi+0x82>
   806b4:	2300      	movs	r3, #0
   806b6:	f88d 300f 	strb.w	r3, [sp, #15]
   806ba:	2600      	movs	r6, #0
   806bc:	2900      	cmp	r1, #0
   806be:	d046      	beq.n	8074e <printi+0xaa>
   806c0:	f10d 050f 	add.w	r5, sp, #15
   806c4:	990c      	ldr	r1, [sp, #48]	; 0x30
   806c6:	393a      	subs	r1, #58	; 0x3a
   806c8:	fbb4 f3f2 	udiv	r3, r4, r2
   806cc:	fb02 4313 	mls	r3, r2, r3, r4
   806d0:	2b09      	cmp	r3, #9
   806d2:	bfc8      	it	gt
   806d4:	185b      	addgt	r3, r3, r1
   806d6:	3330      	adds	r3, #48	; 0x30
   806d8:	f805 3d01 	strb.w	r3, [r5, #-1]!
   806dc:	fbb4 f4f2 	udiv	r4, r4, r2
   806e0:	2c00      	cmp	r4, #0
   806e2:	d1f1      	bne.n	806c8 <printi+0x24>
   806e4:	b156      	cbz	r6, 806fc <printi+0x58>
   806e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   806e8:	b11b      	cbz	r3, 806f2 <printi+0x4e>
   806ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   806ec:	f013 0f02 	tst.w	r3, #2
   806f0:	d125      	bne.n	8073e <printi+0x9a>
   806f2:	232d      	movs	r3, #45	; 0x2d
   806f4:	f805 3c01 	strb.w	r3, [r5, #-1]
   806f8:	3d01      	subs	r5, #1
   806fa:	2600      	movs	r6, #0
   806fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   806fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80700:	4629      	mov	r1, r5
   80702:	4638      	mov	r0, r7
   80704:	4c14      	ldr	r4, [pc, #80]	; (80758 <printi+0xb4>)
   80706:	47a0      	blx	r4
   80708:	4430      	add	r0, r6
   8070a:	b005      	add	sp, #20
   8070c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8070e:	2330      	movs	r3, #48	; 0x30
   80710:	f88d 3004 	strb.w	r3, [sp, #4]
   80714:	2300      	movs	r3, #0
   80716:	f88d 3005 	strb.w	r3, [sp, #5]
   8071a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8071c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8071e:	a901      	add	r1, sp, #4
   80720:	4c0d      	ldr	r4, [pc, #52]	; (80758 <printi+0xb4>)
   80722:	47a0      	blx	r4
   80724:	e7f1      	b.n	8070a <printi+0x66>
   80726:	2900      	cmp	r1, #0
   80728:	dac4      	bge.n	806b4 <printi+0x10>
   8072a:	424c      	negs	r4, r1
   8072c:	2300      	movs	r3, #0
   8072e:	f88d 300f 	strb.w	r3, [sp, #15]
   80732:	f10d 050f 	add.w	r5, sp, #15
   80736:	2c00      	cmp	r4, #0
   80738:	d0d5      	beq.n	806e6 <printi+0x42>
   8073a:	2601      	movs	r6, #1
   8073c:	e7c0      	b.n	806c0 <printi+0x1c>
   8073e:	202d      	movs	r0, #45	; 0x2d
   80740:	4b06      	ldr	r3, [pc, #24]	; (8075c <printi+0xb8>)
   80742:	4798      	blx	r3
   80744:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80746:	3b01      	subs	r3, #1
   80748:	930a      	str	r3, [sp, #40]	; 0x28
   8074a:	2601      	movs	r6, #1
   8074c:	e7d6      	b.n	806fc <printi+0x58>
   8074e:	461e      	mov	r6, r3
   80750:	f10d 050f 	add.w	r5, sp, #15
   80754:	e7d2      	b.n	806fc <printi+0x58>
   80756:	bf00      	nop
   80758:	000805f9 	.word	0x000805f9
   8075c:	0008094d 	.word	0x0008094d

00080760 <print>:
   80760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80764:	b087      	sub	sp, #28
   80766:	4680      	mov	r8, r0
   80768:	780b      	ldrb	r3, [r1, #0]
   8076a:	2b00      	cmp	r3, #0
   8076c:	f000 8094 	beq.w	80898 <print+0x138>
   80770:	468b      	mov	fp, r1
   80772:	4617      	mov	r7, r2
   80774:	2500      	movs	r5, #0
   80776:	4e4e      	ldr	r6, [pc, #312]	; (808b0 <print+0x150>)
   80778:	f8df a13c 	ldr.w	sl, [pc, #316]	; 808b8 <print+0x158>
   8077c:	f8df 913c 	ldr.w	r9, [pc, #316]	; 808bc <print+0x15c>
   80780:	e046      	b.n	80810 <print+0xb0>
   80782:	2200      	movs	r2, #0
   80784:	e070      	b.n	80868 <print+0x108>
   80786:	6839      	ldr	r1, [r7, #0]
   80788:	3704      	adds	r7, #4
   8078a:	484a      	ldr	r0, [pc, #296]	; (808b4 <print+0x154>)
   8078c:	2900      	cmp	r1, #0
   8078e:	bf08      	it	eq
   80790:	4601      	moveq	r1, r0
   80792:	4640      	mov	r0, r8
   80794:	47d0      	blx	sl
   80796:	4405      	add	r5, r0
   80798:	e035      	b.n	80806 <print+0xa6>
   8079a:	6839      	ldr	r1, [r7, #0]
   8079c:	3704      	adds	r7, #4
   8079e:	2061      	movs	r0, #97	; 0x61
   807a0:	9002      	str	r0, [sp, #8]
   807a2:	9301      	str	r3, [sp, #4]
   807a4:	9200      	str	r2, [sp, #0]
   807a6:	2301      	movs	r3, #1
   807a8:	220a      	movs	r2, #10
   807aa:	4640      	mov	r0, r8
   807ac:	47c8      	blx	r9
   807ae:	4405      	add	r5, r0
   807b0:	e029      	b.n	80806 <print+0xa6>
   807b2:	6839      	ldr	r1, [r7, #0]
   807b4:	3704      	adds	r7, #4
   807b6:	2061      	movs	r0, #97	; 0x61
   807b8:	9002      	str	r0, [sp, #8]
   807ba:	9301      	str	r3, [sp, #4]
   807bc:	9200      	str	r2, [sp, #0]
   807be:	2300      	movs	r3, #0
   807c0:	2210      	movs	r2, #16
   807c2:	4640      	mov	r0, r8
   807c4:	47c8      	blx	r9
   807c6:	4405      	add	r5, r0
   807c8:	e01d      	b.n	80806 <print+0xa6>
   807ca:	6839      	ldr	r1, [r7, #0]
   807cc:	3704      	adds	r7, #4
   807ce:	2041      	movs	r0, #65	; 0x41
   807d0:	9002      	str	r0, [sp, #8]
   807d2:	9301      	str	r3, [sp, #4]
   807d4:	9200      	str	r2, [sp, #0]
   807d6:	2300      	movs	r3, #0
   807d8:	2210      	movs	r2, #16
   807da:	4640      	mov	r0, r8
   807dc:	47c8      	blx	r9
   807de:	4405      	add	r5, r0
   807e0:	e011      	b.n	80806 <print+0xa6>
   807e2:	6839      	ldr	r1, [r7, #0]
   807e4:	3704      	adds	r7, #4
   807e6:	2061      	movs	r0, #97	; 0x61
   807e8:	9002      	str	r0, [sp, #8]
   807ea:	9301      	str	r3, [sp, #4]
   807ec:	9200      	str	r2, [sp, #0]
   807ee:	2300      	movs	r3, #0
   807f0:	220a      	movs	r2, #10
   807f2:	4640      	mov	r0, r8
   807f4:	47c8      	blx	r9
   807f6:	4405      	add	r5, r0
   807f8:	e005      	b.n	80806 <print+0xa6>
   807fa:	46a3      	mov	fp, r4
   807fc:	f89b 0000 	ldrb.w	r0, [fp]
   80800:	47b0      	blx	r6
   80802:	3501      	adds	r5, #1
   80804:	465c      	mov	r4, fp
   80806:	f104 0b01 	add.w	fp, r4, #1
   8080a:	7863      	ldrb	r3, [r4, #1]
   8080c:	2b00      	cmp	r3, #0
   8080e:	d044      	beq.n	8089a <print+0x13a>
   80810:	2b25      	cmp	r3, #37	; 0x25
   80812:	d1f3      	bne.n	807fc <print+0x9c>
   80814:	f10b 0401 	add.w	r4, fp, #1
   80818:	f89b 3001 	ldrb.w	r3, [fp, #1]
   8081c:	2b00      	cmp	r3, #0
   8081e:	d03c      	beq.n	8089a <print+0x13a>
   80820:	2b25      	cmp	r3, #37	; 0x25
   80822:	d0ea      	beq.n	807fa <print+0x9a>
   80824:	2b2d      	cmp	r3, #45	; 0x2d
   80826:	bf06      	itte	eq
   80828:	f10b 0402 	addeq.w	r4, fp, #2
   8082c:	2301      	moveq	r3, #1
   8082e:	2300      	movne	r3, #0
   80830:	7822      	ldrb	r2, [r4, #0]
   80832:	2a30      	cmp	r2, #48	; 0x30
   80834:	d105      	bne.n	80842 <print+0xe2>
   80836:	f043 0302 	orr.w	r3, r3, #2
   8083a:	f814 2f01 	ldrb.w	r2, [r4, #1]!
   8083e:	2a30      	cmp	r2, #48	; 0x30
   80840:	d0f9      	beq.n	80836 <print+0xd6>
   80842:	7821      	ldrb	r1, [r4, #0]
   80844:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   80848:	b2d2      	uxtb	r2, r2
   8084a:	2a09      	cmp	r2, #9
   8084c:	d899      	bhi.n	80782 <print+0x22>
   8084e:	2200      	movs	r2, #0
   80850:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80854:	3930      	subs	r1, #48	; 0x30
   80856:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   8085a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   8085e:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   80862:	b2c0      	uxtb	r0, r0
   80864:	2809      	cmp	r0, #9
   80866:	d9f3      	bls.n	80850 <print+0xf0>
   80868:	2973      	cmp	r1, #115	; 0x73
   8086a:	d08c      	beq.n	80786 <print+0x26>
   8086c:	2964      	cmp	r1, #100	; 0x64
   8086e:	d094      	beq.n	8079a <print+0x3a>
   80870:	2978      	cmp	r1, #120	; 0x78
   80872:	d09e      	beq.n	807b2 <print+0x52>
   80874:	2958      	cmp	r1, #88	; 0x58
   80876:	d0a8      	beq.n	807ca <print+0x6a>
   80878:	2975      	cmp	r1, #117	; 0x75
   8087a:	d0b2      	beq.n	807e2 <print+0x82>
   8087c:	2963      	cmp	r1, #99	; 0x63
   8087e:	d1c2      	bne.n	80806 <print+0xa6>
   80880:	6839      	ldr	r1, [r7, #0]
   80882:	3704      	adds	r7, #4
   80884:	f88d 1014 	strb.w	r1, [sp, #20]
   80888:	2100      	movs	r1, #0
   8088a:	f88d 1015 	strb.w	r1, [sp, #21]
   8088e:	a905      	add	r1, sp, #20
   80890:	4640      	mov	r0, r8
   80892:	47d0      	blx	sl
   80894:	4405      	add	r5, r0
   80896:	e7b6      	b.n	80806 <print+0xa6>
   80898:	2500      	movs	r5, #0
   8089a:	f1b8 0f00 	cmp.w	r8, #0
   8089e:	d003      	beq.n	808a8 <print+0x148>
   808a0:	f8d8 3000 	ldr.w	r3, [r8]
   808a4:	2200      	movs	r2, #0
   808a6:	701a      	strb	r2, [r3, #0]
   808a8:	4628      	mov	r0, r5
   808aa:	b007      	add	sp, #28
   808ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   808b0:	0008094d 	.word	0x0008094d
   808b4:	00081390 	.word	0x00081390
   808b8:	000805f9 	.word	0x000805f9
   808bc:	000806a5 	.word	0x000806a5

000808c0 <printf>:
   808c0:	b40f      	push	{r0, r1, r2, r3}
   808c2:	b500      	push	{lr}
   808c4:	b083      	sub	sp, #12
   808c6:	aa04      	add	r2, sp, #16
   808c8:	f852 1b04 	ldr.w	r1, [r2], #4
   808cc:	9201      	str	r2, [sp, #4]
   808ce:	2000      	movs	r0, #0
   808d0:	4b03      	ldr	r3, [pc, #12]	; (808e0 <printf+0x20>)
   808d2:	4798      	blx	r3
   808d4:	b003      	add	sp, #12
   808d6:	f85d eb04 	ldr.w	lr, [sp], #4
   808da:	b004      	add	sp, #16
   808dc:	4770      	bx	lr
   808de:	bf00      	nop
   808e0:	00080761 	.word	0x00080761

000808e4 <configure_uart>:
	uint32_t ul_sr;

/*
Initialize UART ring buffer as empty
*/
rx_buffer.head=0;
   808e4:	4b16      	ldr	r3, [pc, #88]	; (80940 <configure_uart+0x5c>)
   808e6:	2200      	movs	r2, #0
   808e8:	701a      	strb	r2, [r3, #0]
rx_buffer.tail=0;
   808ea:	705a      	strb	r2, [r3, #1]
/*
Initialize UART communication
*/
	// Pin configuration
	// Disable interrupts on Uart receive (URXD) and transmit (UTXD) pins
	PIOA->PIO_IDR = PIO_PA8A_URXD | PIO_PA9A_UTXD;
   808ec:	4b15      	ldr	r3, [pc, #84]	; (80944 <configure_uart+0x60>)
   808ee:	f44f 7140 	mov.w	r1, #768	; 0x300
   808f2:	6459      	str	r1, [r3, #68]	; 0x44

	// Disable the Parallel IO (PIO) of the URXD and UTXD pins so that the peripheral controller can use them
	PIOA->PIO_PDR = PIO_PA8A_URXD | PIO_PA9A_UTXD;
   808f4:	6059      	str	r1, [r3, #4]

	// Read current peripheral AB select register and set the UTXD and URXD pins to 0 (UART is connected as peripheral A)
	ul_sr = PIOA->PIO_ABSR;
   808f6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
	PIOA->PIO_ABSR &= ~(PIO_PA8A_URXD | PIO_PA9A_UTXD) & ul_sr;
   808f8:	6f18      	ldr	r0, [r3, #112]	; 0x70
   808fa:	4002      	ands	r2, r0
   808fc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80900:	671a      	str	r2, [r3, #112]	; 0x70

	// Enable pull up resistor on URXD and UTXD pin
	PIOA->PIO_PUER = PIO_PA8A_URXD | PIO_PA9A_UTXD;
   80902:	6659      	str	r1, [r3, #100]	; 0x64

	// Uart configuration
	
	// Enable the peripheral UART controller in Power Management Controller (PMC)
	PMC->PMC_PCER0 = 1 << ID_UART;
   80904:	f44f 7280 	mov.w	r2, #256	; 0x100
   80908:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8090c:	611a      	str	r2, [r3, #16]

	// Reset and disable receiver and transmitter
	UART->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX | UART_CR_RXDIS | UART_CR_TXDIS;
   8090e:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80912:	21ac      	movs	r1, #172	; 0xac
   80914:	6019      	str	r1, [r3, #0]

	// Set the baudrate
	UART->UART_BRGR = 547; // MCK / 16 * x = BaudRate (write x into UART_BRGR)  
   80916:	f240 2123 	movw	r1, #547	; 0x223
   8091a:	6219      	str	r1, [r3, #32]

	// No parity bits
	UART->UART_MR = UART_MR_PAR_NO | UART_MR_CHMODE_NORMAL;	
   8091c:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80920:	6059      	str	r1, [r3, #4]

	// Disable PDC channel
	UART->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   80922:	f240 2102 	movw	r1, #514	; 0x202
   80926:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120

	// Configure interrupts on receive ready and errors
	UART->UART_IDR = 0xFFFFFFFF;
   8092a:	f04f 31ff 	mov.w	r1, #4294967295
   8092e:	60d9      	str	r1, [r3, #12]
	UART->UART_IER = UART_IER_RXRDY | UART_IER_OVRE | UART_IER_FRAME | UART_IER_PARE;
   80930:	21e1      	movs	r1, #225	; 0xe1
   80932:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   80934:	4904      	ldr	r1, [pc, #16]	; (80948 <configure_uart+0x64>)
   80936:	600a      	str	r2, [r1, #0]

	// Enable UART interrupt in the Nested Vectored Interrupt Controller(NVIC)
	NVIC_EnableIRQ((IRQn_Type) ID_UART);

	// Enable UART receiver and transmitter
	UART->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80938:	2250      	movs	r2, #80	; 0x50
   8093a:	601a      	str	r2, [r3, #0]
   8093c:	4770      	bx	lr
   8093e:	bf00      	nop
   80940:	20000460 	.word	0x20000460
   80944:	400e0e00 	.word	0x400e0e00
   80948:	e000e100 	.word	0xe000e100

0008094c <uart_putchar>:
 * \retval Success(0) or failure(1).
 */
int uart_putchar(const uint8_t c)
{
	// Check if the transmitter is ready
	if((UART->UART_SR & UART_SR_TXRDY) != UART_SR_TXRDY)
   8094c:	4b07      	ldr	r3, [pc, #28]	; (8096c <uart_putchar+0x20>)
   8094e:	695b      	ldr	r3, [r3, #20]
   80950:	f013 0f02 	tst.w	r3, #2
   80954:	d008      	beq.n	80968 <uart_putchar+0x1c>
	return 1;

	// Send the character
	UART->UART_THR = c;
   80956:	4b05      	ldr	r3, [pc, #20]	; (8096c <uart_putchar+0x20>)
   80958:	61d8      	str	r0, [r3, #28]
	while(!((UART->UART_SR) & UART_SR_TXEMPTY)); // Wait for the character to be sent, can implement ring buffer to remove the wait
   8095a:	461a      	mov	r2, r3
   8095c:	6953      	ldr	r3, [r2, #20]
   8095e:	f413 7f00 	tst.w	r3, #512	; 0x200
   80962:	d0fb      	beq.n	8095c <uart_putchar+0x10>
	return 0;
   80964:	2000      	movs	r0, #0
   80966:	4770      	bx	lr
	return 1;
   80968:	2001      	movs	r0, #1
}
   8096a:	4770      	bx	lr
   8096c:	400e0800 	.word	0x400e0800

00080970 <UART_Handler>:

void UART_Handler(void)
{
   80970:	b508      	push	{r3, lr}
	uint32_t status = UART->UART_SR;
   80972:	4b15      	ldr	r3, [pc, #84]	; (809c8 <UART_Handler+0x58>)
   80974:	695b      	ldr	r3, [r3, #20]
	
	//Reset UART at overflow error and frame error
	if(status & (UART_SR_OVRE | UART_SR_FRAME | UART_SR_PARE))
   80976:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   8097a:	d003      	beq.n	80984 <UART_Handler+0x14>
	{
		UART->UART_CR = UART_CR_RXEN | UART_CR_TXEN | UART_CR_RSTSTA;
   8097c:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80980:	4a11      	ldr	r2, [pc, #68]	; (809c8 <UART_Handler+0x58>)
   80982:	6011      	str	r1, [r2, #0]
	}
	
	//Check if message is ready to be received
	if(status & UART_SR_RXRDY)
   80984:	f013 0f01 	tst.w	r3, #1
   80988:	d012      	beq.n	809b0 <UART_Handler+0x40>
	{
		//Check if receive ring buffer is full and 
		if((rx_buffer.tail + 1) % UART_RINGBUFFER_SIZE == rx_buffer.head)
   8098a:	4810      	ldr	r0, [pc, #64]	; (809cc <UART_Handler+0x5c>)
   8098c:	7842      	ldrb	r2, [r0, #1]
   8098e:	1c53      	adds	r3, r2, #1
   80990:	4259      	negs	r1, r3
   80992:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80996:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   8099a:	bf58      	it	pl
   8099c:	424b      	negpl	r3, r1
   8099e:	7801      	ldrb	r1, [r0, #0]
   809a0:	428b      	cmp	r3, r1
   809a2:	d006      	beq.n	809b2 <UART_Handler+0x42>
		{
			printf("ERR: UART RX buffer is full\n\r");
			rx_buffer.data[rx_buffer.tail] = UART->UART_RHR; //Throw away message
			return;
		}
		rx_buffer.data[rx_buffer.tail] = UART->UART_RHR;
   809a4:	4908      	ldr	r1, [pc, #32]	; (809c8 <UART_Handler+0x58>)
   809a6:	6988      	ldr	r0, [r1, #24]
   809a8:	4908      	ldr	r1, [pc, #32]	; (809cc <UART_Handler+0x5c>)
   809aa:	440a      	add	r2, r1
   809ac:	7090      	strb	r0, [r2, #2]
		rx_buffer.tail = (rx_buffer.tail + 1) % UART_RINGBUFFER_SIZE;
   809ae:	704b      	strb	r3, [r1, #1]
   809b0:	bd08      	pop	{r3, pc}
			printf("ERR: UART RX buffer is full\n\r");
   809b2:	4807      	ldr	r0, [pc, #28]	; (809d0 <UART_Handler+0x60>)
   809b4:	4b07      	ldr	r3, [pc, #28]	; (809d4 <UART_Handler+0x64>)
   809b6:	4798      	blx	r3
			rx_buffer.data[rx_buffer.tail] = UART->UART_RHR; //Throw away message
   809b8:	4b03      	ldr	r3, [pc, #12]	; (809c8 <UART_Handler+0x58>)
   809ba:	699a      	ldr	r2, [r3, #24]
   809bc:	4b03      	ldr	r3, [pc, #12]	; (809cc <UART_Handler+0x5c>)
   809be:	7859      	ldrb	r1, [r3, #1]
   809c0:	440b      	add	r3, r1
   809c2:	709a      	strb	r2, [r3, #2]
			return;
   809c4:	bd08      	pop	{r3, pc}
   809c6:	bf00      	nop
   809c8:	400e0800 	.word	0x400e0800
   809cc:	20000460 	.word	0x20000460
   809d0:	00081398 	.word	0x00081398
   809d4:	000808c1 	.word	0x000808c1

000809d8 <__aeabi_drsub>:
   809d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   809dc:	e002      	b.n	809e4 <__adddf3>
   809de:	bf00      	nop

000809e0 <__aeabi_dsub>:
   809e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000809e4 <__adddf3>:
   809e4:	b530      	push	{r4, r5, lr}
   809e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   809ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
   809ee:	ea94 0f05 	teq	r4, r5
   809f2:	bf08      	it	eq
   809f4:	ea90 0f02 	teqeq	r0, r2
   809f8:	bf1f      	itttt	ne
   809fa:	ea54 0c00 	orrsne.w	ip, r4, r0
   809fe:	ea55 0c02 	orrsne.w	ip, r5, r2
   80a02:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80a06:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80a0a:	f000 80e2 	beq.w	80bd2 <__adddf3+0x1ee>
   80a0e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80a12:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80a16:	bfb8      	it	lt
   80a18:	426d      	neglt	r5, r5
   80a1a:	dd0c      	ble.n	80a36 <__adddf3+0x52>
   80a1c:	442c      	add	r4, r5
   80a1e:	ea80 0202 	eor.w	r2, r0, r2
   80a22:	ea81 0303 	eor.w	r3, r1, r3
   80a26:	ea82 0000 	eor.w	r0, r2, r0
   80a2a:	ea83 0101 	eor.w	r1, r3, r1
   80a2e:	ea80 0202 	eor.w	r2, r0, r2
   80a32:	ea81 0303 	eor.w	r3, r1, r3
   80a36:	2d36      	cmp	r5, #54	; 0x36
   80a38:	bf88      	it	hi
   80a3a:	bd30      	pophi	{r4, r5, pc}
   80a3c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80a40:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80a44:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80a48:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80a4c:	d002      	beq.n	80a54 <__adddf3+0x70>
   80a4e:	4240      	negs	r0, r0
   80a50:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80a54:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80a58:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80a5c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80a60:	d002      	beq.n	80a68 <__adddf3+0x84>
   80a62:	4252      	negs	r2, r2
   80a64:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80a68:	ea94 0f05 	teq	r4, r5
   80a6c:	f000 80a7 	beq.w	80bbe <__adddf3+0x1da>
   80a70:	f1a4 0401 	sub.w	r4, r4, #1
   80a74:	f1d5 0e20 	rsbs	lr, r5, #32
   80a78:	db0d      	blt.n	80a96 <__adddf3+0xb2>
   80a7a:	fa02 fc0e 	lsl.w	ip, r2, lr
   80a7e:	fa22 f205 	lsr.w	r2, r2, r5
   80a82:	1880      	adds	r0, r0, r2
   80a84:	f141 0100 	adc.w	r1, r1, #0
   80a88:	fa03 f20e 	lsl.w	r2, r3, lr
   80a8c:	1880      	adds	r0, r0, r2
   80a8e:	fa43 f305 	asr.w	r3, r3, r5
   80a92:	4159      	adcs	r1, r3
   80a94:	e00e      	b.n	80ab4 <__adddf3+0xd0>
   80a96:	f1a5 0520 	sub.w	r5, r5, #32
   80a9a:	f10e 0e20 	add.w	lr, lr, #32
   80a9e:	2a01      	cmp	r2, #1
   80aa0:	fa03 fc0e 	lsl.w	ip, r3, lr
   80aa4:	bf28      	it	cs
   80aa6:	f04c 0c02 	orrcs.w	ip, ip, #2
   80aaa:	fa43 f305 	asr.w	r3, r3, r5
   80aae:	18c0      	adds	r0, r0, r3
   80ab0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80ab4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80ab8:	d507      	bpl.n	80aca <__adddf3+0xe6>
   80aba:	f04f 0e00 	mov.w	lr, #0
   80abe:	f1dc 0c00 	rsbs	ip, ip, #0
   80ac2:	eb7e 0000 	sbcs.w	r0, lr, r0
   80ac6:	eb6e 0101 	sbc.w	r1, lr, r1
   80aca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80ace:	d31b      	bcc.n	80b08 <__adddf3+0x124>
   80ad0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80ad4:	d30c      	bcc.n	80af0 <__adddf3+0x10c>
   80ad6:	0849      	lsrs	r1, r1, #1
   80ad8:	ea5f 0030 	movs.w	r0, r0, rrx
   80adc:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80ae0:	f104 0401 	add.w	r4, r4, #1
   80ae4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80ae8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80aec:	f080 809a 	bcs.w	80c24 <__adddf3+0x240>
   80af0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80af4:	bf08      	it	eq
   80af6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80afa:	f150 0000 	adcs.w	r0, r0, #0
   80afe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80b02:	ea41 0105 	orr.w	r1, r1, r5
   80b06:	bd30      	pop	{r4, r5, pc}
   80b08:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80b0c:	4140      	adcs	r0, r0
   80b0e:	eb41 0101 	adc.w	r1, r1, r1
   80b12:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80b16:	f1a4 0401 	sub.w	r4, r4, #1
   80b1a:	d1e9      	bne.n	80af0 <__adddf3+0x10c>
   80b1c:	f091 0f00 	teq	r1, #0
   80b20:	bf04      	itt	eq
   80b22:	4601      	moveq	r1, r0
   80b24:	2000      	moveq	r0, #0
   80b26:	fab1 f381 	clz	r3, r1
   80b2a:	bf08      	it	eq
   80b2c:	3320      	addeq	r3, #32
   80b2e:	f1a3 030b 	sub.w	r3, r3, #11
   80b32:	f1b3 0220 	subs.w	r2, r3, #32
   80b36:	da0c      	bge.n	80b52 <__adddf3+0x16e>
   80b38:	320c      	adds	r2, #12
   80b3a:	dd08      	ble.n	80b4e <__adddf3+0x16a>
   80b3c:	f102 0c14 	add.w	ip, r2, #20
   80b40:	f1c2 020c 	rsb	r2, r2, #12
   80b44:	fa01 f00c 	lsl.w	r0, r1, ip
   80b48:	fa21 f102 	lsr.w	r1, r1, r2
   80b4c:	e00c      	b.n	80b68 <__adddf3+0x184>
   80b4e:	f102 0214 	add.w	r2, r2, #20
   80b52:	bfd8      	it	le
   80b54:	f1c2 0c20 	rsble	ip, r2, #32
   80b58:	fa01 f102 	lsl.w	r1, r1, r2
   80b5c:	fa20 fc0c 	lsr.w	ip, r0, ip
   80b60:	bfdc      	itt	le
   80b62:	ea41 010c 	orrle.w	r1, r1, ip
   80b66:	4090      	lslle	r0, r2
   80b68:	1ae4      	subs	r4, r4, r3
   80b6a:	bfa2      	ittt	ge
   80b6c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   80b70:	4329      	orrge	r1, r5
   80b72:	bd30      	popge	{r4, r5, pc}
   80b74:	ea6f 0404 	mvn.w	r4, r4
   80b78:	3c1f      	subs	r4, #31
   80b7a:	da1c      	bge.n	80bb6 <__adddf3+0x1d2>
   80b7c:	340c      	adds	r4, #12
   80b7e:	dc0e      	bgt.n	80b9e <__adddf3+0x1ba>
   80b80:	f104 0414 	add.w	r4, r4, #20
   80b84:	f1c4 0220 	rsb	r2, r4, #32
   80b88:	fa20 f004 	lsr.w	r0, r0, r4
   80b8c:	fa01 f302 	lsl.w	r3, r1, r2
   80b90:	ea40 0003 	orr.w	r0, r0, r3
   80b94:	fa21 f304 	lsr.w	r3, r1, r4
   80b98:	ea45 0103 	orr.w	r1, r5, r3
   80b9c:	bd30      	pop	{r4, r5, pc}
   80b9e:	f1c4 040c 	rsb	r4, r4, #12
   80ba2:	f1c4 0220 	rsb	r2, r4, #32
   80ba6:	fa20 f002 	lsr.w	r0, r0, r2
   80baa:	fa01 f304 	lsl.w	r3, r1, r4
   80bae:	ea40 0003 	orr.w	r0, r0, r3
   80bb2:	4629      	mov	r1, r5
   80bb4:	bd30      	pop	{r4, r5, pc}
   80bb6:	fa21 f004 	lsr.w	r0, r1, r4
   80bba:	4629      	mov	r1, r5
   80bbc:	bd30      	pop	{r4, r5, pc}
   80bbe:	f094 0f00 	teq	r4, #0
   80bc2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   80bc6:	bf06      	itte	eq
   80bc8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   80bcc:	3401      	addeq	r4, #1
   80bce:	3d01      	subne	r5, #1
   80bd0:	e74e      	b.n	80a70 <__adddf3+0x8c>
   80bd2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80bd6:	bf18      	it	ne
   80bd8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80bdc:	d029      	beq.n	80c32 <__adddf3+0x24e>
   80bde:	ea94 0f05 	teq	r4, r5
   80be2:	bf08      	it	eq
   80be4:	ea90 0f02 	teqeq	r0, r2
   80be8:	d005      	beq.n	80bf6 <__adddf3+0x212>
   80bea:	ea54 0c00 	orrs.w	ip, r4, r0
   80bee:	bf04      	itt	eq
   80bf0:	4619      	moveq	r1, r3
   80bf2:	4610      	moveq	r0, r2
   80bf4:	bd30      	pop	{r4, r5, pc}
   80bf6:	ea91 0f03 	teq	r1, r3
   80bfa:	bf1e      	ittt	ne
   80bfc:	2100      	movne	r1, #0
   80bfe:	2000      	movne	r0, #0
   80c00:	bd30      	popne	{r4, r5, pc}
   80c02:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   80c06:	d105      	bne.n	80c14 <__adddf3+0x230>
   80c08:	0040      	lsls	r0, r0, #1
   80c0a:	4149      	adcs	r1, r1
   80c0c:	bf28      	it	cs
   80c0e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   80c12:	bd30      	pop	{r4, r5, pc}
   80c14:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   80c18:	bf3c      	itt	cc
   80c1a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   80c1e:	bd30      	popcc	{r4, r5, pc}
   80c20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80c24:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   80c28:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   80c2c:	f04f 0000 	mov.w	r0, #0
   80c30:	bd30      	pop	{r4, r5, pc}
   80c32:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80c36:	bf1a      	itte	ne
   80c38:	4619      	movne	r1, r3
   80c3a:	4610      	movne	r0, r2
   80c3c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   80c40:	bf1c      	itt	ne
   80c42:	460b      	movne	r3, r1
   80c44:	4602      	movne	r2, r0
   80c46:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   80c4a:	bf06      	itte	eq
   80c4c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   80c50:	ea91 0f03 	teqeq	r1, r3
   80c54:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   80c58:	bd30      	pop	{r4, r5, pc}
   80c5a:	bf00      	nop

00080c5c <__aeabi_ui2d>:
   80c5c:	f090 0f00 	teq	r0, #0
   80c60:	bf04      	itt	eq
   80c62:	2100      	moveq	r1, #0
   80c64:	4770      	bxeq	lr
   80c66:	b530      	push	{r4, r5, lr}
   80c68:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80c6c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80c70:	f04f 0500 	mov.w	r5, #0
   80c74:	f04f 0100 	mov.w	r1, #0
   80c78:	e750      	b.n	80b1c <__adddf3+0x138>
   80c7a:	bf00      	nop

00080c7c <__aeabi_i2d>:
   80c7c:	f090 0f00 	teq	r0, #0
   80c80:	bf04      	itt	eq
   80c82:	2100      	moveq	r1, #0
   80c84:	4770      	bxeq	lr
   80c86:	b530      	push	{r4, r5, lr}
   80c88:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80c8c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80c90:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   80c94:	bf48      	it	mi
   80c96:	4240      	negmi	r0, r0
   80c98:	f04f 0100 	mov.w	r1, #0
   80c9c:	e73e      	b.n	80b1c <__adddf3+0x138>
   80c9e:	bf00      	nop

00080ca0 <__aeabi_f2d>:
   80ca0:	0042      	lsls	r2, r0, #1
   80ca2:	ea4f 01e2 	mov.w	r1, r2, asr #3
   80ca6:	ea4f 0131 	mov.w	r1, r1, rrx
   80caa:	ea4f 7002 	mov.w	r0, r2, lsl #28
   80cae:	bf1f      	itttt	ne
   80cb0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   80cb4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   80cb8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   80cbc:	4770      	bxne	lr
   80cbe:	f092 0f00 	teq	r2, #0
   80cc2:	bf14      	ite	ne
   80cc4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   80cc8:	4770      	bxeq	lr
   80cca:	b530      	push	{r4, r5, lr}
   80ccc:	f44f 7460 	mov.w	r4, #896	; 0x380
   80cd0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80cd4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   80cd8:	e720      	b.n	80b1c <__adddf3+0x138>
   80cda:	bf00      	nop

00080cdc <__aeabi_ul2d>:
   80cdc:	ea50 0201 	orrs.w	r2, r0, r1
   80ce0:	bf08      	it	eq
   80ce2:	4770      	bxeq	lr
   80ce4:	b530      	push	{r4, r5, lr}
   80ce6:	f04f 0500 	mov.w	r5, #0
   80cea:	e00a      	b.n	80d02 <__aeabi_l2d+0x16>

00080cec <__aeabi_l2d>:
   80cec:	ea50 0201 	orrs.w	r2, r0, r1
   80cf0:	bf08      	it	eq
   80cf2:	4770      	bxeq	lr
   80cf4:	b530      	push	{r4, r5, lr}
   80cf6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   80cfa:	d502      	bpl.n	80d02 <__aeabi_l2d+0x16>
   80cfc:	4240      	negs	r0, r0
   80cfe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80d02:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80d06:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80d0a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   80d0e:	f43f aedc 	beq.w	80aca <__adddf3+0xe6>
   80d12:	f04f 0203 	mov.w	r2, #3
   80d16:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   80d1a:	bf18      	it	ne
   80d1c:	3203      	addne	r2, #3
   80d1e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   80d22:	bf18      	it	ne
   80d24:	3203      	addne	r2, #3
   80d26:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   80d2a:	f1c2 0320 	rsb	r3, r2, #32
   80d2e:	fa00 fc03 	lsl.w	ip, r0, r3
   80d32:	fa20 f002 	lsr.w	r0, r0, r2
   80d36:	fa01 fe03 	lsl.w	lr, r1, r3
   80d3a:	ea40 000e 	orr.w	r0, r0, lr
   80d3e:	fa21 f102 	lsr.w	r1, r1, r2
   80d42:	4414      	add	r4, r2
   80d44:	e6c1      	b.n	80aca <__adddf3+0xe6>
   80d46:	bf00      	nop

00080d48 <__aeabi_dmul>:
   80d48:	b570      	push	{r4, r5, r6, lr}
   80d4a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80d4e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   80d52:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   80d56:	bf1d      	ittte	ne
   80d58:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   80d5c:	ea94 0f0c 	teqne	r4, ip
   80d60:	ea95 0f0c 	teqne	r5, ip
   80d64:	f000 f8de 	bleq	80f24 <__aeabi_dmul+0x1dc>
   80d68:	442c      	add	r4, r5
   80d6a:	ea81 0603 	eor.w	r6, r1, r3
   80d6e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   80d72:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   80d76:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   80d7a:	bf18      	it	ne
   80d7c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   80d80:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80d84:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   80d88:	d038      	beq.n	80dfc <__aeabi_dmul+0xb4>
   80d8a:	fba0 ce02 	umull	ip, lr, r0, r2
   80d8e:	f04f 0500 	mov.w	r5, #0
   80d92:	fbe1 e502 	umlal	lr, r5, r1, r2
   80d96:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   80d9a:	fbe0 e503 	umlal	lr, r5, r0, r3
   80d9e:	f04f 0600 	mov.w	r6, #0
   80da2:	fbe1 5603 	umlal	r5, r6, r1, r3
   80da6:	f09c 0f00 	teq	ip, #0
   80daa:	bf18      	it	ne
   80dac:	f04e 0e01 	orrne.w	lr, lr, #1
   80db0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   80db4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   80db8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   80dbc:	d204      	bcs.n	80dc8 <__aeabi_dmul+0x80>
   80dbe:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   80dc2:	416d      	adcs	r5, r5
   80dc4:	eb46 0606 	adc.w	r6, r6, r6
   80dc8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   80dcc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   80dd0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   80dd4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   80dd8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   80ddc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   80de0:	bf88      	it	hi
   80de2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   80de6:	d81e      	bhi.n	80e26 <__aeabi_dmul+0xde>
   80de8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   80dec:	bf08      	it	eq
   80dee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   80df2:	f150 0000 	adcs.w	r0, r0, #0
   80df6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80dfa:	bd70      	pop	{r4, r5, r6, pc}
   80dfc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   80e00:	ea46 0101 	orr.w	r1, r6, r1
   80e04:	ea40 0002 	orr.w	r0, r0, r2
   80e08:	ea81 0103 	eor.w	r1, r1, r3
   80e0c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   80e10:	bfc2      	ittt	gt
   80e12:	ebd4 050c 	rsbsgt	r5, r4, ip
   80e16:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   80e1a:	bd70      	popgt	{r4, r5, r6, pc}
   80e1c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80e20:	f04f 0e00 	mov.w	lr, #0
   80e24:	3c01      	subs	r4, #1
   80e26:	f300 80ab 	bgt.w	80f80 <__aeabi_dmul+0x238>
   80e2a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   80e2e:	bfde      	ittt	le
   80e30:	2000      	movle	r0, #0
   80e32:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   80e36:	bd70      	pople	{r4, r5, r6, pc}
   80e38:	f1c4 0400 	rsb	r4, r4, #0
   80e3c:	3c20      	subs	r4, #32
   80e3e:	da35      	bge.n	80eac <__aeabi_dmul+0x164>
   80e40:	340c      	adds	r4, #12
   80e42:	dc1b      	bgt.n	80e7c <__aeabi_dmul+0x134>
   80e44:	f104 0414 	add.w	r4, r4, #20
   80e48:	f1c4 0520 	rsb	r5, r4, #32
   80e4c:	fa00 f305 	lsl.w	r3, r0, r5
   80e50:	fa20 f004 	lsr.w	r0, r0, r4
   80e54:	fa01 f205 	lsl.w	r2, r1, r5
   80e58:	ea40 0002 	orr.w	r0, r0, r2
   80e5c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   80e60:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   80e64:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   80e68:	fa21 f604 	lsr.w	r6, r1, r4
   80e6c:	eb42 0106 	adc.w	r1, r2, r6
   80e70:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80e74:	bf08      	it	eq
   80e76:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80e7a:	bd70      	pop	{r4, r5, r6, pc}
   80e7c:	f1c4 040c 	rsb	r4, r4, #12
   80e80:	f1c4 0520 	rsb	r5, r4, #32
   80e84:	fa00 f304 	lsl.w	r3, r0, r4
   80e88:	fa20 f005 	lsr.w	r0, r0, r5
   80e8c:	fa01 f204 	lsl.w	r2, r1, r4
   80e90:	ea40 0002 	orr.w	r0, r0, r2
   80e94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80e98:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   80e9c:	f141 0100 	adc.w	r1, r1, #0
   80ea0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80ea4:	bf08      	it	eq
   80ea6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80eaa:	bd70      	pop	{r4, r5, r6, pc}
   80eac:	f1c4 0520 	rsb	r5, r4, #32
   80eb0:	fa00 f205 	lsl.w	r2, r0, r5
   80eb4:	ea4e 0e02 	orr.w	lr, lr, r2
   80eb8:	fa20 f304 	lsr.w	r3, r0, r4
   80ebc:	fa01 f205 	lsl.w	r2, r1, r5
   80ec0:	ea43 0302 	orr.w	r3, r3, r2
   80ec4:	fa21 f004 	lsr.w	r0, r1, r4
   80ec8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80ecc:	fa21 f204 	lsr.w	r2, r1, r4
   80ed0:	ea20 0002 	bic.w	r0, r0, r2
   80ed4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   80ed8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80edc:	bf08      	it	eq
   80ede:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80ee2:	bd70      	pop	{r4, r5, r6, pc}
   80ee4:	f094 0f00 	teq	r4, #0
   80ee8:	d10f      	bne.n	80f0a <__aeabi_dmul+0x1c2>
   80eea:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   80eee:	0040      	lsls	r0, r0, #1
   80ef0:	eb41 0101 	adc.w	r1, r1, r1
   80ef4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80ef8:	bf08      	it	eq
   80efa:	3c01      	subeq	r4, #1
   80efc:	d0f7      	beq.n	80eee <__aeabi_dmul+0x1a6>
   80efe:	ea41 0106 	orr.w	r1, r1, r6
   80f02:	f095 0f00 	teq	r5, #0
   80f06:	bf18      	it	ne
   80f08:	4770      	bxne	lr
   80f0a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   80f0e:	0052      	lsls	r2, r2, #1
   80f10:	eb43 0303 	adc.w	r3, r3, r3
   80f14:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   80f18:	bf08      	it	eq
   80f1a:	3d01      	subeq	r5, #1
   80f1c:	d0f7      	beq.n	80f0e <__aeabi_dmul+0x1c6>
   80f1e:	ea43 0306 	orr.w	r3, r3, r6
   80f22:	4770      	bx	lr
   80f24:	ea94 0f0c 	teq	r4, ip
   80f28:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   80f2c:	bf18      	it	ne
   80f2e:	ea95 0f0c 	teqne	r5, ip
   80f32:	d00c      	beq.n	80f4e <__aeabi_dmul+0x206>
   80f34:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   80f38:	bf18      	it	ne
   80f3a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   80f3e:	d1d1      	bne.n	80ee4 <__aeabi_dmul+0x19c>
   80f40:	ea81 0103 	eor.w	r1, r1, r3
   80f44:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80f48:	f04f 0000 	mov.w	r0, #0
   80f4c:	bd70      	pop	{r4, r5, r6, pc}
   80f4e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   80f52:	bf06      	itte	eq
   80f54:	4610      	moveq	r0, r2
   80f56:	4619      	moveq	r1, r3
   80f58:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   80f5c:	d019      	beq.n	80f92 <__aeabi_dmul+0x24a>
   80f5e:	ea94 0f0c 	teq	r4, ip
   80f62:	d102      	bne.n	80f6a <__aeabi_dmul+0x222>
   80f64:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   80f68:	d113      	bne.n	80f92 <__aeabi_dmul+0x24a>
   80f6a:	ea95 0f0c 	teq	r5, ip
   80f6e:	d105      	bne.n	80f7c <__aeabi_dmul+0x234>
   80f70:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   80f74:	bf1c      	itt	ne
   80f76:	4610      	movne	r0, r2
   80f78:	4619      	movne	r1, r3
   80f7a:	d10a      	bne.n	80f92 <__aeabi_dmul+0x24a>
   80f7c:	ea81 0103 	eor.w	r1, r1, r3
   80f80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80f84:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   80f88:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   80f8c:	f04f 0000 	mov.w	r0, #0
   80f90:	bd70      	pop	{r4, r5, r6, pc}
   80f92:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   80f96:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   80f9a:	bd70      	pop	{r4, r5, r6, pc}

00080f9c <__aeabi_ddiv>:
   80f9c:	b570      	push	{r4, r5, r6, lr}
   80f9e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80fa2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   80fa6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   80faa:	bf1d      	ittte	ne
   80fac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   80fb0:	ea94 0f0c 	teqne	r4, ip
   80fb4:	ea95 0f0c 	teqne	r5, ip
   80fb8:	f000 f8a7 	bleq	8110a <__aeabi_ddiv+0x16e>
   80fbc:	eba4 0405 	sub.w	r4, r4, r5
   80fc0:	ea81 0e03 	eor.w	lr, r1, r3
   80fc4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   80fc8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80fcc:	f000 8088 	beq.w	810e0 <__aeabi_ddiv+0x144>
   80fd0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80fd4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   80fd8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   80fdc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   80fe0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   80fe4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   80fe8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   80fec:	ea4f 2600 	mov.w	r6, r0, lsl #8
   80ff0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   80ff4:	429d      	cmp	r5, r3
   80ff6:	bf08      	it	eq
   80ff8:	4296      	cmpeq	r6, r2
   80ffa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   80ffe:	f504 7440 	add.w	r4, r4, #768	; 0x300
   81002:	d202      	bcs.n	8100a <__aeabi_ddiv+0x6e>
   81004:	085b      	lsrs	r3, r3, #1
   81006:	ea4f 0232 	mov.w	r2, r2, rrx
   8100a:	1ab6      	subs	r6, r6, r2
   8100c:	eb65 0503 	sbc.w	r5, r5, r3
   81010:	085b      	lsrs	r3, r3, #1
   81012:	ea4f 0232 	mov.w	r2, r2, rrx
   81016:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8101a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   8101e:	ebb6 0e02 	subs.w	lr, r6, r2
   81022:	eb75 0e03 	sbcs.w	lr, r5, r3
   81026:	bf22      	ittt	cs
   81028:	1ab6      	subcs	r6, r6, r2
   8102a:	4675      	movcs	r5, lr
   8102c:	ea40 000c 	orrcs.w	r0, r0, ip
   81030:	085b      	lsrs	r3, r3, #1
   81032:	ea4f 0232 	mov.w	r2, r2, rrx
   81036:	ebb6 0e02 	subs.w	lr, r6, r2
   8103a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8103e:	bf22      	ittt	cs
   81040:	1ab6      	subcs	r6, r6, r2
   81042:	4675      	movcs	r5, lr
   81044:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   81048:	085b      	lsrs	r3, r3, #1
   8104a:	ea4f 0232 	mov.w	r2, r2, rrx
   8104e:	ebb6 0e02 	subs.w	lr, r6, r2
   81052:	eb75 0e03 	sbcs.w	lr, r5, r3
   81056:	bf22      	ittt	cs
   81058:	1ab6      	subcs	r6, r6, r2
   8105a:	4675      	movcs	r5, lr
   8105c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81060:	085b      	lsrs	r3, r3, #1
   81062:	ea4f 0232 	mov.w	r2, r2, rrx
   81066:	ebb6 0e02 	subs.w	lr, r6, r2
   8106a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8106e:	bf22      	ittt	cs
   81070:	1ab6      	subcs	r6, r6, r2
   81072:	4675      	movcs	r5, lr
   81074:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81078:	ea55 0e06 	orrs.w	lr, r5, r6
   8107c:	d018      	beq.n	810b0 <__aeabi_ddiv+0x114>
   8107e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81082:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   81086:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8108a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8108e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81092:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   81096:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8109a:	d1c0      	bne.n	8101e <__aeabi_ddiv+0x82>
   8109c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   810a0:	d10b      	bne.n	810ba <__aeabi_ddiv+0x11e>
   810a2:	ea41 0100 	orr.w	r1, r1, r0
   810a6:	f04f 0000 	mov.w	r0, #0
   810aa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   810ae:	e7b6      	b.n	8101e <__aeabi_ddiv+0x82>
   810b0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   810b4:	bf04      	itt	eq
   810b6:	4301      	orreq	r1, r0
   810b8:	2000      	moveq	r0, #0
   810ba:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   810be:	bf88      	it	hi
   810c0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   810c4:	f63f aeaf 	bhi.w	80e26 <__aeabi_dmul+0xde>
   810c8:	ebb5 0c03 	subs.w	ip, r5, r3
   810cc:	bf04      	itt	eq
   810ce:	ebb6 0c02 	subseq.w	ip, r6, r2
   810d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   810d6:	f150 0000 	adcs.w	r0, r0, #0
   810da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   810de:	bd70      	pop	{r4, r5, r6, pc}
   810e0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   810e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   810e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   810ec:	bfc2      	ittt	gt
   810ee:	ebd4 050c 	rsbsgt	r5, r4, ip
   810f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   810f6:	bd70      	popgt	{r4, r5, r6, pc}
   810f8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   810fc:	f04f 0e00 	mov.w	lr, #0
   81100:	3c01      	subs	r4, #1
   81102:	e690      	b.n	80e26 <__aeabi_dmul+0xde>
   81104:	ea45 0e06 	orr.w	lr, r5, r6
   81108:	e68d      	b.n	80e26 <__aeabi_dmul+0xde>
   8110a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8110e:	ea94 0f0c 	teq	r4, ip
   81112:	bf08      	it	eq
   81114:	ea95 0f0c 	teqeq	r5, ip
   81118:	f43f af3b 	beq.w	80f92 <__aeabi_dmul+0x24a>
   8111c:	ea94 0f0c 	teq	r4, ip
   81120:	d10a      	bne.n	81138 <__aeabi_ddiv+0x19c>
   81122:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   81126:	f47f af34 	bne.w	80f92 <__aeabi_dmul+0x24a>
   8112a:	ea95 0f0c 	teq	r5, ip
   8112e:	f47f af25 	bne.w	80f7c <__aeabi_dmul+0x234>
   81132:	4610      	mov	r0, r2
   81134:	4619      	mov	r1, r3
   81136:	e72c      	b.n	80f92 <__aeabi_dmul+0x24a>
   81138:	ea95 0f0c 	teq	r5, ip
   8113c:	d106      	bne.n	8114c <__aeabi_ddiv+0x1b0>
   8113e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81142:	f43f aefd 	beq.w	80f40 <__aeabi_dmul+0x1f8>
   81146:	4610      	mov	r0, r2
   81148:	4619      	mov	r1, r3
   8114a:	e722      	b.n	80f92 <__aeabi_dmul+0x24a>
   8114c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81150:	bf18      	it	ne
   81152:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81156:	f47f aec5 	bne.w	80ee4 <__aeabi_dmul+0x19c>
   8115a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8115e:	f47f af0d 	bne.w	80f7c <__aeabi_dmul+0x234>
   81162:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   81166:	f47f aeeb 	bne.w	80f40 <__aeabi_dmul+0x1f8>
   8116a:	e712      	b.n	80f92 <__aeabi_dmul+0x24a>

0008116c <__aeabi_d2uiz>:
   8116c:	004a      	lsls	r2, r1, #1
   8116e:	d211      	bcs.n	81194 <__aeabi_d2uiz+0x28>
   81170:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81174:	d211      	bcs.n	8119a <__aeabi_d2uiz+0x2e>
   81176:	d50d      	bpl.n	81194 <__aeabi_d2uiz+0x28>
   81178:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8117c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81180:	d40e      	bmi.n	811a0 <__aeabi_d2uiz+0x34>
   81182:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   81186:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8118a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8118e:	fa23 f002 	lsr.w	r0, r3, r2
   81192:	4770      	bx	lr
   81194:	f04f 0000 	mov.w	r0, #0
   81198:	4770      	bx	lr
   8119a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8119e:	d102      	bne.n	811a6 <__aeabi_d2uiz+0x3a>
   811a0:	f04f 30ff 	mov.w	r0, #4294967295
   811a4:	4770      	bx	lr
   811a6:	f04f 0000 	mov.w	r0, #0
   811aa:	4770      	bx	lr

000811ac <__libc_init_array>:
   811ac:	b570      	push	{r4, r5, r6, lr}
   811ae:	4e0f      	ldr	r6, [pc, #60]	; (811ec <__libc_init_array+0x40>)
   811b0:	4d0f      	ldr	r5, [pc, #60]	; (811f0 <__libc_init_array+0x44>)
   811b2:	1b76      	subs	r6, r6, r5
   811b4:	10b6      	asrs	r6, r6, #2
   811b6:	bf18      	it	ne
   811b8:	2400      	movne	r4, #0
   811ba:	d005      	beq.n	811c8 <__libc_init_array+0x1c>
   811bc:	3401      	adds	r4, #1
   811be:	f855 3b04 	ldr.w	r3, [r5], #4
   811c2:	4798      	blx	r3
   811c4:	42a6      	cmp	r6, r4
   811c6:	d1f9      	bne.n	811bc <__libc_init_array+0x10>
   811c8:	4e0a      	ldr	r6, [pc, #40]	; (811f4 <__libc_init_array+0x48>)
   811ca:	4d0b      	ldr	r5, [pc, #44]	; (811f8 <__libc_init_array+0x4c>)
   811cc:	f000 f8f6 	bl	813bc <_init>
   811d0:	1b76      	subs	r6, r6, r5
   811d2:	10b6      	asrs	r6, r6, #2
   811d4:	bf18      	it	ne
   811d6:	2400      	movne	r4, #0
   811d8:	d006      	beq.n	811e8 <__libc_init_array+0x3c>
   811da:	3401      	adds	r4, #1
   811dc:	f855 3b04 	ldr.w	r3, [r5], #4
   811e0:	4798      	blx	r3
   811e2:	42a6      	cmp	r6, r4
   811e4:	d1f9      	bne.n	811da <__libc_init_array+0x2e>
   811e6:	bd70      	pop	{r4, r5, r6, pc}
   811e8:	bd70      	pop	{r4, r5, r6, pc}
   811ea:	bf00      	nop
   811ec:	000813c8 	.word	0x000813c8
   811f0:	000813c8 	.word	0x000813c8
   811f4:	000813d0 	.word	0x000813d0
   811f8:	000813c8 	.word	0x000813c8

000811fc <register_fini>:
   811fc:	4b02      	ldr	r3, [pc, #8]	; (81208 <register_fini+0xc>)
   811fe:	b113      	cbz	r3, 81206 <register_fini+0xa>
   81200:	4802      	ldr	r0, [pc, #8]	; (8120c <register_fini+0x10>)
   81202:	f000 b805 	b.w	81210 <atexit>
   81206:	4770      	bx	lr
   81208:	00000000 	.word	0x00000000
   8120c:	0008121d 	.word	0x0008121d

00081210 <atexit>:
   81210:	2300      	movs	r3, #0
   81212:	4601      	mov	r1, r0
   81214:	461a      	mov	r2, r3
   81216:	4618      	mov	r0, r3
   81218:	f000 b81e 	b.w	81258 <__register_exitproc>

0008121c <__libc_fini_array>:
   8121c:	b538      	push	{r3, r4, r5, lr}
   8121e:	4c0a      	ldr	r4, [pc, #40]	; (81248 <__libc_fini_array+0x2c>)
   81220:	4d0a      	ldr	r5, [pc, #40]	; (8124c <__libc_fini_array+0x30>)
   81222:	1b64      	subs	r4, r4, r5
   81224:	10a4      	asrs	r4, r4, #2
   81226:	d00a      	beq.n	8123e <__libc_fini_array+0x22>
   81228:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   8122c:	3b01      	subs	r3, #1
   8122e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   81232:	3c01      	subs	r4, #1
   81234:	f855 3904 	ldr.w	r3, [r5], #-4
   81238:	4798      	blx	r3
   8123a:	2c00      	cmp	r4, #0
   8123c:	d1f9      	bne.n	81232 <__libc_fini_array+0x16>
   8123e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   81242:	f000 b8c5 	b.w	813d0 <_fini>
   81246:	bf00      	nop
   81248:	000813e0 	.word	0x000813e0
   8124c:	000813dc 	.word	0x000813dc

00081250 <__retarget_lock_acquire_recursive>:
   81250:	4770      	bx	lr
   81252:	bf00      	nop

00081254 <__retarget_lock_release_recursive>:
   81254:	4770      	bx	lr
   81256:	bf00      	nop

00081258 <__register_exitproc>:
   81258:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8125c:	4d2c      	ldr	r5, [pc, #176]	; (81310 <__register_exitproc+0xb8>)
   8125e:	4606      	mov	r6, r0
   81260:	6828      	ldr	r0, [r5, #0]
   81262:	4698      	mov	r8, r3
   81264:	460f      	mov	r7, r1
   81266:	4691      	mov	r9, r2
   81268:	f7ff fff2 	bl	81250 <__retarget_lock_acquire_recursive>
   8126c:	4b29      	ldr	r3, [pc, #164]	; (81314 <__register_exitproc+0xbc>)
   8126e:	681c      	ldr	r4, [r3, #0]
   81270:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   81274:	2b00      	cmp	r3, #0
   81276:	d03e      	beq.n	812f6 <__register_exitproc+0x9e>
   81278:	685a      	ldr	r2, [r3, #4]
   8127a:	2a1f      	cmp	r2, #31
   8127c:	dc1c      	bgt.n	812b8 <__register_exitproc+0x60>
   8127e:	f102 0e01 	add.w	lr, r2, #1
   81282:	b176      	cbz	r6, 812a2 <__register_exitproc+0x4a>
   81284:	2101      	movs	r1, #1
   81286:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   8128a:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8128e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   81292:	4091      	lsls	r1, r2
   81294:	4308      	orrs	r0, r1
   81296:	2e02      	cmp	r6, #2
   81298:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   8129c:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   812a0:	d023      	beq.n	812ea <__register_exitproc+0x92>
   812a2:	3202      	adds	r2, #2
   812a4:	f8c3 e004 	str.w	lr, [r3, #4]
   812a8:	6828      	ldr	r0, [r5, #0]
   812aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   812ae:	f7ff ffd1 	bl	81254 <__retarget_lock_release_recursive>
   812b2:	2000      	movs	r0, #0
   812b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   812b8:	4b17      	ldr	r3, [pc, #92]	; (81318 <__register_exitproc+0xc0>)
   812ba:	b30b      	cbz	r3, 81300 <__register_exitproc+0xa8>
   812bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
   812c0:	f3af 8000 	nop.w
   812c4:	4603      	mov	r3, r0
   812c6:	b1d8      	cbz	r0, 81300 <__register_exitproc+0xa8>
   812c8:	2000      	movs	r0, #0
   812ca:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   812ce:	f04f 0e01 	mov.w	lr, #1
   812d2:	6058      	str	r0, [r3, #4]
   812d4:	6019      	str	r1, [r3, #0]
   812d6:	4602      	mov	r2, r0
   812d8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   812dc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   812e0:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   812e4:	2e00      	cmp	r6, #0
   812e6:	d0dc      	beq.n	812a2 <__register_exitproc+0x4a>
   812e8:	e7cc      	b.n	81284 <__register_exitproc+0x2c>
   812ea:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   812ee:	4301      	orrs	r1, r0
   812f0:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   812f4:	e7d5      	b.n	812a2 <__register_exitproc+0x4a>
   812f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   812fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   812fe:	e7bb      	b.n	81278 <__register_exitproc+0x20>
   81300:	6828      	ldr	r0, [r5, #0]
   81302:	f7ff ffa7 	bl	81254 <__retarget_lock_release_recursive>
   81306:	f04f 30ff 	mov.w	r0, #4294967295
   8130a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8130e:	bf00      	nop
   81310:	20000430 	.word	0x20000430
   81314:	000813b8 	.word	0x000813b8
   81318:	00000000 	.word	0x00000000
   8131c:	304e4143 	.word	0x304e4143
   81320:	746e6920 	.word	0x746e6920
   81324:	75727265 	.word	0x75727265
   81328:	0d0a7470 	.word	0x0d0a7470
   8132c:	00000000 	.word	0x00000000
   81330:	304e4143 	.word	0x304e4143
   81334:	73656d20 	.word	0x73656d20
   81338:	65676173 	.word	0x65676173
   8133c:	72726120 	.word	0x72726120
   81340:	64657669 	.word	0x64657669
   81344:	206e6920 	.word	0x206e6920
   81348:	2d6e6f6e 	.word	0x2d6e6f6e
   8134c:	64657375 	.word	0x64657375
   81350:	69616d20 	.word	0x69616d20
   81354:	786f626c 	.word	0x786f626c
   81358:	00000d0a 	.word	0x00000d0a
   8135c:	7373656d 	.word	0x7373656d
   81360:	20656761 	.word	0x20656761
   81364:	203a6469 	.word	0x203a6469
   81368:	0d0a6425 	.word	0x0d0a6425
   8136c:	00000000 	.word	0x00000000
   81370:	7373656d 	.word	0x7373656d
   81374:	20656761 	.word	0x20656761
   81378:	61746164 	.word	0x61746164
   8137c:	6e656c20 	.word	0x6e656c20
   81380:	3a687467 	.word	0x3a687467
   81384:	0a642520 	.word	0x0a642520
   81388:	0000000d 	.word	0x0000000d
   8138c:	00206425 	.word	0x00206425
   81390:	6c756e28 	.word	0x6c756e28
   81394:	0000296c 	.word	0x0000296c
   81398:	3a525245 	.word	0x3a525245
   8139c:	52415520 	.word	0x52415520
   813a0:	58522054 	.word	0x58522054
   813a4:	66756220 	.word	0x66756220
   813a8:	20726566 	.word	0x20726566
   813ac:	66207369 	.word	0x66207369
   813b0:	0a6c6c75 	.word	0x0a6c6c75
   813b4:	0000000d 	.word	0x0000000d

000813b8 <_global_impure_ptr>:
   813b8:	20000008                                ... 

000813bc <_init>:
   813bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   813be:	bf00      	nop
   813c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   813c2:	bc08      	pop	{r3}
   813c4:	469e      	mov	lr, r3
   813c6:	4770      	bx	lr

000813c8 <__init_array_start>:
   813c8:	000811fd 	.word	0x000811fd

000813cc <__frame_dummy_init_array_entry>:
   813cc:	00080119                                ....

000813d0 <_fini>:
   813d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   813d2:	bf00      	nop
   813d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   813d6:	bc08      	pop	{r3}
   813d8:	469e      	mov	lr, r3
   813da:	4770      	bx	lr

000813dc <__fini_array_start>:
   813dc:	000800f5 	.word	0x000800f5
